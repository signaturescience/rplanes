[{"path":"https://signaturescience.github.io/rplanes/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Signature Science LLC Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://signaturescience.github.io/rplanes/articles/basic-usage.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Basic Usage","text":"rplanes package (plausibility analysis epidemiological signals) provides functionality prepare data analyze plausibility forecasted observed epidemiological signals. functions implement set plausibility algorithms agnostic geographic time resolutions calculated independently presented combined score. package allows users : Prepare signal data (either forecast observed) evaluated Create set baseline characteristics previously observed data Compare characteristics evaluated data location Synthesize individual component results overall score package workflow demonstrated detail (see Figure 1). Figure 1 provides detailed description workflow used rplanes. rplanes processing begins forecast observed data prepared pre-specified format. required input data format documented package. convenience, package includes read_forecast() function prepare forecast data quantile format commonly used forecasting hubs. prepped forecast observed data converted signal object using to_signal(). signal data compared baseline characteristics previously observed data location. characteristics aggregated using plane_seed(). seed signal data prepared, user can run plausibility scoring independently location evaluated data. Scores comprised individual binary plausibility components. functions drive component wrapped plane_score() function ease--use. default plane_score() wrapper try use relevant components, however user can dictate specific components needed. important note depending type signal evaluated (.e., forecast versus observed data), components may apply.","code":""},{"path":"https://signaturescience.github.io/rplanes/articles/basic-usage.html","id":"analyzing-plausibility-of-forecast-data","dir":"Articles","previous_headings":"","what":"Analyzing plausibility of forecast data","title":"Basic Usage","text":"Plausibility analysis can support operational forecasting outbreak analytic activities. demonstrate use rplanes score example forecasted data set. Several packages must loaded prior conducting analysis:","code":"library(rplanes) library(dplyr) library(purrr) library(ggplot2)"},{"path":"https://signaturescience.github.io/rplanes/articles/basic-usage.html","id":"prepare-observed-data","dir":"Articles","previous_headings":"Analyzing plausibility of forecast data","what":"Prepare observed data","title":"Basic Usage","text":"motivate example use incident flu hospitalization reported via HHS Protect. Note data aggregated daily weekly resolution, provided format internal rplanes package data. select columns ’re interested (“date”, “location”, “flu.admits”) make sure date field formatted date: important emphasize observed data must minimum include columns location (geographic unit FIPS code), date (date reported value; must date class), reported value location/date combination.","code":"hosp_all <-   read.csv(system.file(\"extdata/observed/hdgov_hosp_weekly.csv\", package = \"rplanes\")) %>%   select(date, location, flu.admits) %>%   mutate(date = as.Date(date))  head(hosp_all)"},{"path":"https://signaturescience.github.io/rplanes/articles/basic-usage.html","id":"convert-observed-data-into-a-signal-with-to_signal","dir":"Articles","previous_headings":"Analyzing plausibility of forecast data","what":"Convert observed data into a signal with to_signal()","title":"Basic Usage","text":"downstream plausibility analysis requires observed /forecasted data converted S3 “signal” class. to_signal() function constructs object applies additional “observed” “forecast” class depending type signal specified. convert observed data signal object:","code":"observed_signal <- to_signal(input = hosp_all, outcome = \"flu.admits\", type = \"observed\", resolution = \"weeks\", horizon = NULL)"},{"path":"https://signaturescience.github.io/rplanes/articles/basic-usage.html","id":"create-a-seed-from-the-observed-data-via-plane_seed","dir":"Articles","previous_headings":"Analyzing plausibility of forecast data","what":"Create a seed from the observed data via plane_seed()","title":"Basic Usage","text":"plane_seed() function provides means internally calculate store baseline characteristics observed data package calls “seed”. characteristics summarized independently location, used downstream scoring functions. example, input prepped observed signal object make use “cut_date” argument. restricting dates specified cut date, ensure baseline characteristics computed based data overlaps forecast. practice, may possible use default (NULL) cut date analyzing forecasts, long reported data available (exceeding) first horizon forecast.","code":"prepped_seed <- plane_seed(observed_signal, cut_date = \"2022-10-29\")"},{"path":"https://signaturescience.github.io/rplanes/articles/basic-usage.html","id":"prepare-forecast-data","dir":"Articles","previous_headings":"Analyzing plausibility of forecast data","what":"Prepare forecast data","title":"Basic Usage","text":"forecast data assessed must include point estimate representation uncertainty (.e., prediction interval) location horizon. analysis rplanes, forecast data must prepared include following: location: Geographic unit FIPS code date: Date corresponding forecast horizon horizon: Forecast horizon lower: Lower limit given prediction interval forecast point: Point estimate forecast upper: Upper limit given prediction interval forecast convenience, rplanes package includes read_forecast() convert forecasts quantile format used many forecast hubs1,2 format needed plausibility analysis. read_forecast() function reads csv input returns tibble summarized forecast data location horizon original file. example, use forecast incident weekly flu hospitalizations. forecast originally quantile format referenced included rplanes example data: can use read_forecast() load data convert required format:","code":"forecast_fp <- system.file(\"extdata/forecast/2022-10-31-SigSci-TSENS.csv\", package = \"rplanes\")  read.csv(forecast_fp) %>%    head(.) prepped_forecast <- read_forecast(forecast_fp)  head(prepped_forecast)"},{"path":"https://signaturescience.github.io/rplanes/articles/basic-usage.html","id":"convert-forecast-data-into-a-signal-with-to_signal","dir":"Articles","previous_headings":"Analyzing plausibility of forecast data","what":"Convert forecast data into a signal with to_signal()","title":"Basic Usage","text":"forecast formatted appropriately, can convert signal object:","code":"forecast_signal <-    prepped_forecast  %>%   to_signal(., outcome = \"flu.admits\", type = \"forecast\", resolution = \"weeks\", horizon = 4)"},{"path":"https://signaturescience.github.io/rplanes/articles/basic-usage.html","id":"run-plane_score-and-visualize-results","dir":"Articles","previous_headings":"Analyzing plausibility of forecast data","what":"Run plane_score() and visualize results","title":"Basic Usage","text":"planes_score() function wraps PLANES scoring plausibility components across locations single step. function can accept arguments specific component functions allows user dictate components use (default ). arguments see ?plane_score. pass input forecast signal function along prepped seed run scoring independently locations: Note forecasts evaluate time period, prepare forecast signal appropriately use seed (.e., recreate seed forecast). output plane_score() list scoring results locations. can convert scores_summary element list tibble. default, score uses equal weights components. However, users can modify behavior using “weights” argument needed. res object shows location, number flags raised (“n_flags”), weighted flags (“n_flags_weighted”), number components tested (“n_components”), overall sum weights components tested (“weights_denominator”), “score” (“n_flags_weighted” divided “weights_denominator”), names components tested, names components flagged ():  evaluated forecast, locations one fewer flags raised. However, several locations two three five possible components flagged implausibility.","code":"scores <- plane_score(input = forecast_signal, seed = prepped_seed) res <-   scores$scores_summary %>%   map_df(., as_tibble)    head(res) res %>%   count(n_flags) %>%   mutate(n_flags = as.character(n_flags)) %>%   ggplot(aes(n_flags,n)) +   geom_col() +   labs(x = \"Number of flags raised\", y = \"Count\")"},{"path":"https://signaturescience.github.io/rplanes/articles/basic-usage.html","id":"analyzing-plausibility-of-observed-data","dir":"Articles","previous_headings":"","what":"Analyzing plausibility of observed data","title":"Basic Usage","text":"One might want test observed reported data plausibility check phenomena like backfill systematic errors reporting mechanisms. steps use rplanes analyze plausibility observed data similar forecast assessments. input data must converted signal, passed (along seed) scoring function. However, key difference observed data data source used create input signal can used seeding, albeit cut date differentiate data evaluated baseline.","code":""},{"path":"https://signaturescience.github.io/rplanes/articles/basic-usage.html","id":"prepare-observed-data-1","dir":"Articles","previous_headings":"Analyzing plausibility of observed data","what":"Prepare observed data","title":"Basic Usage","text":"example, also use reported HHS Protect flu hospitalization data. However, truncate data stop end 2022. scenario, interested assessing recent reported week (.e., week 2022-12-31) plausibility. Note practice, may interest assess multiple time points recently observed data. begin, read data filter dates prior 2023:","code":"hosp_pre23 <-   read.csv(system.file(\"extdata/observed/hdgov_hosp_weekly.csv\", package = \"rplanes\")) %>%   select(date, location, flu.admits) %>%   mutate(date = as.Date(date)) %>%   filter(date < as.Date(\"2023-01-01\"))  head(hosp_pre23)"},{"path":"https://signaturescience.github.io/rplanes/articles/basic-usage.html","id":"convert-observed-data-into-a-signal-with-to_signal-1","dir":"Articles","previous_headings":"Analyzing plausibility of observed data","what":"Convert observed data into a signal with to_signal()","title":"Basic Usage","text":"data loaded, can convert hospitalization tibble signal object:","code":"observed_signal <- to_signal(input = hosp_pre23, outcome = \"flu.admits\", type = \"observed\", resolution = \"weeks\", horizon = NULL)"},{"path":"https://signaturescience.github.io/rplanes/articles/basic-usage.html","id":"create-a-seed-from-the-observed-data-via-plane_seed-1","dir":"Articles","previous_headings":"Analyzing plausibility of observed data","what":"Create a seed from the observed data via plane_seed()","title":"Basic Usage","text":"can use observed signal input plane_score(), also input plane_seed(). However, must use argument restricts seeding dates prior cut date (inclusive). example, assessing observed data week 2022-12-31 want seed plausibility analysis characteristics recent reported date (.e., 2022-12-24):","code":"prepped_seed <- plane_seed(observed_signal, cut_date = \"2022-12-24\")"},{"path":"https://signaturescience.github.io/rplanes/articles/basic-usage.html","id":"run-plane_score-and-visualize-results-1","dir":"Articles","previous_headings":"Analyzing plausibility of observed data","what":"Run plane_score() and visualize results","title":"Basic Usage","text":"forecast assessments, PLANES scoring wrapped convenience plane_score() function. Since assessing observed signal case, can explicitly tell scoring use certain components. important emphasize components work forecasts observed signals. Currently, plane_cover(), plane_taper(), plane_trend(), plane_shape() (run inside plane_score()) work forecasts observed data:  results indicate just one location flag raised. , case two components used scoring results interpreted accordingly. Furthermore, consider reported signals date observed data retrieved paramount. likely meaningful analyze plausibility observed data real time (near real time) opposed retrospectively, since backfill reporting issues may corrected prior assessment.","code":"scores <- plane_score(observed_signal, seed = prepped_seed, components = c(\"repeat\",\"diff\")) res <-   scores$scores_summary %>%   map_df(., as_tibble)    head(res) res %>%   count(n_flags) %>%   mutate(n_flags = as.character(n_flags)) %>%   ggplot(aes(n_flags,n)) +   geom_col() +   labs(x = \"Number of flags raised\", y = \"Count\")"},{"path":"https://signaturescience.github.io/rplanes/articles/planes-components.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"PLANES Components","text":"rplanes package currently set seven components perform plausibility analysis epidemiological signals (PLANES). individual components assesses different characteristics evaluated signal, resolving binary indicator (.e., TRUE FALSE whether signal implausible). components wrapped via plane_score() function generate overall score based number components flag raised. provide narrative walk individual PLANES components. full list components, along corresponding functions parameters (applicable), provided table . important emphasize rplanes designed work forecasted observed epidemiological signals. However, components work types signals. Several components (including coverage, taper, trend, shape) can used assess plausibility forecasts. components designed take location (.e., string specifying location code), signal prepared to_signal() evaluated, seed prepared plane_seed() holds baseline characteristics. customize behavior, functions accept additional arguments, detailed examples follow. component function returns list standardized minimum return “indicator” element, returns TRUE component flag raised (.e., data implausible) FALSE component flag raised (.e., data implausible). important emphasize individual components wrapped plane_score() function ease--use, practice users likely use wrapper instead accessing functions directly. However, examples use functions outside plane_score() clearly demonstrate operate. Likewise, created mock forecast data examples demonstrate usage. Users refer “Basic Usage” vignette practical guidance prepare data rplanes analyses.","code":""},{"path":"https://signaturescience.github.io/rplanes/articles/planes-components.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data preparation","title":"PLANES Components","text":"mentioned , data evaluated examples follow mock forecasts. compare forecasted values HHS Protect incident flu hospitalization data aggregated daily weekly resolution, provided internal rplanes package data. details data preparation rplanes see “Basic Usage” vignette. code load required packages, prepare observed data signal to_signal(), convert observed signal seed plane_seed(). Note examples use cut date “2022-06-04” seed data:","code":"## load packages library(rplanes) library(dplyr) library(ggplot2)  ## read in observed data hosp_all <-   read.csv(system.file(\"extdata/observed/hdgov_hosp_weekly.csv\", package = \"rplanes\")) %>%   select(date, location, flu.admits) %>%   mutate(date = as.Date(date))  ## prepare observed signal observed_signal <- to_signal(input = hosp_all, outcome = \"flu.admits\", type = \"observed\", resolution = \"weeks\", horizon = NULL)  ## create seed with cut date prepped_seed <- plane_seed(observed_signal, cut_date = \"2022-06-04\")"},{"path":"https://signaturescience.github.io/rplanes/articles/planes-components.html","id":"difference---plane_diff","dir":"Articles","previous_headings":"","what":"Difference - plane_diff()","title":"PLANES Components","text":"difference component checks point--point differences evaluated signal. component can used either forecasts observed signals. function internally computes maximum observed difference (using absolute value) checks see point--point differences evaluated data exceed threshold. , flag raised.","code":""},{"path":"https://signaturescience.github.io/rplanes/articles/planes-components.html","id":"flagged-as-implausible","dir":"Articles","previous_headings":"Difference - plane_diff()","what":"Flagged as implausible","title":"PLANES Components","text":"example uses forecasted signal 1 week-ahead forecast dramatically jumps recent observed data: seed stores last observed value maximum difference given location: expect implausibility flag raised case: can visualize point--point differences see data jumps forecast:","code":"point_est <- c(100, 120, 140, 160)  prepped_forecast <-   tibble(     location = \"01\",     date = seq(as.Date(\"2022-06-11\"), as.Date(\"2022-07-02\"), by = 7),     horizon = 1:4,     lower = point_est - c(10, 20, 30, 40),     ## make a large jump in hospitalizations to trigger diff component     point = point_est,     upper = point_est + c(10, 20, 30, 40),   ) %>%   to_signal(outcome = \"flu.admits\", type = \"forecast\", horizon = 4) prepped_forecast$data prepped_seed$`01`$last_value #> [1] 19  prepped_seed$`01`$diff$max #> [1] 21 plane_diff(location = \"01\", input = prepped_forecast, seed = prepped_seed) #> $indicator #> [1] TRUE #>  #> $values #> [1]  19 100 120 140 160 #>  #> $evaluated_differences #> [1] 81 20 20 20 #>  #> $maximum_difference #> [1] 21 diff_dat <-    prepped_forecast$data %>%   mutate(type = \"forecast\") %>%   rename(flu.admits = point) %>%   bind_rows(observed_signal$data %>% filter(location == \"01\") %>% filter(date <= \"2022-06-04\") %>% mutate(type=\"observed\"), . )  diff_flags <-   diff_dat %>%   filter(type == \"forecast\") %>%   filter(date == min(date))  diff_dat %>%   ggplot(mapping = aes(x = date, y = flu.admits)) +   geom_line(lty = \"dotted\") +   geom_line(aes(colour = type)) +   geom_point(aes(colour = type)) +   geom_point(data = diff_flags, mapping = aes(x = date, y = flu.admits), shape=23, size=4, color = \"black\") +   geom_ribbon(aes(ymin = lower, ymax = upper, fill = type), alpha = 0.2) +   xlab(\"Date\") +   ylab(\"Flu hospitalizations\") +   ggtitle(\"Difference component\\nFlagged\")"},{"path":"https://signaturescience.github.io/rplanes/articles/planes-components.html","id":"not-flagged-as-implausible","dir":"Articles","previous_headings":"Difference - plane_diff()","what":"Not flagged as implausible","title":"PLANES Components","text":"next example include data “jump” absolute difference beyond observed time series previously: , can see last value maximum observed difference given location used internally seed: Given max difference, expect implausibility flag raised case: plot shows forecasted data raise difference flag:","code":"point_est <- c(28, 31, 34, 37)  prepped_forecast <-   tibble(     location = \"01\",     date = seq(as.Date(\"2022-06-11\"), as.Date(\"2022-07-02\"), by = 7),     horizon = 1:4,     lower = point_est - c(5, 10, 15, 20),     point = point_est,     upper = point_est + c(5, 10, 15, 20),   ) %>%   to_signal(outcome = \"flu.admits\", type = \"forecast\", horizon = 4) prepped_forecast$data prepped_seed$`01`$last_value #> [1] 19  prepped_seed$`01`$diff$max #> [1] 21 plane_diff(location = \"01\", input = prepped_forecast, seed = prepped_seed) #> $indicator #> [1] FALSE #>  #> $values #> [1] 19 28 31 34 37 #>  #> $evaluated_differences #> [1] 9 3 3 3 #>  #> $maximum_difference #> [1] 21 diff_dat <-    prepped_forecast$data %>%   mutate(type = \"forecast\") %>%   rename(flu.admits = point) %>%   bind_rows(observed_signal$data %>% filter(location == \"01\") %>% filter(date <= \"2022-06-04\") %>% mutate(type=\"observed\"), . )  diff_dat %>%   ggplot(mapping = aes(x = date, y = flu.admits)) +   geom_line(lty = \"dotted\") +   geom_line(aes(colour = type)) +   geom_point(aes(colour = type)) +   geom_ribbon(aes(ymin = lower, ymax = upper, fill = type), alpha = 0.2) +   xlab(\"Date\") +   ylab(\"Flu hospitalizations\") +   ggtitle(\"Difference component\\nNot flagged\")"},{"path":"https://signaturescience.github.io/rplanes/articles/planes-components.html","id":"coverage---plane_cover","dir":"Articles","previous_headings":"","what":"Coverage - plane_cover()","title":"PLANES Components","text":"coverage component compares prediction interval first horizon evaluated signal recent value seed. interval cover recent data point, flag raised implausible. component requires prediction interval, can used assess plausibility forecast signals.","code":""},{"path":"https://signaturescience.github.io/rplanes/articles/planes-components.html","id":"flagged-as-implausible-1","dir":"Articles","previous_headings":"Coverage - plane_cover()","what":"Flagged as implausible","title":"PLANES Components","text":"can create forecast data includes prediction interval cover recent value seed: prediction interval quite narrow departs last observed value seed: expect coverage flag raised: plot shows coverage forecast prediction intervals relation seed data:","code":"## make sure the 1 week-ahead point estimate and PI do not cover the last reported obs point_est <- c(60, 62, 64, 66)  prepped_forecast <-   tibble(     location = \"01\",     date = seq(as.Date(\"2022-06-11\"), as.Date(\"2022-07-02\"), by = 7),     horizon = 1:4,     lower = point_est - c(2, 4, 6, 8),     point = point_est,     upper = point_est + c(2, 4, 6, 8)   ) %>%   to_signal(outcome = \"flu.admits\", type = \"forecast\", horizon = 4) prepped_forecast$data prepped_seed$`01`$last_value #> [1] 19 plane_cover(location = \"01\", input = prepped_forecast, seed = prepped_seed) #> $indicator #> [1] TRUE #>  #> $last_value #> [1] 19 #>  #> $bounds #> $bounds$lower #> [1] 58 #>  #> $bounds$upper #> [1] 62 cover_dat <-    prepped_forecast$data %>%   mutate(type = \"forecast\") %>%   rename(flu.admits = point) %>%   bind_rows(observed_signal$data %>% filter(location == \"01\") %>% filter(date <= \"2022-06-04\") %>% mutate(type=\"observed\"), . )  cov_flags <-   cover_dat %>%   filter(type == \"observed\") %>%   filter(date == max(date))  ggplot(data = cover_dat, mapping = aes(x = date, y = flu.admits)) +   geom_line(lty=\"dotted\") +   geom_line(aes(colour = type)) +   geom_point(aes(colour = type)) +   geom_point(data = cov_flags, mapping = aes(x = date, y = flu.admits), shape=23, size=4, color = \"black\") +   geom_ribbon(aes(ymin = lower, ymax = upper, fill = type), alpha = 0.2) +   xlab(\"Date\") +   ylab(\"Flu hospitalizations\") +   ggtitle(paste(\"Coverage component\\nFlagged\"))"},{"path":"https://signaturescience.github.io/rplanes/articles/planes-components.html","id":"not-flagged-as-implausible-1","dir":"Articles","previous_headings":"Coverage - plane_cover()","what":"Not flagged as implausible","title":"PLANES Components","text":"can put together example prediction interval first horizon covers recent value seed data: Given coverage, expect signal flagged implausible: , can visualize coverage forecast relative seed data:","code":"## make sure the 1 week-ahead point estimate and PI cover the last reported obs point_est <- c(28, 31, 34, 37)  prepped_forecast <-   tibble(     location = \"01\",     date = seq(as.Date(\"2022-06-11\"), as.Date(\"2022-07-02\"), by = 7),     horizon = 1:4,     lower = point_est - 28,     point = point_est,     upper = point_est + 28     ) %>%   to_signal(outcome = \"flu.admits\", type = \"forecast\", horizon = 4) prepped_forecast$data prepped_seed$`01`$last_value #> [1] 19 plane_cover(location = \"01\", input = prepped_forecast, seed = prepped_seed) #> $indicator #> [1] FALSE #>  #> $last_value #> [1] 19 #>  #> $bounds #> $bounds$lower #> [1] 0 #>  #> $bounds$upper #> [1] 56 cover_dat <-    prepped_forecast$data %>%   mutate(type = \"forecast\") %>%   rename(flu.admits = point) %>%   bind_rows(observed_signal$data %>% filter(location == \"01\") %>% filter(date <= \"2022-06-04\") %>% mutate(type=\"observed\"), . )  ggplot(data = cover_dat, mapping = aes(x = date, y = flu.admits)) +   geom_line(lty=\"dotted\") +   geom_line(aes(colour = type)) +   geom_point(aes(colour = type)) +   geom_ribbon(aes(ymin = lower, ymax = upper, fill = type), alpha = 0.2) +   xlab(\"Date\") +   ylab(\"Flu hospitalizations\") +   ggtitle(paste(\"Coverage component\\nNot flagged\"))"},{"path":"https://signaturescience.github.io/rplanes/articles/planes-components.html","id":"taper---plane_taper","dir":"Articles","previous_headings":"","what":"Taper - plane_taper()","title":"PLANES Components","text":"taper component checks whether prediction interval evaluated signal decreases width (.e., certainty increases) horizons progress. component requires prediction interval, can used assess plausibility forecast signals.","code":""},{"path":"https://signaturescience.github.io/rplanes/articles/planes-components.html","id":"flagged-as-implausible-2","dir":"Articles","previous_headings":"Taper - plane_taper()","what":"Flagged as implausible","title":"PLANES Components","text":"create mock forecast narrowing prediction interval: width prediction interval narrows 40 30 20 10 forecasted horizons. expect taper flag raised: plot visually demonstrates tapering effect:","code":"point_est <- c(30, 33, 36, 39)  prepped_forecast <-   tibble(     location = \"01\",     date = seq(as.Date(\"2022-06-11\"), as.Date(\"2022-07-02\"), by = 7),     horizon = 1:4,     ## make the lower and upper bounds get narrower as horizon increases     lower = point_est - c(20, 15, 10, 5),     point = point_est,     upper = point_est + c(20, 15, 10, 5)   ) %>%   to_signal(outcome = \"flu.admits\", type = \"forecast\", horizon = 4) prepped_forecast$data plane_taper(location = \"01\", input = prepped_forecast, seed = prepped_seed) #> $indicator #> [1] TRUE #>  #> $widths #> [1] 40 30 20 10 taper_dat <-    prepped_forecast$data %>%   mutate(type = \"forecast\") %>%   rename(flu.admits = point) %>%   bind_rows(observed_signal$data %>% filter(location == \"01\") %>% filter(date <= \"2022-06-04\") %>% mutate(type=\"observed\"), . )  taper_flags <-   taper_dat %>%   filter(type == \"forecast\")  taper_dat %>%   ggplot(data = taper_dat, mapping = aes(x = date, y = flu.admits)) +   geom_line(lty=\"dotted\") +   geom_line(aes(colour = type)) +   geom_point(aes(colour = type)) +   geom_point(data = taper_flags, mapping = aes(x = date, y = flu.admits), shape=23, size=4, color = \"black\") +   geom_ribbon(aes(ymin = lower, ymax = upper, fill = type), alpha = 0.2) +   xlab(\"Date\") +   ylab(\"Flu Hospital Admissions\") +   ggtitle(paste(\"Taper component\\nFlagged\"))"},{"path":"https://signaturescience.github.io/rplanes/articles/planes-components.html","id":"not-flagged-as-implausible-2","dir":"Articles","previous_headings":"Taper - plane_taper()","what":"Not flagged as implausible","title":"PLANES Components","text":"Now can look example forecasted prediction interval increases width horizons progress: expect implausibility flag raised case: visualization see forecast prediction interval taper:","code":"point_est <- c(30, 33, 36, 39)  prepped_forecast <-   tibble(     location = \"01\",     date = seq(as.Date(\"2022-06-11\"), as.Date(\"2022-07-02\"), by = 7),     horizon = 1:4,     ## make the lower and upper bounds get wider as horizon increases     lower = point_est - c(5, 10, 15, 20),     point = point_est,     upper = point_est + c(5, 10, 15, 20)   ) %>%   to_signal(outcome = \"flu.admits\", type = \"forecast\", horizon = 4) prepped_forecast$data plane_taper(location = \"01\", input = prepped_forecast, seed = prepped_seed) #> $indicator #> [1] FALSE #>  #> $widths #> [1] 10 20 30 40 taper_dat <-    prepped_forecast$data %>%   mutate(type = \"forecast\") %>%   rename(flu.admits = point) %>%   bind_rows(observed_signal$data %>% filter(location == \"01\") %>% filter(date <= \"2022-06-04\") %>% mutate(type=\"observed\"), . )  taper_dat %>%   ggplot(data = taper_dat, mapping = aes(x = date, y = flu.admits)) +   geom_line(lty=\"dotted\") +   geom_line(aes(colour = type)) +   geom_point(aes(colour = type)) +   geom_ribbon(aes(ymin = lower, ymax = upper, fill = type), alpha = 0.2) +   xlab(\"Date\") +   ylab(\"Flu Hospital Admissions\") +   ggtitle(paste(\"Taper component\\nNot flagged\"))"},{"path":"https://signaturescience.github.io/rplanes/articles/planes-components.html","id":"repeat---plane_repeat","dir":"Articles","previous_headings":"","what":"Repeat - plane_repeat()","title":"PLANES Components","text":"repeat component checks whether consecutive values observed forecasted signal repeated k times. seed created, stores maximum number consecutive repeats location uses default value k. evaluated data exceeds k signal considered implausible flag raised. k threshold repeats can customized using “tolerance” parameter. function also allows users customize “prepend” length (.e., number recent values seed concatenated evaluated signal checking repeats). illustrate repeat parameters, can contrive simple example. Consider seed values 11, 12, 13, 13, 13 evaluated forecast point estimates 13, 13, 15, 16. tolerance threshold set 4 prepend length 2 sequence 13, 13, 13, 13, 15, 16 checked set four values repeated consecutively. case, flag raised. value 13 repeated four times tolerate four repeats. However, keep tolerance 4 change prepend length 3, evaluated sequence 13, 13, 13, 13, 13, 15, 16, flag raised, repeats tolerance threshold. parameters see ?plane_repeat().","code":""},{"path":"https://signaturescience.github.io/rplanes/articles/planes-components.html","id":"flagged-as-implausible-3","dir":"Articles","previous_headings":"Repeat - plane_repeat()","what":"Flagged as implausible","title":"PLANES Components","text":"can mock example data repeats point estimate: can check maximum number repeats seen seed data: number repeated point estimates defined exceeds maximum repeats expect flag raised: can visualize repeats forecast data:","code":"## make sure the point estimates repeat point_est <- c(55, 55, 55, 55)  prepped_forecast <-   tibble(     location = \"01\",     date = seq(as.Date(\"2022-06-11\"), as.Date(\"2022-07-02\"), by = 7),     horizon = 1:4,     lower = point_est - c(5, 10, 15, 20),     point = point_est,     upper = point_est + c(5, 10, 15, 20)     ) %>%   to_signal(outcome = \"flu.admits\", type = \"forecast\", horizon = 4) prepped_forecast$data prepped_seed$`01`$max_repeats #> [1] 2 plane_repeat(location = \"01\", input = prepped_forecast, seed = prepped_seed, tolerance = NULL, prepend = NULL) #> $indicator #> [1] TRUE #>  #> $repeats #> # A tibble: 4 × 6 #>   point location date       horizon lower upper #>   <dbl> <chr>    <date>       <int> <dbl> <dbl> #> 1    55 01       2022-06-11       1    50    60 #> 2    55 01       2022-06-18       2    45    65 #> 3    55 01       2022-06-25       3    40    70 #> 4    55 01       2022-07-02       4    35    75 repeat_dat <-    prepped_forecast$data %>%   mutate(type = \"forecast\") %>%   rename(flu.admits = point) %>%   bind_rows(observed_signal$data %>% filter(location == \"01\") %>% filter(date <= \"2022-06-04\") %>% mutate(type=\"observed\"), . )  repeat_flags <-   repeat_dat %>%   filter(type == \"forecast\")  repeat_dat %>%   ggplot(data = repeat_dat, mapping = aes(x = date, y = flu.admits)) +   geom_line(lty=\"dotted\") +   geom_line(aes(colour = type)) +   geom_point(aes(colour = type)) +   geom_point(data = repeat_flags, mapping = aes(x = date, y = flu.admits), shape=23, size=4, color = \"black\") +   geom_ribbon(aes(ymin = lower, ymax = upper,fill = type), alpha = 0.2) +   xlab(\"Date\") +   ylab(\"Flu hospitalizations\") +   ggtitle(paste(\"Repeat component\\nFlagged\"))"},{"path":"https://signaturescience.github.io/rplanes/articles/planes-components.html","id":"controlling-sensitivity-with-parameters","dir":"Articles","previous_headings":"Repeat - plane_repeat()","what":"Controlling sensitivity with parameters","title":"PLANES Components","text":"described , “tolerance” parameter allows user override default behavior sets maximum number repeats via seed. Setting higher tolerance decrease sensitivity repeat assessment. example, increase tolerance 4 expect flag raised:","code":"plane_repeat(location = \"01\", input = prepped_forecast, seed = prepped_seed, tolerance = 4, prepend = NULL) #> $indicator #> [1] FALSE #>  #> $repeats #> # A tibble: 0 × 6 #> # ℹ 6 variables: point <dbl>, location <chr>, date <date>, horizon <int>, #> #   lower <dbl>, upper <dbl>"},{"path":"https://signaturescience.github.io/rplanes/articles/planes-components.html","id":"not-flagged-as-implausible-3","dir":"Articles","previous_headings":"Repeat - plane_repeat()","what":"Not flagged as implausible","title":"PLANES Components","text":"prepare mock forecast data repeating point estimates: can see maximum number repeats seed: Based threshold, expect implausibility flag repeats raised: Lastly, can visualize repeats signal:","code":"## make sure the point estimates do not repeat point_est <- c(55, 57, 59, 61)  prepped_forecast <-   tibble(     location = \"01\",     date = seq(as.Date(\"2022-06-11\"), as.Date(\"2022-07-02\"), by = 7),     horizon = 1:4,     lower = point_est - c(5, 10, 15, 20),     point = point_est,     upper = point_est + c(5, 10, 15, 20)     ) %>%     to_signal(outcome = \"flu.admits\", type = \"forecast\", horizon = 4) prepped_forecast$data prepped_seed$`01`$max_repeats #> [1] 2 plane_repeat(location = \"01\", input = prepped_forecast, seed = prepped_seed, tolerance = NULL, prepend = NULL) #> $indicator #> [1] FALSE #>  #> $repeats #> # A tibble: 0 × 6 #> # ℹ 6 variables: point <dbl>, location <chr>, date <date>, horizon <int>, #> #   lower <dbl>, upper <dbl> repeat_dat <-    prepped_forecast$data %>%   mutate(type = \"forecast\") %>%   rename(flu.admits = point) %>%   bind_rows(observed_signal$data %>% filter(location == \"01\") %>% filter(date <= \"2022-06-04\") %>% mutate(type=\"observed\"), . )  repeat_dat %>%   ggplot(data = repeat_dat, mapping = aes(x = date, y = flu.admits)) +   geom_line(lty=\"dotted\") +   geom_line(aes(colour = type)) +   geom_point(aes(colour = type)) +   geom_ribbon(aes(ymin = lower, ymax = upper, fill = type), alpha = 0.2) +   xlab(\"Date\") +   ylab(\"Flu hospitalizations\") +   ggtitle(paste(\"Repeat component\\nNot flagged\"))"},{"path":"https://signaturescience.github.io/rplanes/articles/planes-components.html","id":"trend---plane_trend","dir":"Articles","previous_headings":"","what":"Trend - plane_trend()","title":"PLANES Components","text":"trend component assesses whether significant change magnitude direction slope evaluated signal compared recent data seed. “change point” identified forecasted horizons /recent seed value, flag raised implausibility. trend component requires least four times many seed values evaluated values. Furthermore, component currently can used forecasted signals. One parameters trend function “sig_lvl”, defines significance level internal permutation test used detect change points. default value set 0.1. significance level determines sensitivity trend plausibility assessment, lower value corresponding less sensitive evaluation. trend algorithm methods see ?plane_trend().","code":""},{"path":"https://signaturescience.github.io/rplanes/articles/planes-components.html","id":"flagged-as-implausible-4","dir":"Articles","previous_headings":"Trend - plane_trend()","what":"Flagged as implausible","title":"PLANES Components","text":"create example data doubles forecasted horizon: expect dramatic increase slope detected change point flag raised: plot shows forecasted value identified change point:","code":"point_est <- c(25, 50, 100, 200)  prepped_forecast <-   tibble(     location = \"01\",     date = seq(as.Date(\"2022-06-11\"), as.Date(\"2022-07-02\"), by = 7),     horizon = 1:4,     lower = point_est - c(5, 10, 20, 40),     point = point_est,     upper = point_est + c(5, 10, 20, 40),   ) %>%   to_signal(outcome = \"flu.admits\", type = \"forecast\", horizon = 4) prepped_forecast$data plane_trend(location = \"01\", input = prepped_forecast, seed = prepped_seed, sig_lvl = 0.1) #> $indicator #> [1] TRUE #>  #> $output #> # A tibble: 20 × 7 #>    Location Index Date       Value Type     Changepoint Flagged #>    <chr>    <int> <date>     <dbl> <chr>    <lgl>       <lgl>   #>  1 01           1 2022-02-19    20 Observed FALSE       FALSE   #>  2 01           2 2022-02-26    14 Observed FALSE       FALSE   #>  3 01           3 2022-03-05    35 Observed FALSE       FALSE   #>  4 01           4 2022-03-12    30 Observed FALSE       FALSE   #>  5 01           5 2022-03-19    30 Observed FALSE       FALSE   #>  6 01           6 2022-03-26    25 Observed FALSE       FALSE   #>  7 01           7 2022-04-02    32 Observed FALSE       FALSE   #>  8 01           8 2022-04-09    29 Observed FALSE       FALSE   #>  9 01           9 2022-04-16    19 Observed FALSE       FALSE   #> 10 01          10 2022-04-23    30 Observed FALSE       FALSE   #> 11 01          11 2022-04-30    13 Observed FALSE       FALSE   #> 12 01          12 2022-05-07    25 Observed FALSE       FALSE   #> 13 01          13 2022-05-14    15 Observed FALSE       FALSE   #> 14 01          14 2022-05-21    12 Observed FALSE       FALSE   #> 15 01          15 2022-05-28    22 Observed FALSE       FALSE   #> 16 01          16 2022-06-04    19 Observed FALSE       FALSE   #> 17 01          17 2022-06-11    25 Forecast FALSE       FALSE   #> 18 01          18 2022-06-18    50 Forecast TRUE        TRUE    #> 19 01          19 2022-06-25   100 Forecast FALSE       FALSE   #> 20 01          20 2022-07-02   200 Forecast FALSE       FALSE   #>  #> $flagged_dates #> [1] \"2022-06-18\" trend_dat <-    prepped_forecast$data %>%   mutate(type = \"forecast\") %>%   rename(flu.admits = point) %>%   bind_rows(observed_signal$data %>% filter(location == \"01\") %>% filter(date <= \"2022-06-04\") %>% mutate(type=\"observed\"), . )  trend_flags <-   plane_trend(location = \"01\", input = prepped_forecast, seed = prepped_seed, sig_lvl = 0.1)$output %>%   filter(Changepoint == TRUE)   ggplot(data = trend_dat, mapping = aes(x = date, y = flu.admits)) +   geom_line(lty=\"dotted\") +   geom_line(aes(colour = type)) +   geom_point(aes(colour = type)) +   geom_ribbon(aes(ymin = lower, ymax = upper, fill = type), alpha = 0.2) +   geom_point(data = trend_flags, mapping = aes(x = Date, y = Value), shape=23, size=4) +   xlab(\"Date\") +   ylab(\"Flu hospitalizations\") +   ggtitle(paste(\"Trend component\\nFlagged\"))"},{"path":"https://signaturescience.github.io/rplanes/articles/planes-components.html","id":"controlling-sensitivity-with-parameters-1","dir":"Articles","previous_headings":"Trend - plane_trend()","what":"Controlling sensitivity with parameters","title":"PLANES Components","text":"toggling significance level, can control sensitivity trend assessment. lower significance level 0.001 see flag longer raised using data :","code":"plane_trend(location = \"01\", input = prepped_forecast, seed = prepped_seed, sig_lvl = 0.001) #> $indicator #> [1] FALSE #>  #> $output #> # A tibble: 20 × 7 #>    Location Index Date       Value Type     Changepoint Flagged #>    <chr>    <int> <date>     <dbl> <chr>    <lgl>       <lgl>   #>  1 01           1 2022-02-19    20 Observed FALSE       FALSE   #>  2 01           2 2022-02-26    14 Observed FALSE       FALSE   #>  3 01           3 2022-03-05    35 Observed FALSE       FALSE   #>  4 01           4 2022-03-12    30 Observed FALSE       FALSE   #>  5 01           5 2022-03-19    30 Observed FALSE       FALSE   #>  6 01           6 2022-03-26    25 Observed FALSE       FALSE   #>  7 01           7 2022-04-02    32 Observed FALSE       FALSE   #>  8 01           8 2022-04-09    29 Observed FALSE       FALSE   #>  9 01           9 2022-04-16    19 Observed FALSE       FALSE   #> 10 01          10 2022-04-23    30 Observed FALSE       FALSE   #> 11 01          11 2022-04-30    13 Observed FALSE       FALSE   #> 12 01          12 2022-05-07    25 Observed FALSE       FALSE   #> 13 01          13 2022-05-14    15 Observed FALSE       FALSE   #> 14 01          14 2022-05-21    12 Observed FALSE       FALSE   #> 15 01          15 2022-05-28    22 Observed FALSE       FALSE   #> 16 01          16 2022-06-04    19 Observed FALSE       FALSE   #> 17 01          17 2022-06-11    25 Forecast FALSE       FALSE   #> 18 01          18 2022-06-18    50 Forecast FALSE       FALSE   #> 19 01          19 2022-06-25   100 Forecast FALSE       FALSE   #> 20 01          20 2022-07-02   200 Forecast FALSE       FALSE   #>  #> $flagged_dates #> [1] NA"},{"path":"https://signaturescience.github.io/rplanes/articles/planes-components.html","id":"not-flagged-as-implausible-4","dir":"Articles","previous_headings":"Trend - plane_trend()","what":"Not flagged as implausible","title":"PLANES Components","text":"can also make example data reflects consistent trend seed: case expect implausibility flag raised: visualization shows consistency forecasted trend comparison data seed:  Note cases plane_trend() identify change point seed data raise implausibility flag forecast. trend component checks change points forecasted horizons recent value seed. significant change point found elsewhere seed time series, function raise flag. However, output includes change points detected regardless whether raised implausibility flag. demonstrate , can look location “06”. example, need define new prepped_seed object change point occurs previously defined cut date: case expect implausibility flag raised, see change point: Note 2022-09-17, change point detected, forecast, last observed data point flag raised. visualization shows change point observed data:","code":"point_est <- c(40, 41, 40, 43)  prepped_forecast <-   tibble(     location = \"01\",     date = seq(as.Date(\"2022-06-11\"), as.Date(\"2022-07-02\"), by = 7),     horizon = 1:4,     lower = point_est - c(5, 10, 15, 20),     point = point_est,     upper = point_est + c(5, 10, 15, 20),   ) %>%   to_signal(outcome = \"flu.admits\", type = \"forecast\", horizon = 4) prepped_forecast$data plane_trend(location = \"01\", input = prepped_forecast, seed = prepped_seed, sig_lvl = 0.1) #> $indicator #> [1] FALSE #>  #> $output #> # A tibble: 20 × 7 #>    Location Index Date       Value Type     Changepoint Flagged #>    <chr>    <int> <date>     <dbl> <chr>    <lgl>       <lgl>   #>  1 01           1 2022-02-19    20 Observed FALSE       FALSE   #>  2 01           2 2022-02-26    14 Observed FALSE       FALSE   #>  3 01           3 2022-03-05    35 Observed FALSE       FALSE   #>  4 01           4 2022-03-12    30 Observed FALSE       FALSE   #>  5 01           5 2022-03-19    30 Observed FALSE       FALSE   #>  6 01           6 2022-03-26    25 Observed FALSE       FALSE   #>  7 01           7 2022-04-02    32 Observed FALSE       FALSE   #>  8 01           8 2022-04-09    29 Observed FALSE       FALSE   #>  9 01           9 2022-04-16    19 Observed FALSE       FALSE   #> 10 01          10 2022-04-23    30 Observed FALSE       FALSE   #> 11 01          11 2022-04-30    13 Observed FALSE       FALSE   #> 12 01          12 2022-05-07    25 Observed FALSE       FALSE   #> 13 01          13 2022-05-14    15 Observed FALSE       FALSE   #> 14 01          14 2022-05-21    12 Observed FALSE       FALSE   #> 15 01          15 2022-05-28    22 Observed FALSE       FALSE   #> 16 01          16 2022-06-04    19 Observed FALSE       FALSE   #> 17 01          17 2022-06-11    40 Forecast FALSE       FALSE   #> 18 01          18 2022-06-18    41 Forecast FALSE       FALSE   #> 19 01          19 2022-06-25    40 Forecast FALSE       FALSE   #> 20 01          20 2022-07-02    43 Forecast FALSE       FALSE   #>  #> $flagged_dates #> [1] NA trend_dat <-    prepped_forecast$data %>%   mutate(type = \"forecast\") %>%   rename(flu.admits = point) %>%   bind_rows(observed_signal$data %>% filter(location == \"01\") %>% filter(date <= \"2022-06-04\") %>% mutate(type=\"observed\"), . )  trend_flags <-   plane_trend(location = \"01\", input = prepped_forecast, seed = prepped_seed, sig_lvl = 0.1)$output %>%   filter(Changepoint == TRUE)  ggplot(data = trend_dat, mapping = aes(x = date, y = flu.admits)) +   geom_line(lty=\"dotted\") +   geom_line(aes(colour = type)) +   geom_point(aes(colour = type)) +   geom_ribbon(aes(ymin = lower, ymax = upper, fill = type), alpha = 0.2) +   geom_point(data = trend_flags, mapping = aes(x = Date, y = Value), shape=23, size=4) +   xlab(\"Date\") +   ylab(\"Flu hospitalizations\") +   ggtitle(paste(\"Trend component\\nNot flagged\")) ## create seed with cut date prepped_seed2 <- plane_seed(observed_signal, cut_date = \"2022-10-29\") point_est <- c(40, 41, 40, 43)  prepped_forecast <-   tibble(     location = \"06\",     date = seq(as.Date(\"2022-11-05\"), as.Date(\"2022-11-26\"), by = 7),     horizon = 1:4,     lower = point_est - c(5, 10, 15, 20),     point = point_est,     upper = point_est + c(5, 10, 15, 20),   ) %>%   to_signal(outcome = \"flu.admits\", type = \"forecast\", horizon = 4) prepped_forecast$data plane_trend(location = \"06\", input = prepped_forecast, seed = prepped_seed2, sig_lvl = 0.1) #> $indicator #> [1] FALSE #>  #> $output #> # A tibble: 20 × 7 #>    Location Index Date       Value Type     Changepoint Flagged #>    <chr>    <int> <date>     <dbl> <chr>    <lgl>       <lgl>   #>  1 06           1 2022-07-16   102 Observed FALSE       FALSE   #>  2 06           2 2022-07-23    64 Observed FALSE       FALSE   #>  3 06           3 2022-07-30    46 Observed FALSE       FALSE   #>  4 06           4 2022-08-06    39 Observed FALSE       FALSE   #>  5 06           5 2022-08-13    38 Observed FALSE       FALSE   #>  6 06           6 2022-08-20    39 Observed FALSE       FALSE   #>  7 06           7 2022-08-27    33 Observed FALSE       FALSE   #>  8 06           8 2022-09-03    35 Observed FALSE       FALSE   #>  9 06           9 2022-09-10    29 Observed FALSE       FALSE   #> 10 06          10 2022-09-17    24 Observed TRUE        FALSE   #> 11 06          11 2022-09-24    35 Observed FALSE       FALSE   #> 12 06          12 2022-10-01    72 Observed FALSE       FALSE   #> 13 06          13 2022-10-08    93 Observed FALSE       FALSE   #> 14 06          14 2022-10-15    97 Observed FALSE       FALSE   #> 15 06          15 2022-10-22   124 Observed FALSE       FALSE   #> 16 06          16 2022-10-29   211 Observed FALSE       FALSE   #> 17 06          17 2022-11-05    40 Forecast FALSE       FALSE   #> 18 06          18 2022-11-12    41 Forecast FALSE       FALSE   #> 19 06          19 2022-11-19    40 Forecast FALSE       FALSE   #> 20 06          20 2022-11-26    43 Forecast FALSE       FALSE   #>  #> $flagged_dates #> [1] NA trend_dat <-    prepped_forecast$data %>%   mutate(type = \"forecast\") %>%   rename(flu.admits = point) %>%   bind_rows(observed_signal$data %>% filter(location == \"06\") %>% filter(date <= \"2022-10-29\") %>% mutate(type=\"observed\"), . )  trend_flags <-   plane_trend(location = \"06\", input = prepped_forecast, seed = prepped_seed2, sig_lvl = 0.1)$output %>%   filter(Changepoint == TRUE)  ggplot(data = trend_dat, mapping = aes(x = date, y = flu.admits)) +   geom_line(lty=\"dotted\") +   geom_line(aes(colour = type)) +   geom_point(aes(colour = type)) +   geom_ribbon(aes(ymin = lower, ymax = upper, fill = type), alpha = 0.2) +   geom_point(data = trend_flags, mapping = aes(x = Date, y = Value), shape=23, size=4) +   xlab(\"Date\") +   ylab(\"Flu hospitalizations\") +   ggtitle(paste(\"Trend component\\nNot flagged but change point in seed\"))"},{"path":"https://signaturescience.github.io/rplanes/articles/planes-components.html","id":"shape---plane_shape","dir":"Articles","previous_headings":"","what":"Shape - plane_shape()","title":"PLANES Components","text":"shape component evaluates shape trajectory forecast signal compares shape existing shapes observed seed data. shape identified novel, flag raised, signal considered implausible. function uses Dynamic Time Warping (DTW) identify shapes flag novel shapes. function works three broad steps. First, prepared seed data divided set sliding windows, representing subset total trajectory shape observed data. Second, shape-based DTW distances calculated every combination observed sliding windows, distances used calibrate distance threshold define whether signal shape novel. Third, calculate DTW distances forecast signal observed sliding windows. distances less defined threshold, shape novel, flag raised, forecast considered plausible. information shape algorithm, see ?plane_shape().","code":""},{"path":"https://signaturescience.github.io/rplanes/articles/planes-components.html","id":"flagged-as-implausible-5","dir":"Articles","previous_headings":"Shape - plane_shape()","what":"Flagged as implausible","title":"PLANES Components","text":"example , set point estimates prediction intervals forecast signal shape novel compared seed data (see plot ). expect implausibility flag raised example: indicator TRUE, meaning forecast implausible, shape novel relative seed data. can visualize shape differences see shape flagged. forecast plot (red line) clearly looks different shape observed seed data (blue line):","code":"point_est <- c(60, 60, 60, 10)  prepped_forecast <-   tibble(     location = \"01\",     date = seq(as.Date(\"2022-06-11\"), as.Date(\"2022-07-02\"), by = 7),     horizon = 1:4,     lower = point_est - 10,     ## make an unusual shape in hospitalizations to trigger shape component     point = point_est,     upper = point_est + 10,   ) %>%   to_signal(outcome = \"flu.admits\", type = \"forecast\", horizon = 4) prepped_forecast$data plane_shape(location = \"01\", input = prepped_forecast, seed = prepped_seed) #> $indicator #> [1] TRUE shape_dat <-    prepped_forecast$data %>%   mutate(type = \"forecast\") %>%   rename(flu.admits = point) %>%   bind_rows(observed_signal$data %>% filter(location == \"01\") %>% filter(date <= \"2022-06-04\") %>% mutate(type=\"observed\"), . )  shape_flags <-   shape_dat %>%   filter(type == \"forecast\")  shape_dat %>%   ggplot(mapping = aes(x = date, y = flu.admits)) +   geom_line(lty = \"dotted\") +   geom_line(aes(colour = type)) +   geom_point(aes(colour = type)) +   geom_ribbon(aes(ymin = lower, ymax = upper, fill = type), alpha = 0.2) +   geom_point(data = shape_flags, mapping = aes(x = date, y = flu.admits), shape=23, size=4, color = \"black\") +   xlab(\"Date\") +   ylab(\"Flu hospitalizations\") +   ggtitle(\"Shape component\\nFlagged\")"},{"path":"https://signaturescience.github.io/rplanes/articles/planes-components.html","id":"not-flagged-as-implausible-5","dir":"Articles","previous_headings":"Shape - plane_shape()","what":"Not flagged as implausible","title":"PLANES Components","text":"Next ’ll look example forecast familiar shape shouldn’t trigger flag: expect implausibility flag raised example: indicator FALSE, meaning forecast considered plausible, shape familiar relative seed data. can visualize shape similarities/differences see shape flagged. forecast plot (red line) looks similar shape see observed seed data (blue line) mid April mid June:","code":"point_est <- c(35, 18, 30, 20)  prepped_forecast <-   tibble(     location = \"01\",     date = seq(as.Date(\"2022-06-11\"), as.Date(\"2022-07-02\"), by = 7),     horizon = 1:4,     lower = point_est - 10,     ## make a familiar shape in hospitalizations to not trigger shape component     point = point_est,     upper = point_est + 10,   ) %>%   to_signal(outcome = \"flu.admits\", type = \"forecast\", horizon = 4) prepped_forecast$data plane_shape(location = \"01\", input = prepped_forecast, seed = prepped_seed) #> $indicator #> [1] FALSE shape_dat <-    prepped_forecast$data %>%   mutate(type = \"forecast\") %>%   rename(flu.admits = point) %>%   bind_rows(observed_signal$data %>% filter(location == \"01\") %>% filter(date <= \"2022-06-04\") %>% mutate(type=\"observed\"), . )   shape_dat %>%   ggplot(mapping = aes(x = date, y = flu.admits)) +   geom_line(lty = \"dotted\") +   geom_line(aes(colour = type)) +   geom_point(aes(colour = type)) +   geom_ribbon(aes(ymin = lower, ymax = upper, fill = type), alpha = 0.2) +   xlab(\"Date\") +   ylab(\"Flu hospitalizations\") +   ggtitle(\"Shape component\\nNot Flagged\")"},{"path":"https://signaturescience.github.io/rplanes/articles/planes-components.html","id":"zero---plane_zero","dir":"Articles","previous_headings":"","what":"Zero - plane_zero()","title":"PLANES Components","text":"function checks presence value(s) equal zero evaluated signal. zeros found, function look seed see zeros anywhere else time series. , function consider evaluated zero plausible flags raised (.e., indicator returned FALSE). , function consider evaluated zero implausible flag raised (.e., indicator returned TRUE). function can used either forecast observed signals.","code":""},{"path":"https://signaturescience.github.io/rplanes/articles/planes-components.html","id":"flagged-as-implausible-6","dir":"Articles","previous_headings":"Zero - plane_zero()","what":"Flagged as implausible","title":"PLANES Components","text":"example , add zero signal point estimate location seed zeros: seed stores logical indicating whether zeros present seed data, none example: expect implausibility flag raised location: indicator TRUE, meaning forecast signal implausible zeros forecast signal observed seed. can visualize . signal red (forecast example) zero early July, zeros found seed data blue.","code":"point_est <- c(31, 30, 31, 0)  prepped_forecast <-   tibble(     location = \"01\",     date = seq(as.Date(\"2022-06-11\"), as.Date(\"2022-07-02\"), by = 7),     horizon = 1:4,     lower = c(26,24,24,0),     ## add zeros in hospitalizations to trigger zero component     point = point_est,     upper = c(36,36,38,15)   ) %>%   to_signal(outcome = \"flu.admits\", type = \"forecast\", horizon = 4) prepped_forecast$data prepped_seed$`01`$any_zeros #> [1] FALSE plane_zero(location = \"01\", input = prepped_forecast, seed = prepped_seed) #> $indicator #> [1] TRUE zero_dat <-    prepped_forecast$data %>%   mutate(type = \"forecast\") %>%   rename(flu.admits = point) %>%   bind_rows(observed_signal$data %>% filter(location == \"01\") %>% filter(date <= \"2022-06-04\") %>% mutate(type=\"observed\"), . )  zero_flags <- zero_dat %>%   filter(flu.admits == 0)  zero_dat %>%   ggplot(mapping = aes(x = date, y = flu.admits)) +   geom_line(lty = \"dotted\") +   geom_line(aes(colour = type)) +   geom_point(data = zero_flags, mapping = aes(x = date, y = flu.admits), shape=23, size=4, color = \"black\") +   geom_point(aes(colour = type)) +   geom_ribbon(aes(ymin = lower, ymax = upper, fill = type), alpha = 0.2) +   xlab(\"Date\") +   ylab(\"Flu hospitalizations\") +   ggtitle(\"Zero component\\nFlagged\")"},{"path":"https://signaturescience.github.io/rplanes/articles/planes-components.html","id":"not-flagged-as-implausible-6","dir":"Articles","previous_headings":"Zero - plane_zero()","what":"Not flagged as implausible","title":"PLANES Components","text":"function trigger implausibility flag zero signal (either observed forecast) one seed. words, flag raised : (1) zeros signal (2) zeros seed. Let’s look example zeros signal (location “02”) seed. flag triggered: seed stores logical indicating whether zeros present seed data, zeros example: expect implausibility flag raised location: indicator FALSE, meaning forecast signal plausible, zeros forecast signal observed seed. can visualize . signal red (forecast example) zero around early-mid June, also zeros found seed data blue.","code":"point_est <- c(0, 6, 2, 3)  prepped_forecast <-   tibble(     location = \"02\",     date = seq(as.Date(\"2022-06-11\"), as.Date(\"2022-07-02\"), by = 7),     horizon = 1:4,     lower = c(0,5,0,1),     ## add zeros in hospitalizations     point = point_est,     upper = c(1,7,4,5),   ) %>%   to_signal(outcome = \"flu.admits\", type = \"forecast\", horizon = 4) prepped_forecast$data prepped_seed$`02`$any_zeros #> [1] TRUE plane_zero(location = \"02\", input = prepped_forecast, seed = prepped_seed) #> $indicator #> [1] FALSE zero_dat <-    prepped_forecast$data %>%   mutate(type = \"forecast\") %>%   rename(flu.admits = point) %>%   bind_rows(observed_signal$data %>% filter(location == \"02\") %>% filter(date <= \"2022-06-04\") %>% mutate(type=\"observed\"), . )  zero_flags <- zero_dat %>%   filter(flu.admits == 0)  zero_dat %>%   ggplot(mapping = aes(x = date, y = flu.admits)) +   geom_line(lty = \"dotted\") +   geom_line(aes(colour = type)) +   geom_point(data = zero_flags, mapping = aes(x = date, y = flu.admits), shape=23, size=4, color = \"black\") +   geom_point(aes(colour = type)) +   geom_ribbon(aes(ymin = lower, ymax = upper, fill = type), alpha = 0.2) +   xlab(\"Date\") +   ylab(\"Flu hospitalizations\") +   ggtitle(\"Zero component\\nNot Flagged\")"},{"path":"https://signaturescience.github.io/rplanes/articles/rplanes-explorer.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"rplanes Explorer","text":"rplanes features Shiny app allows users interact package functions perform plausibility analysis epidemiological signals. rplanes Explorer app developed maintained part R package. Users can launch app locally use hosted Shiny server running rplanes_explorer() function.","code":""},{"path":"https://signaturescience.github.io/rplanes/articles/rplanes-explorer.html","id":"analysis-steps","dir":"Articles","previous_headings":"","what":"Analysis steps","title":"rplanes Explorer","text":"application allows users run plausibility analysis several steps: Select type signal evaluated Upload data use plausibility analysis seed Upload data containing signal evaluated (observed signal identify number points evaluate) Enter resolution, outcome, forecast horizon (applicable) Optionally modify default parameters used analysis Click “Analyze”","code":""},{"path":"https://signaturescience.github.io/rplanes/articles/rplanes-explorer.html","id":"example-data","dir":"Articles","previous_headings":"","what":"Example data","title":"rplanes Explorer","text":"app includes example data help users familiarize plausibility analysis features. example based observed data originally obtained healthdata.gov flu admissions (“previous_day_admission_influenza_confirmed” field) aggregated location epidemiological week. data includes states national resolution United States. selection observed data used example provided : example forecast data set evaluated selected CDC FluSight hospitalization forecasts submitted 2021-2022 2022-2023 influenza seasons. selection forecast data used example provided :","code":""},{"path":[]},{"path":"https://signaturescience.github.io/rplanes/articles/rplanes-explorer.html","id":"inputs-and-outputs","dir":"Articles","previous_headings":"Usage","what":"Inputs and outputs","title":"rplanes Explorer","text":"app includes inputs type signal evaluated, file uploads (needed), parameter modifications. analysis complete, output analysis displayed visually user collection plots tables. “Help” tab app includes detailed information inputs outputs explorer app.","code":""},{"path":"https://signaturescience.github.io/rplanes/articles/rplanes-explorer.html","id":"launching-the-app","dir":"Articles","previous_headings":"Usage","what":"Launching the app","title":"rplanes Explorer","text":"app delivered function rplanes package. launch app, users can run rplanes_explorer() function. Note function wraps shiny::runApp() inherits arguments. example, adding argument launch.browser = TRUE open app web browser setting port = 80 run app port 80 localhost.","code":"library(rplanes) rplanes_explorer(host = \"0.0.0.0\", launch.browser = TRUE, port = 80)"},{"path":"https://signaturescience.github.io/rplanes/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"VP Nagraj. Author, maintainer. Desiree Williams. Author. Amy Benefield. Author.","code":""},{"path":"https://signaturescience.github.io/rplanes/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nagraj V, Williams D, Benefield (2024). rplanes: Plausibility Analysis Epidemiological Signals 'R'. R package version 0.0.3, https://signaturescience.github.io/rplanes/.","code":"@Manual{,   title = {rplanes: Plausibility Analysis of Epidemiological Signals in 'R'},   author = {VP Nagraj and Desiree Williams and Amy Benefield},   year = {2024},   note = {R package version 0.0.3},   url = {https://signaturescience.github.io/rplanes/}, }"},{"path":"https://signaturescience.github.io/rplanes/index.html","id":"rplanes","dir":"","previous_headings":"","what":"Plausibility Analysis of Epidemiological Signals in R","title":"Plausibility Analysis of Epidemiological Signals in R","text":"DEVELOPMENT STATUS: rplanes package actively developed. v0.0.2 package alpha release. Users aware may significant changes API phase.","code":""},{"path":"https://signaturescience.github.io/rplanes/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Plausibility Analysis of Epidemiological Signals in R","text":"rplanes package (plausibility analysis epidemiological signals) provides functionality prepare data analyze plausibility forecasted reported epidemiological signals. functions implement set plausibility algorithms agnostic geographic time resolutions calculated independently presented combined score.","code":""},{"path":"https://signaturescience.github.io/rplanes/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Plausibility Analysis of Epidemiological Signals in R","text":"","code":"#install.packages(\"remotes\") remotes::install_github(\"signaturescience/rplanes\", build_vignettes=TRUE)"},{"path":"https://signaturescience.github.io/rplanes/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Plausibility Analysis of Epidemiological Signals in R","text":"rplanes package includes vignettes describing package features detail. get started, refer “Basic Usage” vignette package website R console:","code":"vignette(\"basic-usage\", package=\"rplanes\")"},{"path":"https://signaturescience.github.io/rplanes/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Plausibility Analysis of Epidemiological Signals in R","text":"Please use GitHub issues report bugs request features. Contributions reviewed via pull requests.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/check_incomplete.html","id":null,"dir":"Reference","previous_headings":"","what":"Check completeness of seed and signal data — check_incomplete","title":"Check completeness of seed and signal data — check_incomplete","text":"unexported helper used internally valid_dates optionally issue warning potential completeness seed signal data based dates provided.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/check_incomplete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check completeness of seed and signal data — check_incomplete","text":"","code":"check_incomplete(seed_date, signal_date, resolution)"},{"path":"https://signaturescience.github.io/rplanes/reference/check_incomplete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check completeness of seed and signal data — check_incomplete","text":"seed_date Last date available seed object signal_date First date available signal object resolution Character vector specifying temporal resolution (e.g., \"weeks\", \"months\")","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/check_incomplete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check completeness of seed and signal data — check_incomplete","text":"Operates side-effect returns warning() seed signal dates combined indicate incomplete week month.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/create_sliding_windows_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Sliding windows — create_sliding_windows_df","title":"Sliding windows — create_sliding_windows_df","text":"unexported helper function used within plane_shape() generate sliding windows vector return data frame row subset (sliding window) time series. length windowed time series (therefore number columns) equal \"window_size\". number windows equal (length(vector) - window_size) + 1. example, given time series length 38 window size length 4, 35 windowed time series (rows), 4 time stamps (columns).","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/create_sliding_windows_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sliding windows — create_sliding_windows_df","text":"","code":"create_sliding_windows_df(vector, window_size)"},{"path":"https://signaturescience.github.io/rplanes/reference/create_sliding_windows_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sliding windows — create_sliding_windows_df","text":"vector numeric integer vector time series used create sliding windows window_size integer specifying size (.e., number elements) windowed time series desired","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/create_sliding_windows_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sliding windows — create_sliding_windows_df","text":"data.frame row subset (sliding window) time series.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/epiweek_start.html","id":null,"dir":"Reference","previous_headings":"","what":"Epiweek start — epiweek_start","title":"Epiweek start — epiweek_start","text":"unexported helper identifies date first day epiweek given date. function used internally inside valid_dates.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/epiweek_start.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Epiweek start — epiweek_start","text":"","code":"epiweek_start(date)"},{"path":"https://signaturescience.github.io/rplanes/reference/epiweek_start.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Epiweek start — epiweek_start","text":"date Date queried","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/epiweek_start.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Epiweek start — epiweek_start","text":"Date first day epiweek input date.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/is_forecast.html","id":null,"dir":"Reference","previous_headings":"","what":"Check forecast — is_forecast","title":"Check forecast — is_forecast","text":"function checks object class signal forecast.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/is_forecast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check forecast — is_forecast","text":"","code":"is_forecast(x)"},{"path":"https://signaturescience.github.io/rplanes/reference/is_forecast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check forecast — is_forecast","text":"x Input object checked","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/is_forecast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check forecast — is_forecast","text":"Logical whether input object inherits \"signal\" \"forecast\" classes.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/is_forecast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check forecast — is_forecast","text":"","code":"## get path to example forecast file fp <- system.file(\"extdata/forecast/2022-10-31-SigSci-TSENS.csv\", package = \"rplanes\") ex_forecast <- read_forecast(fp) sig <- to_signal(ex_forecast, outcome=\"flu.admits\", type=\"forecast\", horizon=4, resolution=\"weeks\") is_forecast(sig) #> [1] TRUE"},{"path":"https://signaturescience.github.io/rplanes/reference/is_observed.html","id":null,"dir":"Reference","previous_headings":"","what":"Check observed — is_observed","title":"Check observed — is_observed","text":"function checks object class signal observed.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/is_observed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check observed — is_observed","text":"","code":"is_observed(x)"},{"path":"https://signaturescience.github.io/rplanes/reference/is_observed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check observed — is_observed","text":"x Input object checked","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/is_observed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check observed — is_observed","text":"Logical whether input object inherits \"signal\" \"observed\" classes.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/is_observed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check observed — is_observed","text":"","code":"hosp <- read.csv(system.file(\"extdata/observed/hdgov_hosp_weekly.csv\", package = \"rplanes\")) hosp$date <- as.Date(hosp$date, format = \"%Y-%m-%d\") sig <- to_signal(hosp, outcome = \"flu.admits\", type = \"observed\", resolution = \"weeks\") is_observed(sig) #> [1] TRUE"},{"path":"https://signaturescience.github.io/rplanes/reference/month-subtraction.html","id":null,"dir":"Reference","previous_headings":"","what":"Month subtraction — %m-%","title":"Month subtraction — %m-%","text":"See lubridate::%m-% details.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/month-subtraction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Month subtraction — %m-%","text":"e1 period date-time object class POSIXlt, POSIXct Date. e2 period date-time object class POSIXlt, POSIXct Date. Note one e1 e2 must period date-time object.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/month-subtraction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Month subtraction — %m-%","text":"date-time object class POSIXlt, POSIXct Date","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/month_start.html","id":null,"dir":"Reference","previous_headings":"","what":"Month start — month_start","title":"Month start — month_start","text":"unexported helper identifies date first day month given date. function used internally inside valid_dates.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/month_start.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Month start — month_start","text":"","code":"month_start(date)"},{"path":"https://signaturescience.github.io/rplanes/reference/month_start.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Month start — month_start","text":"date Date queried","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/month_start.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Month start — month_start","text":"Date first day month input date.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://signaturescience.github.io/rplanes/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/plane_cover.html","id":null,"dir":"Reference","previous_headings":"","what":"Coverage component — plane_cover","title":"Coverage component — plane_cover","text":"function evaluates whether evaluated signal interval covers last observed value. interval used plausibility component drawn upper lower bounds forecasted prediction interval. , accepted signal format forecast, include upper lower bounds.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/plane_cover.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coverage component — plane_cover","text":"","code":"plane_cover(location, input, seed)"},{"path":"https://signaturescience.github.io/rplanes/reference/plane_cover.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coverage component — plane_cover","text":"location Character vector location code; location must appear input seed input Input signal data scored; object must one forecast seed Prepared seed","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/plane_cover.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coverage component — plane_cover","text":"list following values: indicator: Logical whether last value falls outside interval (e.g., lower upper bounds prediction interval) evaluated signal last_value: vector last value recorded seed bounds: list two elements corresponding upper lower bounds evaluated signal interval","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/plane_cover.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coverage component — plane_cover","text":"","code":"## read in example observed data and prep observed signal hosp <- read.csv(system.file(\"extdata/observed/hdgov_hosp_weekly.csv\", package = \"rplanes\")) hosp$date <- as.Date(hosp$date, format = \"%Y-%m-%d\") prepped_observed <- to_signal(hosp, outcome = \"flu.admits\", type = \"observed\", resolution = \"weeks\")  ## read in example forecast and prep forecast signal fp <- system.file(\"extdata/forecast/2022-10-31-SigSci-TSENS.csv\", package = \"rplanes\") prepped_forecast <- read_forecast(fp) %>%   to_signal(., outcome = \"flu.admits\", type = \"forecast\", horizon = 4)  ## prepare seed with cut date prepped_seed <- plane_seed(prepped_observed, cut_date = \"2022-10-29\")  ## run plane component plane_cover(location = \"08\", input = prepped_forecast, seed = prepped_seed) #> $indicator #> [1] FALSE #>  #> $last_value #> [1] 32 #>  #> $bounds #> $bounds$lower #> [1] 0 #>  #> $bounds$upper #> [1] 65 #>  #>  plane_cover(location = \"47\", input = prepped_forecast, seed = prepped_seed) #> $indicator #> [1] FALSE #>  #> $last_value #> [1] 130 #>  #> $bounds #> $bounds$lower #> [1] 77 #>  #> $bounds$upper #> [1] 212 #>  #>"},{"path":"https://signaturescience.github.io/rplanes/reference/plane_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Difference component — plane_diff","title":"Difference component — plane_diff","text":"function implements point--point difference plausibility component. Differences evaluated signals calculated input values iteratively subtracted previous values (.e., x time point , difference calculated xi - xi-1). plausibility analysis uses evaluated differences compare maximum difference observed recorded seed.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/plane_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Difference component — plane_diff","text":"","code":"plane_diff(location, input, seed)"},{"path":"https://signaturescience.github.io/rplanes/reference/plane_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Difference component — plane_diff","text":"location Character vector location code; location must appear input seed input Input signal data scored; object must one forecast observed seed Prepared seed","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/plane_diff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Difference component — plane_diff","text":"list following values: indicator: Logical whether absolute value evaluated differences exceeds maximum difference values: vector values assessed including last value seed concatenated evaluated signal values evaluated_differences: vector consecutive differences values maximum_difference: vector one value maximum difference observed seed","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/plane_diff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Difference component — plane_diff","text":"","code":"## read in example observed data and prep observed signal hosp <- read.csv(system.file(\"extdata/observed/hdgov_hosp_weekly.csv\", package = \"rplanes\")) hosp$date <- as.Date(hosp$date, format = \"%Y-%m-%d\") prepped_observed <- to_signal(hosp, outcome = \"flu.admits\", type = \"observed\", resolution = \"weeks\")  ## read in example forecast and prep forecast signal fp <- system.file(\"extdata/forecast/2022-10-31-SigSci-TSENS.csv\", package = \"rplanes\") prepped_forecast <- read_forecast(fp) %>%   to_signal(., outcome = \"flu.admits\", type = \"forecast\", horizon = 4)  ## prepare seed with cut date prepped_seed <- plane_seed(prepped_observed, cut_date = \"2022-10-29\")  ## run plane component plane_diff(location = \"10\", input = prepped_forecast, seed = prepped_seed) #> $indicator #> [1] FALSE #>  #> $values #> [1] 4 7 6 6 7 #>  #> $evaluated_differences #> [1]  3 -1  0  1 #>  #> $maximum_difference #> [1] 27 #>  plane_diff(location = \"51\", input = prepped_forecast, seed = prepped_seed) #> $indicator #> [1] FALSE #>  #> $values #> [1] 186 141 145 146 147 #>  #> $evaluated_differences #> [1] -45   4   1   1 #>  #> $maximum_difference #> [1] 97 #>"},{"path":"https://signaturescience.github.io/rplanes/reference/plane_repeat.html","id":null,"dir":"Reference","previous_headings":"","what":"Repeat component — plane_repeat","title":"Repeat component — plane_repeat","text":"function evaluates whether consecutive values observations forecasts repeated k number times. function takes forecast observed object either observed dataset forecast dataset. Note signal contant (.e., value repeated time points) repeat component return FALSE.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/plane_repeat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Repeat component — plane_repeat","text":"","code":"plane_repeat(location, input, seed, tolerance = NULL, prepend = NULL)"},{"path":"https://signaturescience.github.io/rplanes/reference/plane_repeat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Repeat component — plane_repeat","text":"location Character vector location code; location must appear input seed input Input signal data scored; object must one forecast observed seed Prepared seed tolerance Integer value number allowed repeats flag raised. Default NULL allowed repeats determined seed. prepend Integer value number values seed add evaluated signal. Default NULL number values determined seed.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/plane_repeat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Repeat component — plane_repeat","text":"list following values: indicator: Logical whether value repeated sequentially k number times. repeats: tibble repeating values found. repeats (.e., indicator FALSE) tibble 0 rows.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/plane_repeat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Repeat component — plane_repeat","text":"","code":"## read in example observed data and prep observed signal hosp <- read.csv(system.file(\"extdata/observed/hdgov_hosp_weekly.csv\", package = \"rplanes\")) hosp$date <- as.Date(hosp$date, format = \"%Y-%m-%d\") prepped_observed <- to_signal(hosp, outcome = \"flu.admits\", type = \"observed\", resolution = \"weeks\")  ## read in example forecast and prep forecast signal fp <- system.file(\"extdata/forecast/2022-10-31-SigSci-TSENS.csv\", package = \"rplanes\") prepped_forecast <- read_forecast(fp) %>%   to_signal(., outcome = \"flu.admits\", type = \"forecast\", horizon = 4)  ## prepare seed with cut date prepped_seed <- plane_seed(prepped_observed, cut_date = \"2022-10-29\")  ## run plane component ## use defaults plane_repeat(location = \"12\", input = prepped_forecast, seed = prepped_seed) #> $indicator #> [1] FALSE #>  #> $repeats #> # A tibble: 0 × 6 #> # ℹ 6 variables: point <dbl>, location <chr>, date <date>, horizon <chr>, #> #   lower <dbl>, upper <dbl> #>  ## set tolerated repeats to 2 plane_repeat(location = \"12\", input = prepped_forecast, seed = prepped_seed, tolerance = 2) #> $indicator #> [1] FALSE #>  #> $repeats #> # A tibble: 0 × 6 #> # ℹ 6 variables: point <dbl>, location <chr>, date <date>, horizon <chr>, #> #   lower <dbl>, upper <dbl> #>   ## use defaults plane_repeat(location = \"49\", input = prepped_forecast, seed = prepped_seed) #> $indicator #> [1] FALSE #>  #> $repeats #> # A tibble: 0 × 6 #> # ℹ 6 variables: point <dbl>, location <chr>, date <date>, horizon <chr>, #> #   lower <dbl>, upper <dbl> #>  ## set number of values prepended for evaluation to 4 plane_repeat(location = \"49\", input = prepped_forecast, seed = prepped_seed, prepend = 4) #> $indicator #> [1] FALSE #>  #> $repeats #> # A tibble: 0 × 6 #> # ℹ 6 variables: point <dbl>, location <chr>, date <date>, horizon <chr>, #> #   lower <dbl>, upper <dbl> #>"},{"path":"https://signaturescience.github.io/rplanes/reference/plane_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Score PLANES components — plane_score","title":"Score PLANES components — plane_score","text":"function wraps PLANES scoring specified components across locations single step.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/plane_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Score PLANES components — plane_score","text":"","code":"plane_score(input, seed, components = \"all\", args = NULL, weights = NULL)"},{"path":"https://signaturescience.github.io/rplanes/reference/plane_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Score PLANES components — plane_score","text":"input Input signal data scored; object must one forecast observed seed Prepared seed components Character vector specifying component; must either \"\" combination \"cover\", \"diff\", \"taper\", \"trend\", \"repeat\", \"shape\", \"zero\"; default \"\" use available components given signal args Named list arguments component functions. List elements must named match given component arguments passed nested list (e.g., args = list(\"trend\" = list(\"sig_lvl\" = 0.05))). Default NULL defaults components used weights Named vector weights applied; default NULL components equally weighted; NULL length vector must equal number components, component given numeric weight (see Examples). Specified weights must real numbers greater equal 1.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/plane_score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Score PLANES components — plane_score","text":"list scoring results locations.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/plane_score.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Score PLANES components — plane_score","text":"","code":"if (FALSE) { ## read in example observed data and prep observed signal hosp <- read.csv(system.file(\"extdata/observed/hdgov_hosp_weekly.csv\", package = \"rplanes\"))  hosp$date <- as.Date(hosp$date, format = \"%Y-%m-%d\") prepped_observed <- to_signal(hosp, outcome = \"flu.admits\", type = \"observed\", resolution = \"weeks\")  ## read in example forecast and prep forecast signal fp <- system.file(\"extdata/forecast/2022-10-31-SigSci-TSENS.csv\", package = \"rplanes\") prepped_forecast <- read_forecast(fp) %>%   to_signal(., outcome = \"flu.admits\", type = \"forecast\", horizon = 4)  ## prepare seed with cut date prepped_seed <- plane_seed(prepped_observed, cut_date = \"2022-10-29\")  ## run plane scoring with all components plane_score(input = prepped_forecast, seed = prepped_seed)  ## run plane scoring with select components plane_score(input = prepped_forecast, seed = prepped_seed, components = c(\"cover\",\"taper\"))  ## run plane scoring with all components and additional args comp_args <- list(\"trend\" = list(\"sig_lvl\" = 0.05), \"repeat\" = list(\"prepend\" = 4, \"tolerance\" = 8)) plane_score(input = prepped_forecast, seed = prepped_seed, args = comp_args)  ## run plane scoring with specific components and weights comps <- c(\"cover\", \"taper\", \"diff\") wts <- c(\"cover\" = 1.5, \"taper\" = 1, \"diff\" = 4) plane_score(input = prepped_forecast, seed = prepped_seed, components = comps, weights = wts)  }"},{"path":"https://signaturescience.github.io/rplanes/reference/plane_seed.html","id":null,"dir":"Reference","previous_headings":"","what":"Create seed — plane_seed","title":"Create seed — plane_seed","text":"function wraps seed_engine operate across locations input signal.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/plane_seed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create seed — plane_seed","text":"","code":"plane_seed(input, cut_date = NULL)"},{"path":"https://signaturescience.github.io/rplanes/reference/plane_seed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create seed — plane_seed","text":"input Input signal data used seeding; must observed signal object cut_date Maximum date (inclusive) seeding performed; default NULL entire input used seeding","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/plane_seed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create seed — plane_seed","text":"named list length n, multiple elements corresponding seed characteristics metadata n locations nested independent lists.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/plane_seed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create seed — plane_seed","text":"","code":"## read in example observed data and prep observed signal hosp <- read.csv(system.file(\"extdata/observed/hdgov_hosp_weekly.csv\", package = \"rplanes\")) hosp$date <- as.Date(hosp$date, format = \"%Y-%m-%d\") prepped_observed <- to_signal(hosp, outcome = \"flu.admits\", type = \"observed\", resolution = \"weeks\")  ## prepare seed with no cut date plane_seed(prepped_observed) #> $US #> $US$diff #> $US$diff$max #> [1] 8419 #>  #>  #> $US$range #> $US$range$min #> [1] 562 #>  #> $US$range$max #> [1] 26333 #>  #>  #> $US$all_values #>  [1]  1256  1573  1666  1942  2247  2878  3008  3182  3331  3415  3646  3250 #> [13]  3225  3300  3170  2800  2759  2224  1861  1432  1133   875   841   700 #> [25]   610   630   562   573   595   601   623   644   742   896  1331  1694 #> [37]  2380  4353  6571  8848 11427 19846 26333 23851 21421 19288 19369 12929 #> [49]  6686  4182  2837  2320  2152  1843  1657  1456  1397  1397  1315  1274 #> [61]  1211  1083  1013   946   943   989   961   961 #>  #> $US$max_repeats #> [1] 2 #>  #> $US$last_value #> [1] 961 #>  #> $US$any_zeros #> [1] FALSE #>  #> $US$meta #> $US$meta$cut_date #> [1] \"2023-05-27\" #>  #> $US$meta$resolution #> [1] \"weeks\" #>  #> $US$meta$date_range #> $US$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $US$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`01` #> $`01`$diff #> $`01`$diff$max #> [1] 128 #>  #>  #> $`01`$range #> $`01`$range$min #> [1] 6 #>  #> $`01`$range$max #> [1] 360 #>  #>  #> $`01`$all_values #>  [1]  12  20  14  35  30  30  25  32  29  19  30  13  25  15  12  22  19  18  17 #> [20]  14  10  24  21  10  19  12  19  11  19  21  11  17  20  24  41  86 141 262 #> [39] 360 303 226 261 351 223 143 155 140 125  94  57  42  28  33  31  26  18  16 #> [58]  24  20  26  15  19  19  12   6  15   9  12 #>  #> $`01`$max_repeats #> [1] 2 #>  #> $`01`$last_value #> [1] 12 #>  #> $`01`$any_zeros #> [1] FALSE #>  #> $`01`$meta #> $`01`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`01`$meta$resolution #> [1] \"weeks\" #>  #> $`01`$meta$date_range #> $`01`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`01`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`02` #> $`02`$diff #> $`02`$diff$max #> [1] 32 #>  #>  #> $`02`$range #> $`02`$range$min #> [1] 0 #>  #> $`02`$range$max #> [1] 77 #>  #>  #> $`02`$all_values #>  [1]  0  0  1  0  2  1  3  0  2  2  1  3  4  5 17  3  2  6  1  3  2  3  0  0  0 #> [26]  0  1  1  1  0  5  0  0  2  3  2  3 14 10 20 38 66 58 77 45 40 44 29  6  9 #> [51]  3  3  1  3  4  3  3  1  4  0  2  2  1  0  6  0  0  2 #>  #> $`02`$max_repeats #> [1] 4 #>  #> $`02`$last_value #> [1] 2 #>  #> $`02`$any_zeros #> [1] TRUE #>  #> $`02`$meta #> $`02`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`02`$meta$resolution #> [1] \"weeks\" #>  #> $`02`$meta$date_range #> $`02`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`02`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`04` #> $`04`$diff #> $`04`$diff$max #> [1] 306 #>  #>  #> $`04`$range #> $`04`$range$min #> [1] 5 #>  #> $`04`$range$max #> [1] 821 #>  #>  #> $`04`$all_values #>  [1]  63  66  72  91  85 113 131 108 112 101 147 162 176 212 237 196 204  87  52 #> [20]  41  13  15  13  19  21  11  11  18  16  16   5   7   9  10  18  14  22  34 #> [39]  84 153 339 612 821 759 563 604 656 350 140 112  50  71  52  38  53  47  49 #> [58]  54  42  40  68  89  78  77  68  80 103 110 #>  #> $`04`$max_repeats #> [1] 2 #>  #> $`04`$last_value #> [1] 110 #>  #> $`04`$any_zeros #> [1] FALSE #>  #> $`04`$meta #> $`04`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`04`$meta$resolution #> [1] \"weeks\" #>  #> $`04`$meta$date_range #> $`04`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`04`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`05` #> $`05`$diff #> $`05`$diff$max #> [1] 217 #>  #>  #> $`05`$range #> $`05`$range$min #> [1] 3 #>  #> $`05`$range$max #> [1] 468 #>  #>  #> $`05`$all_values #>  [1]  24  32  42  58  62  67  89  59  83  50  37  32  23  22  16  16  21  20  13 #> [20]  16  11   6  21  14   5   8   7   4   3   8   6   4   8  10  21  40  50  84 #> [39] 141 212 218 435 468 331 234 189 217 146  98  61  30  21  35  25  32  33  18 #> [58]  14  22  24  16  16   8  11   9  14   8  11 #>  #> $`05`$max_repeats #> [1] 2 #>  #> $`05`$last_value #> [1] 11 #>  #> $`05`$any_zeros #> [1] FALSE #>  #> $`05`$meta #> $`05`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`05`$meta$resolution #> [1] \"weeks\" #>  #> $`05`$meta$date_range #> $`05`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`05`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`06` #> $`06`$diff #> $`06`$diff$max #> [1] 1174 #>  #>  #> $`06`$range #> $`06`$range$min #> [1] 18 #>  #> $`06`$range$max #> [1] 3138 #>  #>  #> $`06`$all_values #>  [1]   34   18   34   32   45   57   63   84  106  100  165  218  202  308  386 #> [16]  405  453  397  304  238  192  122  102   64   46   39   38   39   33   35 #> [31]   29   24   35   72   93   97  124  211  456  928 1616 2790 3138 2275 1576 #> [46] 1580 1384  855  354  198  116  116   91   70   82   59   49   58   32   34 #> [61]   39   37   33   25   21   36   23   30 #>  #> $`06`$max_repeats #> [1] 2 #>  #> $`06`$last_value #> [1] 30 #>  #> $`06`$any_zeros #> [1] FALSE #>  #> $`06`$meta #> $`06`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`06`$meta$resolution #> [1] \"weeks\" #>  #> $`06`$meta$date_range #> $`06`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`06`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`08` #> $`08`$diff #> $`08`$diff$max #> [1] 165 #>  #>  #> $`08`$range #> $`08`$range$min #> [1] 1 #>  #> $`08`$range$max #> [1] 350 #>  #>  #> $`08`$all_values #>  [1]  27  22  27  25  42  60  94 117 105 146 187 168 260 171 110  91  72  33  27 #> [20]   9  14  11  11   8   9  14   8  11   1   1   3   3   4   3   1   5  15  32 #> [39]  32  61 114 157 160 243 255 350 311 146  85  33  30  38  24  16  14  17  11 #> [58]  10  11   6   7  19  10  12   4   8  12   6 #>  #> $`08`$max_repeats #> [1] 2 #>  #> $`08`$last_value #> [1] 6 #>  #> $`08`$any_zeros #> [1] FALSE #>  #> $`08`$meta #> $`08`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`08`$meta$resolution #> [1] \"weeks\" #>  #> $`08`$meta$date_range #> $`08`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`08`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`09` #> $`09`$diff #> $`09`$diff$max #> [1] 225 #>  #>  #> $`09`$range #> $`09`$range$min #> [1] 0 #>  #> $`09`$range$max #> [1] 424 #>  #>  #> $`09`$all_values #>  [1]   0   1   7   7   6  18  25  30  44  51  50  57  76  79  63  34  20  37  14 #> [20]   4   9   4   3   6   4   3   0   2   9   4   3   4   3   2   3   9   9  37 #> [39]  41  58 104 199 424 419 352 275 248 160  72  31  32  14  14  16  16   9  21 #> [58]   9  12  14  21  11   7   9   7   6  12   9 #>  #> $`09`$max_repeats #> [1] 2 #>  #> $`09`$last_value #> [1] 9 #>  #> $`09`$any_zeros #> [1] TRUE #>  #> $`09`$meta #> $`09`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`09`$meta$resolution #> [1] \"weeks\" #>  #> $`09`$meta$date_range #> $`09`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`09`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`10` #> $`10`$diff #> $`10`$diff$max #> [1] 51 #>  #>  #> $`10`$range #> $`10`$range$min #> [1] 0 #>  #> $`10`$range$max #> [1] 79 #>  #>  #> $`10`$all_values #>  [1]  2  3  1  1  7  6  7  4 14 41 18  6  7  4  4  4  9  5  2  4  0  1  1  0  2 #> [26]  0  1  1  1  3  0  2  0  0  0  0  1  4 11 15 53 48 79 28 27 29 46 41 11  5 #> [51]  5 15  1  1  0  5  1  0  2  2  0  0  0  1  0  1  0  0 #>  #> $`10`$max_repeats #> [1] 4 #>  #> $`10`$last_value #> [1] 0 #>  #> $`10`$any_zeros #> [1] TRUE #>  #> $`10`$meta #> $`10`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`10`$meta$resolution #> [1] \"weeks\" #>  #> $`10`$meta$date_range #> $`10`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`10`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`11` #> $`11`$diff #> $`11`$diff$max #> [1] 35 #>  #>  #> $`11`$range #> $`11`$range$min #> [1] 0 #>  #> $`11`$range$max #> [1] 70 #>  #>  #> $`11`$all_values #>  [1]  0  1  0  1  4  4  2  4  2  2  1  4  1  5  4  6  4  1  2  3  1  2  1  0  0 #> [26]  2  0  0  1  0  0  0  1  0  1  2  8 11 36 44 35 70 56 42 20 26 27 15  5 10 #> [51]  6  8  6  4  4  5  1  3  2 11  3  3  3  1  1  1  2  6 #>  #> $`11`$max_repeats #> [1] 3 #>  #> $`11`$last_value #> [1] 6 #>  #> $`11`$any_zeros #> [1] TRUE #>  #> $`11`$meta #> $`11`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`11`$meta$resolution #> [1] \"weeks\" #>  #> $`11`$meta$date_range #> $`11`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`11`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`12` #> $`12`$diff #> $`12`$diff$max #> [1] 499 #>  #>  #> $`12`$range #> $`12`$range$min #> [1] 60 #>  #> $`12`$range$max #> [1] 1297 #>  #>  #> $`12`$all_values #>  [1]   64   74   66   72   69   73  109   96  103  165  163  179  223  306  406 #> [16]  542  680  556  465  321  205  177  134   97   81   87   89   67   75   70 #> [31]   60   78   81   77  110  105  125  260  304  490  504  803  896  789  891 #> [46]  982 1297 1213  714  577  410  343  300  226  201  184  188  201  162  162 #> [61]  182  135  141  141  125  135  136  140 #>  #> $`12`$max_repeats #> [1] 2 #>  #> $`12`$last_value #> [1] 140 #>  #> $`12`$any_zeros #> [1] FALSE #>  #> $`12`$meta #> $`12`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`12`$meta$resolution #> [1] \"weeks\" #>  #> $`12`$meta$date_range #> $`12`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`12`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`13` #> $`13`$diff #> $`13`$diff$max #> [1] 80 #>  #>  #> $`13`$range #> $`13`$range$min #> [1] 13 #>  #> $`13`$range$max #> [1] 252 #>  #>  #> $`13`$all_values #>  [1]  38  45  35  28  37  34  33  46  31  41  44  41  43  43  49  64  63  38  36 #> [20]  26  34  23  26  26  33  31  13  19  17  22  38  36  39  54  87 113 119 176 #> [39] 217 250 193 251 252 172 138 162 195 168 106  71  70  88  82  69  70  44  55 #> [58]  51  68  49  48  30  48  40  36  52  29  38 #>  #> $`13`$max_repeats #> [1] 2 #>  #> $`13`$last_value #> [1] 38 #>  #> $`13`$any_zeros #> [1] FALSE #>  #> $`13`$meta #> $`13`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`13`$meta$resolution #> [1] \"weeks\" #>  #> $`13`$meta$date_range #> $`13`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`13`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`15` #> $`15`$diff #> $`15`$diff$max #> [1] 18 #>  #>  #> $`15`$range #> $`15`$range$min #> [1] 0 #>  #> $`15`$range$max #> [1] 31 #>  #>  #> $`15`$all_values #>  [1]  0  0  0  0  0  1  0  1  4 10  6  4  1  4 10  9  4  3  4  6  4  2  0  1  2 #> [26]  3  2  0  1  2  1  2  3  5  4  6  4  6  8 25 10 12 12 11 17 31 28 10  9  0 #> [51] 11  6 10  4  5  1  4  3  2  6  3  1  2  1  0  1  3  0 #>  #> $`15`$max_repeats #> [1] 5 #>  #> $`15`$last_value #> [1] 0 #>  #> $`15`$any_zeros #> [1] TRUE #>  #> $`15`$meta #> $`15`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`15`$meta$resolution #> [1] \"weeks\" #>  #> $`15`$meta$date_range #> $`15`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`15`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`16` #> $`16`$diff #> $`16`$diff$max #> [1] 118 #>  #>  #> $`16`$range #> $`16`$range$min #> [1] 0 #>  #> $`16`$range$max #> [1] 285 #>  #>  #> $`16`$all_values #>  [1]   1   1   4   3  15  15  15  21  17  19  14  15  15  16  13   7  11   6   6 #> [20]   3   3   4   4   0   1   2   0   2   1   3   0   1   3   2   1   1   1   1 #> [39]  20  14  60 155 189 195 285 195 219 101  42  30  17   4   4   8   3   3   4 #> [58]   5   5   2   5   1   5   5   6   8   2   1 #>  #> $`16`$max_repeats #> [1] 4 #>  #> $`16`$last_value #> [1] 1 #>  #> $`16`$any_zeros #> [1] TRUE #>  #> $`16`$meta #> $`16`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`16`$meta$resolution #> [1] \"weeks\" #>  #> $`16`$meta$date_range #> $`16`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`16`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`17` #> $`17`$diff #> $`17`$diff$max #> [1] 468 #>  #>  #> $`17`$range #> $`17`$range$min #> [1] 3 #>  #> $`17`$range$max #> [1] 1125 #>  #>  #> $`17`$all_values #>  [1]    9   26   26   21   39   74  105  100  103   92  126   99  114  128   93 #> [16]   49   41   18   23   18   11    9   14    3   12   13   12   14   15   10 #> [31]    3    5   16   11   11   31   45  104  181  276  447  915 1125  973  744 #> [46]  563  571  393  166   63   64   26   33   25   36   23   14   15   28   30 #> [61]   22   34   29   16   26   27   29   24 #>  #> $`17`$max_repeats #> [1] 2 #>  #> $`17`$last_value #> [1] 24 #>  #> $`17`$any_zeros #> [1] FALSE #>  #> $`17`$meta #> $`17`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`17`$meta$resolution #> [1] \"weeks\" #>  #> $`17`$meta$date_range #> $`17`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`17`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`18` #> $`18`$diff #> $`18`$diff$max #> [1] 321 #>  #>  #> $`18`$range #> $`18`$range$min #> [1] 7 #>  #> $`18`$range$max #> [1] 851 #>  #>  #> $`18`$all_values #>  [1]  34  61  42  72 106 124 125 113 117  81  66  73  47  42  44  33  25  13  23 #> [20]  21  17  12  11   7  18  11   7  10  15  22  27  26  34  33  51  57  72 102 #> [39] 149 141 264 505 826 851 685 592 571 339 149  96  65  43  37  34  47  43  31 #> [58]  33  22  40  15  17  13  15  20  21  19  19 #>  #> $`18`$max_repeats #> [1] 2 #>  #> $`18`$last_value #> [1] 19 #>  #> $`18`$any_zeros #> [1] FALSE #>  #> $`18`$meta #> $`18`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`18`$meta$resolution #> [1] \"weeks\" #>  #> $`18`$meta$date_range #> $`18`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`18`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`19` #> $`19`$diff #> $`19`$diff$max #> [1] 117 #>  #>  #> $`19`$range #> $`19`$range$min #> [1] 0 #>  #> $`19`$range$max #> [1] 352 #>  #>  #> $`19`$all_values #>  [1]  52  44  62  57  61  43  42  37  21  28  20  15  21  17  10   6   5  10   5 #> [20]   7   4   3   0   1   0   1   2   3   1   3   0   1   7   5   5   7  10  19 #> [39]  16  23  37 139 201 235 352 331 301 202  87  43  44  11  15   9   9   9   8 #> [58]   7   7   4   2   5   1  11   6   4   6   1 #>  #> $`19`$max_repeats #> [1] 3 #>  #> $`19`$last_value #> [1] 1 #>  #> $`19`$any_zeros #> [1] TRUE #>  #> $`19`$meta #> $`19`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`19`$meta$resolution #> [1] \"weeks\" #>  #> $`19`$meta$date_range #> $`19`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`19`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`20` #> $`20`$diff #> $`20`$diff$max #> [1] 119 #>  #>  #> $`20`$range #> $`20`$range$min #> [1] 0 #>  #> $`20`$range$max #> [1] 303 #>  #>  #> $`20`$all_values #>  [1]  20  25  38  32  45  32  44  28  34  21  30  20  15  10   8   2   3   3   2 #> [20]   3   4   3   2   3   5   2   2   3   1   3   0   0   1   5   5   7  16  20 #> [39]  37  49  68 187 303 253 220 187 176 116  47  46  18  11  10   5   9   2   6 #> [58]   9   7   8   4   8   3   1   3   3   6   1 #>  #> $`20`$max_repeats #> [1] 2 #>  #> $`20`$last_value #> [1] 1 #>  #> $`20`$any_zeros #> [1] TRUE #>  #> $`20`$meta #> $`20`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`20`$meta$resolution #> [1] \"weeks\" #>  #> $`20`$meta$date_range #> $`20`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`20`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`21` #> $`21`$diff #> $`21`$diff$max #> [1] 290 #>  #>  #> $`21`$range #> $`21`$range$min #> [1] 3 #>  #> $`21`$range$max #> [1] 807 #>  #>  #> $`21`$all_values #>  [1]  15  20  28  20  35  43  39  65  88  92  87  89  63  41  45  24  25  25   7 #> [20]  16   4   7   9   3   7   9   6   6   6   6  19   3  11   3  10  23  15  66 #> [39] 139 227 313 603 807 691 419 268 231 123  62  30  29  15  33  18  13  10  17 #> [58]  27  15  15  19  12  12   7  14  14  10  11 #>  #> $`21`$max_repeats #> [1] 4 #>  #> $`21`$last_value #> [1] 11 #>  #> $`21`$any_zeros #> [1] FALSE #>  #> $`21`$meta #> $`21`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`21`$meta$resolution #> [1] \"weeks\" #>  #> $`21`$meta$date_range #> $`21`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`21`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`22` #> $`22`$diff #> $`22`$diff$max #> [1] 107 #>  #>  #> $`22`$range #> $`22`$range$min #> [1] 2 #>  #> $`22`$range$max #> [1] 294 #>  #>  #> $`22`$all_values #>  [1]  22  40  36  31  31  50  42  46  28  41  40  19  24  20  17  10  16  21  14 #> [20]   8   4   3   5  15   2   5   7   6  10   6  19  18  23  38  43  82  97 188 #> [39] 170 167 177 240 294 253 146 141 189 147  89  70  42  34  55  28  23  26  18 #> [58]  26  21  25  21  11  27  19  10  17  19  11 #>  #> $`22`$max_repeats #> [1] 2 #>  #> $`22`$last_value #> [1] 11 #>  #> $`22`$any_zeros #> [1] FALSE #>  #> $`22`$meta #> $`22`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`22`$meta$resolution #> [1] \"weeks\" #>  #> $`22`$meta$date_range #> $`22`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`22`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`23` #> $`23`$diff #> $`23`$diff$max #> [1] 77 #>  #>  #> $`23`$range #> $`23`$range$min #> [1] 0 #>  #> $`23`$range$max #> [1] 212 #>  #>  #> $`23`$all_values #>  [1]   7   4   2   3   2   1   3  10  11  15  28  23  10  41  31  16  12  15   5 #> [20]   3   3   0   0   2   0   0   2   0   0   0   0   0   0   1   0   0   0   3 #> [39]   3  11  14  34 110 120 196 212 186 109  53  31  11   9   7   3   0   4   0 #> [58]   5   1   5   2   1   4   0   2   4   5   2 #>  #> $`23`$max_repeats #> [1] 6 #>  #> $`23`$last_value #> [1] 2 #>  #> $`23`$any_zeros #> [1] TRUE #>  #> $`23`$meta #> $`23`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`23`$meta$resolution #> [1] \"weeks\" #>  #> $`23`$meta$date_range #> $`23`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`23`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`24` #> $`24`$diff #> $`24`$diff$max #> [1] 114 #>  #>  #> $`24`$range #> $`24`$range$min #> [1] 1 #>  #> $`24`$range$max #> [1] 405 #>  #>  #> $`24`$all_values #>  [1]   8  14  17  21  18  30  28  31  57  48  43  57  46  61  46  32  18  20  23 #> [20]  22  13  15   5   5   5   3   5  10   5   1   3   8   3   9  21  25  49 109 #> [39] 165 224 218 332 405 319 278 227 221 161 102  61  37  56  36  25  26  12  16 #> [58]  14  19   9  16  10  11  10  14  10   5   6 #>  #> $`24`$max_repeats #> [1] 3 #>  #> $`24`$last_value #> [1] 6 #>  #> $`24`$any_zeros #> [1] FALSE #>  #> $`24`$meta #> $`24`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`24`$meta$resolution #> [1] \"weeks\" #>  #> $`24`$meta$date_range #> $`24`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`24`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`25` #> $`25`$diff #> $`25`$diff$max #> [1] 267 #>  #>  #> $`25`$range #> $`25`$range$min #> [1] 2 #>  #> $`25`$range$max #> [1] 769 #>  #>  #> $`25`$all_values #>  [1]  37  54  30  14  34  44  44 100 156 166 188 182 184 172 145  86  50  47  13 #> [20]  17   8  15  14  12   5  11   9   3  12   7   4   2   4   4   8   7   8  14 #> [39]  31  43  79 221 446 578 694 769 733 466 238 122  71  52  63  37  17  15  19 #> [58]  20  19  11  12  10   8   9  12   9  11  12 #>  #> $`25`$max_repeats #> [1] 2 #>  #> $`25`$last_value #> [1] 12 #>  #> $`25`$any_zeros #> [1] FALSE #>  #> $`25`$meta #> $`25`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`25`$meta$resolution #> [1] \"weeks\" #>  #> $`25`$meta$date_range #> $`25`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`25`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`26` #> $`26`$diff #> $`26`$diff$max #> [1] 496 #>  #>  #> $`26`$range #> $`26`$range$min #> [1] 0 #>  #> $`26`$range$max #> [1] 1137 #>  #>  #> $`26`$all_values #>  [1]   40   52   55   82   92  131  125  173  176  139  147  140  174  184  133 #> [16]   89   57   39   19   18    9   12    6    7    4    0    5    0    2    1 #> [31]   10    3    5    4   13   14   17   46   59   90  193  313  485  601 1001 #> [46] 1109 1137  641  290  150   86   86   51   58   57   44   41   31   19   17 #> [61]   27   15    8    7   16   17   14   18 #>  #> $`26`$max_repeats #> [1] 2 #>  #> $`26`$last_value #> [1] 18 #>  #> $`26`$any_zeros #> [1] TRUE #>  #> $`26`$meta #> $`26`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`26`$meta$resolution #> [1] \"weeks\" #>  #> $`26`$meta$date_range #> $`26`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`26`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`27` #> $`27`$diff #> $`27`$diff$max #> [1] 122 #>  #>  #> $`27`$range #> $`27`$range$min #> [1] 0 #>  #> $`27`$range$max #> [1] 447 #>  #>  #> $`27`$all_values #>  [1]  19  28  19  31  35  29  37  34  24  28  36  29  30  15  12  14   4   5   9 #> [20]   0   1   2   2   3   3   2   5   1   0   1   1   0   3   2  11   7  11  43 #> [39]  85 182 268 382 447 325 236 162 164  75  48  25  15  16   9   8   8   7   4 #> [58]   6   6   9  14  11   6  14  20  11   7   3 #>  #> $`27`$max_repeats #> [1] 2 #>  #> $`27`$last_value #> [1] 3 #>  #> $`27`$any_zeros #> [1] TRUE #>  #> $`27`$meta #> $`27`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`27`$meta$resolution #> [1] \"weeks\" #>  #> $`27`$meta$date_range #> $`27`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`27`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`28` #> $`28`$diff #> $`28`$diff$max #> [1] 90 #>  #>  #> $`28`$range #> $`28`$range$min #> [1] 13 #>  #> $`28`$range$max #> [1] 282 #>  #>  #> $`28`$all_values #>  [1]  22  27  31  34  32  36  38  20  34  23  20  26  21  30  27  22  23  13  19 #> [20]  19  17  24  18  24  17  21  13  16  15  19  22  32  20  35  58  70  90 165 #> [39] 255 258 243 282 258 171 133  87 122  86  47  58  30  27  19  33  31  34  30 #> [58]  23  15  20  26  19  30  15  20  28  22  16 #>  #> $`28`$max_repeats #> [1] 2 #>  #> $`28`$last_value #> [1] 16 #>  #> $`28`$any_zeros #> [1] FALSE #>  #> $`28`$meta #> $`28`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`28`$meta$resolution #> [1] \"weeks\" #>  #> $`28`$meta$date_range #> $`28`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`28`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`29` #> $`29`$diff #> $`29`$diff$max #> [1] 327 #>  #>  #> $`29`$range #> $`29`$range$min #> [1] 4 #>  #> $`29`$range$max #> [1] 861 #>  #>  #> $`29`$all_values #>  [1]  42  60  57  77  67  96  84  97  78  78  70  59  68  39  37  20  33  19  24 #> [20]  18  14  15  14  18  14  22  17  11   6  10   4   6   7  14   6  12  23  56 #> [39]  71 115 221 548 861 861 717 548 642 370 176  94  68  52  39  45  33  38  37 #> [58]  22  31  29  29  19  22  24  24  25  18   9 #>  #> $`29`$max_repeats #> [1] 2 #>  #> $`29`$last_value #> [1] 9 #>  #> $`29`$any_zeros #> [1] FALSE #>  #> $`29`$meta #> $`29`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`29`$meta$resolution #> [1] \"weeks\" #>  #> $`29`$meta$date_range #> $`29`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`29`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`30` #> $`30`$diff #> $`30`$diff$max #> [1] 38 #>  #>  #> $`30`$range #> $`30`$range$min #> [1] 0 #>  #> $`30`$range$max #> [1] 104 #>  #>  #> $`30`$all_values #>  [1]  13   9  15  19  15  17  21  36  18  18  19  17  21  11   7  14  22  10   1 #> [20]   0   4   3   1   0   0   0   0   1   0   0   0   1   0   2   0   0   0   5 #> [39]   5  12  12  50  71 104  96  64  86  58  37  13  10   9   3   4   3   6   4 #> [58]   1   1   1   0   1   1   0   0   0   2   3 #>  #> $`30`$max_repeats #> [1] 4 #>  #> $`30`$last_value #> [1] 3 #>  #> $`30`$any_zeros #> [1] TRUE #>  #> $`30`$meta #> $`30`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`30`$meta$resolution #> [1] \"weeks\" #>  #> $`30`$meta$date_range #> $`30`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`30`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`31` #> $`31`$diff #> $`31`$diff$max #> [1] 43 #>  #>  #> $`31`$range #> $`31`$range$min #> [1] 0 #>  #> $`31`$range$max #> [1] 173 #>  #>  #> $`31`$all_values #>  [1]  29  34  36  60  39  70  50  22  35  29  19  14   4   4   7   3   9   6   3 #> [20]   7   8   8   4   1   4   2   0   7   8   8   4   7   9  11  22   9  14  16 #> [39]  28  21  43  62  97 133 173 138 136  93  58  57  19   8   0   6  11   6  13 #> [58]  11   9   9   6   4   7   4   1   4   2   8 #>  #> $`31`$max_repeats #> [1] 2 #>  #> $`31`$last_value #> [1] 8 #>  #> $`31`$any_zeros #> [1] TRUE #>  #> $`31`$meta #> $`31`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`31`$meta$resolution #> [1] \"weeks\" #>  #> $`31`$meta$date_range #> $`31`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`31`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`32` #> $`32`$diff #> $`32`$diff$max #> [1] 145 #>  #>  #> $`32`$range #> $`32`$range$min #> [1] 0 #>  #> $`32`$range$max #> [1] 397 #>  #>  #> $`32`$all_values #>  [1]   6   8   9  20  25  37  43  59  96  73  76  53  44  81  85  76  64  86  48 #> [20]  30  24  18  16   3   6   1   1   2   7   3   6   8   9  14  37   8  14  12 #> [39]  31  80 157 252 397 366 231 232 169 107  29  21  11   6  10  11   3   4   3 #> [58]   6  10   3   7   4   0   6   5   6   4   5 #>  #> $`32`$max_repeats #> [1] 2 #>  #> $`32`$last_value #> [1] 5 #>  #> $`32`$any_zeros #> [1] TRUE #>  #> $`32`$meta #> $`32`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`32`$meta$resolution #> [1] \"weeks\" #>  #> $`32`$meta$date_range #> $`32`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`32`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`33` #> $`33`$diff #> $`33`$diff$max #> [1] 56 #>  #>  #> $`33`$range #> $`33`$range$min #> [1] 0 #>  #> $`33`$range$max #> [1] 142 #>  #>  #> $`33`$all_values #>  [1]  11   7   4   3  17   8   9   9  16  19  32  30  26  15  14  10   8   4   2 #> [20]   1   3   1   0   2   2   1   1   0   0   0   0   3   2   0   0   0   1   0 #> [39]   3   5   7  12  36  73  87 120 142 100  44  20  20   1   9   4   2   1   6 #> [58]   9   9   9   5   0   1   3   2   1   1   3 #>  #> $`33`$max_repeats #> [1] 4 #>  #> $`33`$last_value #> [1] 3 #>  #> $`33`$any_zeros #> [1] TRUE #>  #> $`33`$meta #> $`33`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`33`$meta$resolution #> [1] \"weeks\" #>  #> $`33`$meta$date_range #> $`33`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`33`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`34` #> $`34`$diff #> $`34`$diff$max #> [1] 311 #>  #>  #> $`34`$range #> $`34`$range$min #> [1] 6 #>  #> $`34`$range$max #> [1] 892 #>  #>  #> $`34`$all_values #>  [1]  25  32  35  41  39  52  63  94 152 130 131 129 116 108  82  79  48  50  49 #> [20]  17  17  18  20   7  10  19   6  15  12   9  13   9  19  17  28  31  32  76 #> [39] 183 309 324 581 892 738 601 522 505 316 157 102  70  31  28  56  41  27  25 #> [58]  22  45  37  41  43  35  12  21  22  15  18 #>  #> $`34`$max_repeats #> [1] 2 #>  #> $`34`$last_value #> [1] 18 #>  #> $`34`$any_zeros #> [1] FALSE #>  #> $`34`$meta #> $`34`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`34`$meta$resolution #> [1] \"weeks\" #>  #> $`34`$meta$date_range #> $`34`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`34`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`35` #> $`35`$diff #> $`35`$diff$max #> [1] 181 #>  #>  #> $`35`$range #> $`35`$range$min #> [1] 0 #>  #> $`35`$range$max #> [1] 417 #>  #>  #> $`35`$all_values #>  [1]   7   8   3   6   8  17  43  40  42  28  48  55  69  34  69  50  54  27  16 #> [20]   8  14   0   6   5   3   6   7   7   6  21   7   4   9  12  27  22  29  56 #> [39]  97 154 159 190 371 417 351 352 269 163  43  30  17   9   9   3  12  15   5 #> [58]   3   4   8   1   4   8   2   1   1   4   3 #>  #> $`35`$max_repeats #> [1] 2 #>  #> $`35`$last_value #> [1] 3 #>  #> $`35`$any_zeros #> [1] TRUE #>  #> $`35`$meta #> $`35`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`35`$meta$resolution #> [1] \"weeks\" #>  #> $`35`$meta$date_range #> $`35`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`35`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`36` #> $`36`$diff #> $`36`$diff$max #> [1] 479 #>  #>  #> $`36`$range #> $`36`$range$min #> [1] 10 #>  #> $`36`$range$max #> [1] 1741 #>  #>  #> $`36`$all_values #>  [1]   34   30   38   56   57  101   87  180  191  245  302  265  239  201  177 #> [16]  169  119  102   89   63   43   35   36   12   15   11   10   19   26   21 #> [31]   14   20   12   29   38   49   49  107  206  300  508  871 1350 1531 1741 #> [46] 1485 1273  797  425  243  154   94   98   84   50   51   57   64   73   78 #> [61]   76   74   45   40   50   48   53   59 #>  #> $`36`$max_repeats #> [1] 2 #>  #> $`36`$last_value #> [1] 59 #>  #> $`36`$any_zeros #> [1] FALSE #>  #> $`36`$meta #> $`36`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`36`$meta$resolution #> [1] \"weeks\" #>  #> $`36`$meta$date_range #> $`36`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`36`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`37` #> $`37`$diff #> $`37`$diff$max #> [1] 215 #>  #>  #> $`37`$range #> $`37`$range$min #> [1] 2 #>  #> $`37`$range$max #> [1] 600 #>  #>  #> $`37`$all_values #>  [1]  32  32  36  54  52  15  25  37  45  53  56  60  51  47  54  34  30  45  73 #> [20]  48  41  19  41  41   8   2  12  13  13   8  14  17  13  21  22  32  79 211 #> [39] 281 371 369 467 600 385 315 296 308 194 124  59  34  45  55  42  30  34  28 #> [58]  30  18  10  27  21  15   7   8  17  10   6 #>  #> $`37`$max_repeats #> [1] 2 #>  #> $`37`$last_value #> [1] 6 #>  #> $`37`$any_zeros #> [1] FALSE #>  #> $`37`$meta #> $`37`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`37`$meta$resolution #> [1] \"weeks\" #>  #> $`37`$meta$date_range #> $`37`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`37`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`38` #> $`38`$diff #> $`38`$diff$max #> [1] 36 #>  #>  #> $`38`$range #> $`38`$range$min #> [1] 0 #>  #> $`38`$range$max #> [1] 95 #>  #>  #> $`38`$all_values #>  [1]  5  5  0  2  6  4  5  3  5  7  5  2  1  1  1  0  3  2  0  0  0  0  1  2  0 #> [26]  2  2  0  0  3  0  0  1  0  0  2  1  2  5 10 12 28 49 59 95 70 81 69 48 28 #> [51] 21  8 19  8  9  4  6 10  0  0  8  4  5  3  8  1  4  3 #>  #> $`38`$max_repeats #> [1] 4 #>  #> $`38`$last_value #> [1] 3 #>  #> $`38`$any_zeros #> [1] TRUE #>  #> $`38`$meta #> $`38`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`38`$meta$resolution #> [1] \"weeks\" #>  #> $`38`$meta$date_range #> $`38`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`38`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`39` #> $`39`$diff #> $`39`$diff$max #> [1] 320 #>  #>  #> $`39`$range #> $`39`$range$min #> [1] 1 #>  #> $`39`$range$max #> [1] 982 #>  #>  #> $`39`$all_values #>  [1]  29  41  33  50  86 104 106 100 135 123 136 100 104  82  61  47  41  25  24 #> [20]  12  18   4   8  12   7   3   1  12  14  13  16   5  12  17  18  32  39 115 #> [39] 211 244 329 646 966 952 982 783 688 429 179 107  66  63  46  42  24  24  26 #> [58]  32  34  30  13  26  18  18  16  18   9  18 #>  #> $`39`$max_repeats #> [1] 2 #>  #> $`39`$last_value #> [1] 18 #>  #> $`39`$any_zeros #> [1] FALSE #>  #> $`39`$meta #> $`39`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`39`$meta$resolution #> [1] \"weeks\" #>  #> $`39`$meta$date_range #> $`39`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`39`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`40` #> $`40`$diff #> $`40`$diff$max #> [1] 403 #>  #>  #> $`40`$range #> $`40`$range$min #> [1] 6 #>  #> $`40`$range$max #> [1] 871 #>  #>  #> $`40`$all_values #>  [1]  70  78  81  95 129 167 163 164 117 107  76  43  35  51  36  35  37  26  28 #> [20]  30  25  26  22   6   6  24   9   7  10   9  10   9   8   6   7  17  36  59 #> [39]  46  85 177 426 829 871 764 682 700 481 268 139  97  75  52  42  35  27  27 #> [58]  22  23  22  22  17  17  22   9  14  26  16 #>  #> $`40`$max_repeats #> [1] 2 #>  #> $`40`$last_value #> [1] 16 #>  #> $`40`$any_zeros #> [1] FALSE #>  #> $`40`$meta #> $`40`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`40`$meta$resolution #> [1] \"weeks\" #>  #> $`40`$meta$date_range #> $`40`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`40`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`41` #> $`41`$diff #> $`41`$diff$max #> [1] 277 #>  #>  #> $`41`$range #> $`41`$range$min #> [1] 0 #>  #> $`41`$range$max #> [1] 698 #>  #>  #> $`41`$all_values #>  [1]   2   6   3   2   9  19  23  10  15  15  29  20  30  30  38  29  29  16  12 #> [20]   7   2   0   7   1   2   0   2   0   0   0   1   1   1   1   1   2   6   5 #> [39]  46  45 129 406 546 698 652 443 344 130  62  25  10  10   6   5   5   8   4 #> [58]   7   3   5   5   2   1   4   2   0   2   3 #>  #> $`41`$max_repeats #> [1] 5 #>  #> $`41`$last_value #> [1] 3 #>  #> $`41`$any_zeros #> [1] TRUE #>  #> $`41`$meta #> $`41`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`41`$meta$resolution #> [1] \"weeks\" #>  #> $`41`$meta$date_range #> $`41`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`41`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`42` #> $`42`$diff #> $`42`$diff$max #> [1] 505 #>  #>  #> $`42`$range #> $`42`$range$min #> [1] 25 #>  #> $`42`$range$max #> [1] 1330 #>  #>  #> $`42`$all_values #>  [1]   60   96   82   77   82  120  113  153  207  207  213  169  156  186  151 #> [16]   85   63   55   43   38   44   40   25   37   28   28   30   44   29   40 #> [31]   35   29   35   53   59   76   97  179  238  366  438  825 1330 1180 1042 #> [46] 1044 1060  777  430  288  222  186  183  197  167  164  179  171  147   91 #> [61]   65   73   77   74   52   59   54   59 #>  #> $`42`$max_repeats #> [1] 2 #>  #> $`42`$last_value #> [1] 59 #>  #> $`42`$any_zeros #> [1] FALSE #>  #> $`42`$meta #> $`42`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`42`$meta$resolution #> [1] \"weeks\" #>  #> $`42`$meta$date_range #> $`42`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`42`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`44` #> $`44`$diff #> $`44`$diff$max #> [1] 24 #>  #>  #> $`44`$range #> $`44`$range$min #> [1] 0 #>  #> $`44`$range$max #> [1] 62 #>  #>  #> $`44`$all_values #>  [1]  0  1  0  2  0  1  1  3  6 10  8  5  6 10  5  6  6  2  1  1  0  0  1  0  0 #> [26]  0  0  0  0  0  0  0  0  1  1  0  2  0  3  6  3 16 26 50 47 62 51 31 10 14 #> [51] 10  3  1  2  2  1  0  1  2  0  0  1  1  1  1  3  0  3 #>  #> $`44`$max_repeats #> [1] 10 #>  #> $`44`$last_value #> [1] 3 #>  #> $`44`$any_zeros #> [1] TRUE #>  #> $`44`$meta #> $`44`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`44`$meta$resolution #> [1] \"weeks\" #>  #> $`44`$meta$date_range #> $`44`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`44`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`45` #> $`45`$diff #> $`45`$diff$max #> [1] 95 #>  #>  #> $`45`$range #> $`45`$range$min #> [1] 6 #>  #> $`45`$range$max #> [1] 258 #>  #>  #> $`45`$all_values #>  [1]  20  21  27  23  21  23  15  23  32  31  36  40  23  36  44  35  32  32  29 #> [20]  29  15  15   9  17  20  11  13   6  10  14   8   8  18  18  38  37  88 163 #> [39] 258 254 215 233 223 163 137 128 164 128  78  60  34  42  47  42  38  32  26 #> [58]  21  25  20  25  19  23  26  21  21  17  19 #>  #> $`45`$max_repeats #> [1] 2 #>  #> $`45`$last_value #> [1] 19 #>  #> $`45`$any_zeros #> [1] FALSE #>  #> $`45`$meta #> $`45`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`45`$meta$resolution #> [1] \"weeks\" #>  #> $`45`$meta$date_range #> $`45`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`45`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`46` #> $`46`$diff #> $`46`$diff$max #> [1] 42 #>  #>  #> $`46`$range #> $`46`$range$min #> [1] 0 #>  #> $`46`$range$max #> [1] 105 #>  #>  #> $`46`$all_values #>  [1]  19  14  15  34  15  10   5   9  10   4   7   8   4  10   6   3   1   1   2 #> [20]   3   1   0   0   8   9   5   7   8   6   7   7   7   7  10  10  13  12   9 #> [39]   9  13  28  63  70  85 105  71  57  58  16  11  16  12   9  10   4   9  16 #> [58]  11  21  13  10   4   4   5   6   6   2   1 #>  #> $`46`$max_repeats #> [1] 4 #>  #> $`46`$last_value #> [1] 1 #>  #> $`46`$any_zeros #> [1] TRUE #>  #> $`46`$meta #> $`46`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`46`$meta$resolution #> [1] \"weeks\" #>  #> $`46`$meta$date_range #> $`46`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`46`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`47` #> $`47`$diff #> $`47`$diff$max #> [1] 234 #>  #>  #> $`47`$range #> $`47`$range$min #> [1] 11 #>  #> $`47`$range$max #> [1] 660 #>  #>  #> $`47`$all_values #>  [1]  24  29  47  33  32  40  45  48  36  45  39  46  23  33  24  22  22  22  27 #> [20]  22  27  12  11  15  20  47  16  15  16  17  24  20  35  41  41  65  94 130 #> [39] 261 317 300 534 660 462 251 225 247 171  86  75  37  41  33  50  43  34  29 #> [58]  29  31  46  28  23  22  20  23  13  17  27 #>  #> $`47`$max_repeats #> [1] 3 #>  #> $`47`$last_value #> [1] 27 #>  #> $`47`$any_zeros #> [1] FALSE #>  #> $`47`$meta #> $`47`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`47`$meta$resolution #> [1] \"weeks\" #>  #> $`47`$meta$date_range #> $`47`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`47`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`48` #> $`48`$diff #> $`48`$diff$max #> [1] 699 #>  #>  #> $`48`$range #> $`48`$range$min #> [1] 75 #>  #> $`48`$range$max #> [1] 2139 #>  #>  #> $`48`$all_values #>  [1]  173  284  347  345  453  663  630  507  357  351  337  191  165  156  149 #> [16]  138  125  100  140  120   94   78  114   99   87   83   92  107  111   83 #> [31]  121  122  128  137  239  329  509  744  984 1129 1230 1929 2139 1781 1462 #> [46] 1225 1432 1167  727  458  341  256  270  235  202  167  152  147  135  150 #> [61]  120  110  100  119  110   94   96   75 #>  #> $`48`$max_repeats #> [1] 1 #>  #> $`48`$last_value #> [1] 75 #>  #> $`48`$any_zeros #> [1] FALSE #>  #> $`48`$meta #> $`48`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`48`$meta$resolution #> [1] \"weeks\" #>  #> $`48`$meta$date_range #> $`48`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`48`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`49` #> $`49`$diff #> $`49`$diff$max #> [1] 36 #>  #>  #> $`49`$range #> $`49`$range$min #> [1] 0 #>  #> $`49`$range$max #> [1] 90 #>  #>  #> $`49`$all_values #>  [1]  4  6  6 12 14 18  8 18 13 17  8  3 17 11  7  1  5  3  2  6  5  0  0  0  1 #> [26]  1  2  1  0  1  1  0  1  0  2  1  8 11  5 14  8 29 36 64 41 62 90 54 27 17 #> [51]  5  8  6  4  5  1  7  4  2  4  5  4  5  1  5  7  1  6 #>  #> $`49`$max_repeats #> [1] 3 #>  #> $`49`$last_value #> [1] 6 #>  #> $`49`$any_zeros #> [1] TRUE #>  #> $`49`$meta #> $`49`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`49`$meta$resolution #> [1] \"weeks\" #>  #> $`49`$meta$date_range #> $`49`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`49`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`50` #> $`50`$diff #> $`50`$diff$max #> [1] 35 #>  #>  #> $`50`$range #> $`50`$range$min #> [1] 0 #>  #> $`50`$range$max #> [1] 76 #>  #>  #> $`50`$all_values #>  [1]  0  0  1  0  0  0  8  6 12  8  8  6  7  3  0  2  0  3  2  0  3  1  1  0  0 #> [26]  0  0  0  0  1  0  0  0  0  1  1  0  1  1  0  2 15 34 45 66 66 76 41 10 11 #> [51]  6  1  0  2  2  1  5  3  3  0  0  1  0  2  0  0  2  0 #>  #> $`50`$max_repeats #> [1] 6 #>  #> $`50`$last_value #> [1] 0 #>  #> $`50`$any_zeros #> [1] TRUE #>  #> $`50`$meta #> $`50`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`50`$meta$resolution #> [1] \"weeks\" #>  #> $`50`$meta$date_range #> $`50`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`50`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`51` #> $`51`$diff #> $`51`$diff$max #> [1] 167 #>  #>  #> $`51`$range #> $`51`$range$min #> [1] 18 #>  #> $`51`$range$max #> [1] 469 #>  #>  #> $`51`$all_values #>  [1]  39  37  41  38  33  37  44  45  46  56  51  66  47  47  42  39  48  40  42 #> [20]  37  47  25  28  40  29  25  33  21  24  29  20  27  18  30  50  52  89 186 #> [39] 315 339 273 440 469 338 285 274 280 211 112  72  57  64  63  54  62  56  45 #> [58]  59  51  46  55  29  47  39  47  39  43  46 #>  #> $`51`$max_repeats #> [1] 2 #>  #> $`51`$last_value #> [1] 46 #>  #> $`51`$any_zeros #> [1] FALSE #>  #> $`51`$meta #> $`51`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`51`$meta$resolution #> [1] \"weeks\" #>  #> $`51`$meta$date_range #> $`51`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`51`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`53` #> $`53`$diff #> $`53`$diff$max #> [1] 335 #>  #>  #> $`53`$range #> $`53`$range$min #> [1] 5 #>  #> $`53`$range$max #> [1] 716 #>  #>  #> $`53`$all_values #>  [1]   8   5   7  12  14  19  25  19  26  37  35  41  58  54  65  57  64  59  46 #> [20]  67  50  27  30  23  15  17  13  12   7   8  10  15  10   8  17  17  20  35 #> [39]  42 105 270 605 716 707 709 387 380 208 133  80  56  44  42  37  34  57  42 #> [58]  30  28  33  23  32  16  11  14  12  12  14 #>  #> $`53`$max_repeats #> [1] 2 #>  #> $`53`$last_value #> [1] 14 #>  #> $`53`$any_zeros #> [1] FALSE #>  #> $`53`$meta #> $`53`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`53`$meta$resolution #> [1] \"weeks\" #>  #> $`53`$meta$date_range #> $`53`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`53`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`54` #> $`54`$diff #> $`54`$diff$max #> [1] 111 #>  #>  #> $`54`$range #> $`54`$range$min #> [1] 0 #>  #> $`54`$range$max #> [1] 320 #>  #>  #> $`54`$all_values #>  [1]   5  12  17  30  27  48  21  44  42  49  41  38  23  23  14   8   6  15   7 #> [20]   6   4   7   8   4   1   9   1   2   4   1   0   1   1   1   5  12  23  66 #> [39]  84 130 135 209 320 236 199 149 188 138  37  13  20  23  16  10  13   8   4 #> [58]  10  15   7   9   5   4   5   4   6  11   8 #>  #> $`54`$max_repeats #> [1] 3 #>  #> $`54`$last_value #> [1] 8 #>  #> $`54`$any_zeros #> [1] TRUE #>  #> $`54`$meta #> $`54`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`54`$meta$resolution #> [1] \"weeks\" #>  #> $`54`$meta$date_range #> $`54`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`54`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`55` #> $`55`$diff #> $`55`$diff$max #> [1] 219 #>  #>  #> $`55`$range #> $`55`$range$min #> [1] 0 #>  #> $`55`$range$max #> [1] 498 #>  #>  #> $`55`$all_values #>  [1]  28  29  27  64  46  50  58  55  50  69  51  65  46  36  28  24  14  15   8 #> [20]   8   7   2   1   0   3   5   1   1   3   2   0   0   4   1   1   6   8  17 #> [39]  34  50 109 255 474 478 498 444 476 324 165  96  44  22  24   7  10   3  10 #> [58]   7   8   7   7  12   3   0   8   4   6   3 #>  #> $`55`$max_repeats #> [1] 2 #>  #> $`55`$last_value #> [1] 3 #>  #> $`55`$any_zeros #> [1] TRUE #>  #> $`55`$meta #> $`55`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`55`$meta$resolution #> [1] \"weeks\" #>  #> $`55`$meta$date_range #> $`55`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`55`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>  #> $`56` #> $`56`$diff #> $`56`$diff$max #> [1] 34 #>  #>  #> $`56`$range #> $`56`$range$min #> [1] 0 #>  #> $`56`$range$max #> [1] 73 #>  #>  #> $`56`$all_values #>  [1]  2  2  5  5  4  4  6  4  8  8  1  5  6  4  4  6  9  6  3  0  2  2  2  0  2 #> [26]  0  0  0  0  0  0  0  0  0  1  3  1  5  8 13 47 45 73 52 35 51 50 33 16 11 #> [51]  5  7  2  1  1  0  3  1  0  1  3  2  0  1  2  1  1  0 #>  #> $`56`$max_repeats #> [1] 9 #>  #> $`56`$last_value #> [1] 0 #>  #> $`56`$any_zeros #> [1] TRUE #>  #> $`56`$meta #> $`56`$meta$cut_date #> [1] \"2023-05-27\" #>  #> $`56`$meta$resolution #> [1] \"weeks\" #>  #> $`56`$meta$date_range #> $`56`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`56`$meta$date_range$max #> [1] \"2023-05-27\" #>  #>  #>  #>   ## prepare seed with cut date plane_seed(prepped_observed, cut_date = \"2022-10-29\") #> $US #> $US$diff #> $US$diff$max #> [1] 1973 #>  #>  #> $US$range #> $US$range$min #> [1] 562 #>  #> $US$range$max #> [1] 4353 #>  #>  #> $US$all_values #>  [1] 1256 1573 1666 1942 2247 2878 3008 3182 3331 3415 3646 3250 3225 3300 3170 #> [16] 2800 2759 2224 1861 1432 1133  875  841  700  610  630  562  573  595  601 #> [31]  623  644  742  896 1331 1694 2380 4353 #>  #> $US$max_repeats #> [1] 1 #>  #> $US$last_value #> [1] 4353 #>  #> $US$any_zeros #> [1] FALSE #>  #> $US$meta #> $US$meta$cut_date #> [1] \"2022-10-29\" #>  #> $US$meta$resolution #> [1] \"weeks\" #>  #> $US$meta$date_range #> $US$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $US$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`01` #> $`01`$diff #> $`01`$diff$max #> [1] 121 #>  #>  #> $`01`$range #> $`01`$range$min #> [1] 10 #>  #> $`01`$range$max #> [1] 262 #>  #>  #> $`01`$all_values #>  [1]  12  20  14  35  30  30  25  32  29  19  30  13  25  15  12  22  19  18  17 #> [20]  14  10  24  21  10  19  12  19  11  19  21  11  17  20  24  41  86 141 262 #>  #> $`01`$max_repeats #> [1] 2 #>  #> $`01`$last_value #> [1] 262 #>  #> $`01`$any_zeros #> [1] FALSE #>  #> $`01`$meta #> $`01`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`01`$meta$resolution #> [1] \"weeks\" #>  #> $`01`$meta$date_range #> $`01`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`01`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`02` #> $`02`$diff #> $`02`$diff$max #> [1] 14 #>  #>  #> $`02`$range #> $`02`$range$min #> [1] 0 #>  #> $`02`$range$max #> [1] 17 #>  #>  #> $`02`$all_values #>  [1]  0  0  1  0  2  1  3  0  2  2  1  3  4  5 17  3  2  6  1  3  2  3  0  0  0 #> [26]  0  1  1  1  0  5  0  0  2  3  2  3 14 #>  #> $`02`$max_repeats #> [1] 4 #>  #> $`02`$last_value #> [1] 14 #>  #> $`02`$any_zeros #> [1] TRUE #>  #> $`02`$meta #> $`02`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`02`$meta$resolution #> [1] \"weeks\" #>  #> $`02`$meta$date_range #> $`02`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`02`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`04` #> $`04`$diff #> $`04`$diff$max #> [1] 117 #>  #>  #> $`04`$range #> $`04`$range$min #> [1] 5 #>  #> $`04`$range$max #> [1] 237 #>  #>  #> $`04`$all_values #>  [1]  63  66  72  91  85 113 131 108 112 101 147 162 176 212 237 196 204  87  52 #> [20]  41  13  15  13  19  21  11  11  18  16  16   5   7   9  10  18  14  22  34 #>  #> $`04`$max_repeats #> [1] 2 #>  #> $`04`$last_value #> [1] 34 #>  #> $`04`$any_zeros #> [1] FALSE #>  #> $`04`$meta #> $`04`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`04`$meta$resolution #> [1] \"weeks\" #>  #> $`04`$meta$date_range #> $`04`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`04`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`05` #> $`05`$diff #> $`05`$diff$max #> [1] 34 #>  #>  #> $`05`$range #> $`05`$range$min #> [1] 3 #>  #> $`05`$range$max #> [1] 89 #>  #>  #> $`05`$all_values #>  [1] 24 32 42 58 62 67 89 59 83 50 37 32 23 22 16 16 21 20 13 16 11  6 21 14  5 #> [26]  8  7  4  3  8  6  4  8 10 21 40 50 84 #>  #> $`05`$max_repeats #> [1] 2 #>  #> $`05`$last_value #> [1] 84 #>  #> $`05`$any_zeros #> [1] FALSE #>  #> $`05`$meta #> $`05`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`05`$meta$resolution #> [1] \"weeks\" #>  #> $`05`$meta$date_range #> $`05`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`05`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`06` #> $`06`$diff #> $`06`$diff$max #> [1] 106 #>  #>  #> $`06`$range #> $`06`$range$min #> [1] 18 #>  #> $`06`$range$max #> [1] 453 #>  #>  #> $`06`$all_values #>  [1]  34  18  34  32  45  57  63  84 106 100 165 218 202 308 386 405 453 397 304 #> [20] 238 192 122 102  64  46  39  38  39  33  35  29  24  35  72  93  97 124 211 #>  #> $`06`$max_repeats #> [1] 1 #>  #> $`06`$last_value #> [1] 211 #>  #> $`06`$any_zeros #> [1] FALSE #>  #> $`06`$meta #> $`06`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`06`$meta$resolution #> [1] \"weeks\" #>  #> $`06`$meta$date_range #> $`06`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`06`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`08` #> $`08`$diff #> $`08`$diff$max #> [1] 92 #>  #>  #> $`08`$range #> $`08`$range$min #> [1] 1 #>  #> $`08`$range$max #> [1] 260 #>  #>  #> $`08`$all_values #>  [1]  27  22  27  25  42  60  94 117 105 146 187 168 260 171 110  91  72  33  27 #> [20]   9  14  11  11   8   9  14   8  11   1   1   3   3   4   3   1   5  15  32 #>  #> $`08`$max_repeats #> [1] 2 #>  #> $`08`$last_value #> [1] 32 #>  #> $`08`$any_zeros #> [1] FALSE #>  #> $`08`$meta #> $`08`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`08`$meta$resolution #> [1] \"weeks\" #>  #> $`08`$meta$date_range #> $`08`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`08`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`09` #> $`09`$diff #> $`09`$diff$max #> [1] 29 #>  #>  #> $`09`$range #> $`09`$range$min #> [1] 0 #>  #> $`09`$range$max #> [1] 79 #>  #>  #> $`09`$all_values #>  [1]  0  1  7  7  6 18 25 30 44 51 50 57 76 79 63 34 20 37 14  4  9  4  3  6  4 #> [26]  3  0  2  9  4  3  4  3  2  3  9  9 37 #>  #> $`09`$max_repeats #> [1] 2 #>  #> $`09`$last_value #> [1] 37 #>  #> $`09`$any_zeros #> [1] TRUE #>  #> $`09`$meta #> $`09`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`09`$meta$resolution #> [1] \"weeks\" #>  #> $`09`$meta$date_range #> $`09`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`09`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`10` #> $`10`$diff #> $`10`$diff$max #> [1] 27 #>  #>  #> $`10`$range #> $`10`$range$min #> [1] 0 #>  #> $`10`$range$max #> [1] 41 #>  #>  #> $`10`$all_values #>  [1]  2  3  1  1  7  6  7  4 14 41 18  6  7  4  4  4  9  5  2  4  0  1  1  0  2 #> [26]  0  1  1  1  3  0  2  0  0  0  0  1  4 #>  #> $`10`$max_repeats #> [1] 4 #>  #> $`10`$last_value #> [1] 4 #>  #> $`10`$any_zeros #> [1] TRUE #>  #> $`10`$meta #> $`10`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`10`$meta$resolution #> [1] \"weeks\" #>  #> $`10`$meta$date_range #> $`10`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`10`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`11` #> $`11`$diff #> $`11`$diff$max #> [1] 6 #>  #>  #> $`11`$range #> $`11`$range$min #> [1] 0 #>  #> $`11`$range$max #> [1] 11 #>  #>  #> $`11`$all_values #>  [1]  0  1  0  1  4  4  2  4  2  2  1  4  1  5  4  6  4  1  2  3  1  2  1  0  0 #> [26]  2  0  0  1  0  0  0  1  0  1  2  8 11 #>  #> $`11`$max_repeats #> [1] 3 #>  #> $`11`$last_value #> [1] 11 #>  #> $`11`$any_zeros #> [1] TRUE #>  #> $`11`$meta #> $`11`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`11`$meta$resolution #> [1] \"weeks\" #>  #> $`11`$meta$date_range #> $`11`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`11`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`12` #> $`12`$diff #> $`12`$diff$max #> [1] 144 #>  #>  #> $`12`$range #> $`12`$range$min #> [1] 60 #>  #> $`12`$range$max #> [1] 680 #>  #>  #> $`12`$all_values #>  [1]  64  74  66  72  69  73 109  96 103 165 163 179 223 306 406 542 680 556 465 #> [20] 321 205 177 134  97  81  87  89  67  75  70  60  78  81  77 110 105 125 260 #>  #> $`12`$max_repeats #> [1] 1 #>  #> $`12`$last_value #> [1] 260 #>  #> $`12`$any_zeros #> [1] FALSE #>  #> $`12`$meta #> $`12`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`12`$meta$resolution #> [1] \"weeks\" #>  #> $`12`$meta$date_range #> $`12`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`12`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`13` #> $`13`$diff #> $`13`$diff$max #> [1] 57 #>  #>  #> $`13`$range #> $`13`$range$min #> [1] 13 #>  #> $`13`$range$max #> [1] 176 #>  #>  #> $`13`$all_values #>  [1]  38  45  35  28  37  34  33  46  31  41  44  41  43  43  49  64  63  38  36 #> [20]  26  34  23  26  26  33  31  13  19  17  22  38  36  39  54  87 113 119 176 #>  #> $`13`$max_repeats #> [1] 2 #>  #> $`13`$last_value #> [1] 176 #>  #> $`13`$any_zeros #> [1] FALSE #>  #> $`13`$meta #> $`13`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`13`$meta$resolution #> [1] \"weeks\" #>  #> $`13`$meta$date_range #> $`13`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`13`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`15` #> $`15`$diff #> $`15`$diff$max #> [1] 6 #>  #>  #> $`15`$range #> $`15`$range$min #> [1] 0 #>  #> $`15`$range$max #> [1] 10 #>  #>  #> $`15`$all_values #>  [1]  0  0  0  0  0  1  0  1  4 10  6  4  1  4 10  9  4  3  4  6  4  2  0  1  2 #> [26]  3  2  0  1  2  1  2  3  5  4  6  4  6 #>  #> $`15`$max_repeats #> [1] 5 #>  #> $`15`$last_value #> [1] 6 #>  #> $`15`$any_zeros #> [1] TRUE #>  #> $`15`$meta #> $`15`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`15`$meta$resolution #> [1] \"weeks\" #>  #> $`15`$meta$date_range #> $`15`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`15`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`16` #> $`16`$diff #> $`16`$diff$max #> [1] 12 #>  #>  #> $`16`$range #> $`16`$range$min #> [1] 0 #>  #> $`16`$range$max #> [1] 21 #>  #>  #> $`16`$all_values #>  [1]  1  1  4  3 15 15 15 21 17 19 14 15 15 16 13  7 11  6  6  3  3  4  4  0  1 #> [26]  2  0  2  1  3  0  1  3  2  1  1  1  1 #>  #> $`16`$max_repeats #> [1] 4 #>  #> $`16`$last_value #> [1] 1 #>  #> $`16`$any_zeros #> [1] TRUE #>  #> $`16`$meta #> $`16`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`16`$meta$resolution #> [1] \"weeks\" #>  #> $`16`$meta$date_range #> $`16`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`16`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`17` #> $`17`$diff #> $`17`$diff$max #> [1] 59 #>  #>  #> $`17`$range #> $`17`$range$min #> [1] 3 #>  #> $`17`$range$max #> [1] 128 #>  #>  #> $`17`$all_values #>  [1]   9  26  26  21  39  74 105 100 103  92 126  99 114 128  93  49  41  18  23 #> [20]  18  11   9  14   3  12  13  12  14  15  10   3   5  16  11  11  31  45 104 #>  #> $`17`$max_repeats #> [1] 2 #>  #> $`17`$last_value #> [1] 104 #>  #> $`17`$any_zeros #> [1] FALSE #>  #> $`17`$meta #> $`17`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`17`$meta$resolution #> [1] \"weeks\" #>  #> $`17`$meta$date_range #> $`17`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`17`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`18` #> $`18`$diff #> $`18`$diff$max #> [1] 36 #>  #>  #> $`18`$range #> $`18`$range$min #> [1] 7 #>  #> $`18`$range$max #> [1] 125 #>  #>  #> $`18`$all_values #>  [1]  34  61  42  72 106 124 125 113 117  81  66  73  47  42  44  33  25  13  23 #> [20]  21  17  12  11   7  18  11   7  10  15  22  27  26  34  33  51  57  72 102 #>  #> $`18`$max_repeats #> [1] 1 #>  #> $`18`$last_value #> [1] 102 #>  #> $`18`$any_zeros #> [1] FALSE #>  #> $`18`$meta #> $`18`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`18`$meta$resolution #> [1] \"weeks\" #>  #> $`18`$meta$date_range #> $`18`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`18`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`19` #> $`19`$diff #> $`19`$diff$max #> [1] 18 #>  #>  #> $`19`$range #> $`19`$range$min #> [1] 0 #>  #> $`19`$range$max #> [1] 62 #>  #>  #> $`19`$all_values #>  [1] 52 44 62 57 61 43 42 37 21 28 20 15 21 17 10  6  5 10  5  7  4  3  0  1  0 #> [26]  1  2  3  1  3  0  1  7  5  5  7 10 19 #>  #> $`19`$max_repeats #> [1] 2 #>  #> $`19`$last_value #> [1] 19 #>  #> $`19`$any_zeros #> [1] TRUE #>  #> $`19`$meta #> $`19`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`19`$meta$resolution #> [1] \"weeks\" #>  #> $`19`$meta$date_range #> $`19`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`19`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`20` #> $`20`$diff #> $`20`$diff$max #> [1] 16 #>  #>  #> $`20`$range #> $`20`$range$min #> [1] 0 #>  #> $`20`$range$max #> [1] 45 #>  #>  #> $`20`$all_values #>  [1] 20 25 38 32 45 32 44 28 34 21 30 20 15 10  8  2  3  3  2  3  4  3  2  3  5 #> [26]  2  2  3  1  3  0  0  1  5  5  7 16 20 #>  #> $`20`$max_repeats #> [1] 2 #>  #> $`20`$last_value #> [1] 20 #>  #> $`20`$any_zeros #> [1] TRUE #>  #> $`20`$meta #> $`20`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`20`$meta$resolution #> [1] \"weeks\" #>  #> $`20`$meta$date_range #> $`20`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`20`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`21` #> $`21`$diff #> $`21`$diff$max #> [1] 51 #>  #>  #> $`21`$range #> $`21`$range$min #> [1] 3 #>  #> $`21`$range$max #> [1] 92 #>  #>  #> $`21`$all_values #>  [1] 15 20 28 20 35 43 39 65 88 92 87 89 63 41 45 24 25 25  7 16  4  7  9  3  7 #> [26]  9  6  6  6  6 19  3 11  3 10 23 15 66 #>  #> $`21`$max_repeats #> [1] 4 #>  #> $`21`$last_value #> [1] 66 #>  #> $`21`$any_zeros #> [1] FALSE #>  #> $`21`$meta #> $`21`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`21`$meta$resolution #> [1] \"weeks\" #>  #> $`21`$meta$date_range #> $`21`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`21`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`22` #> $`22`$diff #> $`22`$diff$max #> [1] 91 #>  #>  #> $`22`$range #> $`22`$range$min #> [1] 2 #>  #> $`22`$range$max #> [1] 188 #>  #>  #> $`22`$all_values #>  [1]  22  40  36  31  31  50  42  46  28  41  40  19  24  20  17  10  16  21  14 #> [20]   8   4   3   5  15   2   5   7   6  10   6  19  18  23  38  43  82  97 188 #>  #> $`22`$max_repeats #> [1] 2 #>  #> $`22`$last_value #> [1] 188 #>  #> $`22`$any_zeros #> [1] FALSE #>  #> $`22`$meta #> $`22`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`22`$meta$resolution #> [1] \"weeks\" #>  #> $`22`$meta$date_range #> $`22`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`22`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`23` #> $`23`$diff #> $`23`$diff$max #> [1] 31 #>  #>  #> $`23`$range #> $`23`$range$min #> [1] 0 #>  #> $`23`$range$max #> [1] 41 #>  #>  #> $`23`$all_values #>  [1]  7  4  2  3  2  1  3 10 11 15 28 23 10 41 31 16 12 15  5  3  3  0  0  2  0 #> [26]  0  2  0  0  0  0  0  0  1  0  0  0  3 #>  #> $`23`$max_repeats #> [1] 6 #>  #> $`23`$last_value #> [1] 3 #>  #> $`23`$any_zeros #> [1] TRUE #>  #> $`23`$meta #> $`23`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`23`$meta$resolution #> [1] \"weeks\" #>  #> $`23`$meta$date_range #> $`23`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`23`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`24` #> $`24`$diff #> $`24`$diff$max #> [1] 60 #>  #>  #> $`24`$range #> $`24`$range$min #> [1] 1 #>  #> $`24`$range$max #> [1] 109 #>  #>  #> $`24`$all_values #>  [1]   8  14  17  21  18  30  28  31  57  48  43  57  46  61  46  32  18  20  23 #> [20]  22  13  15   5   5   5   3   5  10   5   1   3   8   3   9  21  25  49 109 #>  #> $`24`$max_repeats #> [1] 3 #>  #> $`24`$last_value #> [1] 109 #>  #> $`24`$any_zeros #> [1] FALSE #>  #> $`24`$meta #> $`24`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`24`$meta$resolution #> [1] \"weeks\" #>  #> $`24`$meta$date_range #> $`24`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`24`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`25` #> $`25`$diff #> $`25`$diff$max #> [1] 59 #>  #>  #> $`25`$range #> $`25`$range$min #> [1] 2 #>  #> $`25`$range$max #> [1] 188 #>  #>  #> $`25`$all_values #>  [1]  37  54  30  14  34  44  44 100 156 166 188 182 184 172 145  86  50  47  13 #> [20]  17   8  15  14  12   5  11   9   3  12   7   4   2   4   4   8   7   8  14 #>  #> $`25`$max_repeats #> [1] 2 #>  #> $`25`$last_value #> [1] 14 #>  #> $`25`$any_zeros #> [1] FALSE #>  #> $`25`$meta #> $`25`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`25`$meta$resolution #> [1] \"weeks\" #>  #> $`25`$meta$date_range #> $`25`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`25`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`26` #> $`26`$diff #> $`26`$diff$max #> [1] 51 #>  #>  #> $`26`$range #> $`26`$range$min #> [1] 0 #>  #> $`26`$range$max #> [1] 184 #>  #>  #> $`26`$all_values #>  [1]  40  52  55  82  92 131 125 173 176 139 147 140 174 184 133  89  57  39  19 #> [20]  18   9  12   6   7   4   0   5   0   2   1  10   3   5   4  13  14  17  46 #>  #> $`26`$max_repeats #> [1] 1 #>  #> $`26`$last_value #> [1] 46 #>  #> $`26`$any_zeros #> [1] TRUE #>  #> $`26`$meta #> $`26`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`26`$meta$resolution #> [1] \"weeks\" #>  #> $`26`$meta$date_range #> $`26`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`26`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`27` #> $`27`$diff #> $`27`$diff$max #> [1] 32 #>  #>  #> $`27`$range #> $`27`$range$min #> [1] 0 #>  #> $`27`$range$max #> [1] 43 #>  #>  #> $`27`$all_values #>  [1] 19 28 19 31 35 29 37 34 24 28 36 29 30 15 12 14  4  5  9  0  1  2  2  3  3 #> [26]  2  5  1  0  1  1  0  3  2 11  7 11 43 #>  #> $`27`$max_repeats #> [1] 2 #>  #> $`27`$last_value #> [1] 43 #>  #> $`27`$any_zeros #> [1] TRUE #>  #> $`27`$meta #> $`27`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`27`$meta$resolution #> [1] \"weeks\" #>  #> $`27`$meta$date_range #> $`27`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`27`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`28` #> $`28`$diff #> $`28`$diff$max #> [1] 75 #>  #>  #> $`28`$range #> $`28`$range$min #> [1] 13 #>  #> $`28`$range$max #> [1] 165 #>  #>  #> $`28`$all_values #>  [1]  22  27  31  34  32  36  38  20  34  23  20  26  21  30  27  22  23  13  19 #> [20]  19  17  24  18  24  17  21  13  16  15  19  22  32  20  35  58  70  90 165 #>  #> $`28`$max_repeats #> [1] 2 #>  #> $`28`$last_value #> [1] 165 #>  #> $`28`$any_zeros #> [1] FALSE #>  #> $`28`$meta #> $`28`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`28`$meta$resolution #> [1] \"weeks\" #>  #> $`28`$meta$date_range #> $`28`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`28`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`29` #> $`29`$diff #> $`29`$diff$max #> [1] 33 #>  #>  #> $`29`$range #> $`29`$range$min #> [1] 4 #>  #> $`29`$range$max #> [1] 97 #>  #>  #> $`29`$all_values #>  [1] 42 60 57 77 67 96 84 97 78 78 70 59 68 39 37 20 33 19 24 18 14 15 14 18 14 #> [26] 22 17 11  6 10  4  6  7 14  6 12 23 56 #>  #> $`29`$max_repeats #> [1] 2 #>  #> $`29`$last_value #> [1] 56 #>  #> $`29`$any_zeros #> [1] FALSE #>  #> $`29`$meta #> $`29`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`29`$meta$resolution #> [1] \"weeks\" #>  #> $`29`$meta$date_range #> $`29`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`29`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`30` #> $`30`$diff #> $`30`$diff$max #> [1] 18 #>  #>  #> $`30`$range #> $`30`$range$min #> [1] 0 #>  #> $`30`$range$max #> [1] 36 #>  #>  #> $`30`$all_values #>  [1] 13  9 15 19 15 17 21 36 18 18 19 17 21 11  7 14 22 10  1  0  4  3  1  0  0 #> [26]  0  0  1  0  0  0  1  0  2  0  0  0  5 #>  #> $`30`$max_repeats #> [1] 4 #>  #> $`30`$last_value #> [1] 5 #>  #> $`30`$any_zeros #> [1] TRUE #>  #> $`30`$meta #> $`30`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`30`$meta$resolution #> [1] \"weeks\" #>  #> $`30`$meta$date_range #> $`30`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`30`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`31` #> $`31`$diff #> $`31`$diff$max #> [1] 31 #>  #>  #> $`31`$range #> $`31`$range$min #> [1] 0 #>  #> $`31`$range$max #> [1] 70 #>  #>  #> $`31`$all_values #>  [1] 29 34 36 60 39 70 50 22 35 29 19 14  4  4  7  3  9  6  3  7  8  8  4  1  4 #> [26]  2  0  7  8  8  4  7  9 11 22  9 14 16 #>  #> $`31`$max_repeats #> [1] 2 #>  #> $`31`$last_value #> [1] 16 #>  #> $`31`$any_zeros #> [1] TRUE #>  #> $`31`$meta #> $`31`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`31`$meta$resolution #> [1] \"weeks\" #>  #> $`31`$meta$date_range #> $`31`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`31`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`32` #> $`32`$diff #> $`32`$diff$max #> [1] 38 #>  #>  #> $`32`$range #> $`32`$range$min #> [1] 1 #>  #> $`32`$range$max #> [1] 96 #>  #>  #> $`32`$all_values #>  [1]  6  8  9 20 25 37 43 59 96 73 76 53 44 81 85 76 64 86 48 30 24 18 16  3  6 #> [26]  1  1  2  7  3  6  8  9 14 37  8 14 12 #>  #> $`32`$max_repeats #> [1] 2 #>  #> $`32`$last_value #> [1] 12 #>  #> $`32`$any_zeros #> [1] FALSE #>  #> $`32`$meta #> $`32`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`32`$meta$resolution #> [1] \"weeks\" #>  #> $`32`$meta$date_range #> $`32`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`32`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`33` #> $`33`$diff #> $`33`$diff$max #> [1] 14 #>  #>  #> $`33`$range #> $`33`$range$min #> [1] 0 #>  #> $`33`$range$max #> [1] 32 #>  #>  #> $`33`$all_values #>  [1] 11  7  4  3 17  8  9  9 16 19 32 30 26 15 14 10  8  4  2  1  3  1  0  2  2 #> [26]  1  1  0  0  0  0  3  2  0  0  0  1  0 #>  #> $`33`$max_repeats #> [1] 4 #>  #> $`33`$last_value #> [1] 0 #>  #> $`33`$any_zeros #> [1] TRUE #>  #> $`33`$meta #> $`33`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`33`$meta$resolution #> [1] \"weeks\" #>  #> $`33`$meta$date_range #> $`33`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`33`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`34` #> $`34`$diff #> $`34`$diff$max #> [1] 58 #>  #>  #> $`34`$range #> $`34`$range$min #> [1] 6 #>  #> $`34`$range$max #> [1] 152 #>  #>  #> $`34`$all_values #>  [1]  25  32  35  41  39  52  63  94 152 130 131 129 116 108  82  79  48  50  49 #> [20]  17  17  18  20   7  10  19   6  15  12   9  13   9  19  17  28  31  32  76 #>  #> $`34`$max_repeats #> [1] 2 #>  #> $`34`$last_value #> [1] 76 #>  #> $`34`$any_zeros #> [1] FALSE #>  #> $`34`$meta #> $`34`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`34`$meta$resolution #> [1] \"weeks\" #>  #> $`34`$meta$date_range #> $`34`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`34`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`35` #> $`35`$diff #> $`35`$diff$max #> [1] 35 #>  #>  #> $`35`$range #> $`35`$range$min #> [1] 0 #>  #> $`35`$range$max #> [1] 69 #>  #>  #> $`35`$all_values #>  [1]  7  8  3  6  8 17 43 40 42 28 48 55 69 34 69 50 54 27 16  8 14  0  6  5  3 #> [26]  6  7  7  6 21  7  4  9 12 27 22 29 56 #>  #> $`35`$max_repeats #> [1] 2 #>  #> $`35`$last_value #> [1] 56 #>  #> $`35`$any_zeros #> [1] TRUE #>  #> $`35`$meta #> $`35`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`35`$meta$resolution #> [1] \"weeks\" #>  #> $`35`$meta$date_range #> $`35`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`35`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`36` #> $`36`$diff #> $`36`$diff$max #> [1] 93 #>  #>  #> $`36`$range #> $`36`$range$min #> [1] 10 #>  #> $`36`$range$max #> [1] 302 #>  #>  #> $`36`$all_values #>  [1]  34  30  38  56  57 101  87 180 191 245 302 265 239 201 177 169 119 102  89 #> [20]  63  43  35  36  12  15  11  10  19  26  21  14  20  12  29  38  49  49 107 #>  #> $`36`$max_repeats #> [1] 2 #>  #> $`36`$last_value #> [1] 107 #>  #> $`36`$any_zeros #> [1] FALSE #>  #> $`36`$meta #> $`36`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`36`$meta$resolution #> [1] \"weeks\" #>  #> $`36`$meta$date_range #> $`36`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`36`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`37` #> $`37`$diff #> $`37`$diff$max #> [1] 132 #>  #>  #> $`37`$range #> $`37`$range$min #> [1] 2 #>  #> $`37`$range$max #> [1] 211 #>  #>  #> $`37`$all_values #>  [1]  32  32  36  54  52  15  25  37  45  53  56  60  51  47  54  34  30  45  73 #> [20]  48  41  19  41  41   8   2  12  13  13   8  14  17  13  21  22  32  79 211 #>  #> $`37`$max_repeats #> [1] 2 #>  #> $`37`$last_value #> [1] 211 #>  #> $`37`$any_zeros #> [1] FALSE #>  #> $`37`$meta #> $`37`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`37`$meta$resolution #> [1] \"weeks\" #>  #> $`37`$meta$date_range #> $`37`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`37`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`38` #> $`38`$diff #> $`38`$diff$max #> [1] 5 #>  #>  #> $`38`$range #> $`38`$range$min #> [1] 0 #>  #> $`38`$range$max #> [1] 7 #>  #>  #> $`38`$all_values #>  [1] 5 5 0 2 6 4 5 3 5 7 5 2 1 1 1 0 3 2 0 0 0 0 1 2 0 2 2 0 0 3 0 0 1 0 0 2 1 2 #>  #> $`38`$max_repeats #> [1] 4 #>  #> $`38`$last_value #> [1] 2 #>  #> $`38`$any_zeros #> [1] TRUE #>  #> $`38`$meta #> $`38`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`38`$meta$resolution #> [1] \"weeks\" #>  #> $`38`$meta$date_range #> $`38`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`38`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`39` #> $`39`$diff #> $`39`$diff$max #> [1] 76 #>  #>  #> $`39`$range #> $`39`$range$min #> [1] 1 #>  #> $`39`$range$max #> [1] 136 #>  #>  #> $`39`$all_values #>  [1]  29  41  33  50  86 104 106 100 135 123 136 100 104  82  61  47  41  25  24 #> [20]  12  18   4   8  12   7   3   1  12  14  13  16   5  12  17  18  32  39 115 #>  #> $`39`$max_repeats #> [1] 1 #>  #> $`39`$last_value #> [1] 115 #>  #> $`39`$any_zeros #> [1] FALSE #>  #> $`39`$meta #> $`39`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`39`$meta$resolution #> [1] \"weeks\" #>  #> $`39`$meta$date_range #> $`39`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`39`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`40` #> $`40`$diff #> $`40`$diff$max #> [1] 47 #>  #>  #> $`40`$range #> $`40`$range$min #> [1] 6 #>  #> $`40`$range$max #> [1] 167 #>  #>  #> $`40`$all_values #>  [1]  70  78  81  95 129 167 163 164 117 107  76  43  35  51  36  35  37  26  28 #> [20]  30  25  26  22   6   6  24   9   7  10   9  10   9   8   6   7  17  36  59 #>  #> $`40`$max_repeats #> [1] 2 #>  #> $`40`$last_value #> [1] 59 #>  #> $`40`$any_zeros #> [1] FALSE #>  #> $`40`$meta #> $`40`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`40`$meta$resolution #> [1] \"weeks\" #>  #> $`40`$meta$date_range #> $`40`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`40`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`41` #> $`41`$diff #> $`41`$diff$max #> [1] 14 #>  #>  #> $`41`$range #> $`41`$range$min #> [1] 0 #>  #> $`41`$range$max #> [1] 38 #>  #>  #> $`41`$all_values #>  [1]  2  6  3  2  9 19 23 10 15 15 29 20 30 30 38 29 29 16 12  7  2  0  7  1  2 #> [26]  0  2  0  0  0  1  1  1  1  1  2  6  5 #>  #> $`41`$max_repeats #> [1] 5 #>  #> $`41`$last_value #> [1] 5 #>  #> $`41`$any_zeros #> [1] TRUE #>  #> $`41`$meta #> $`41`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`41`$meta$resolution #> [1] \"weeks\" #>  #> $`41`$meta$date_range #> $`41`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`41`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`42` #> $`42`$diff #> $`42`$diff$max #> [1] 82 #>  #>  #> $`42`$range #> $`42`$range$min #> [1] 25 #>  #> $`42`$range$max #> [1] 213 #>  #>  #> $`42`$all_values #>  [1]  60  96  82  77  82 120 113 153 207 207 213 169 156 186 151  85  63  55  43 #> [20]  38  44  40  25  37  28  28  30  44  29  40  35  29  35  53  59  76  97 179 #>  #> $`42`$max_repeats #> [1] 2 #>  #> $`42`$last_value #> [1] 179 #>  #> $`42`$any_zeros #> [1] FALSE #>  #> $`42`$meta #> $`42`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`42`$meta$resolution #> [1] \"weeks\" #>  #> $`42`$meta$date_range #> $`42`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`42`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`44` #> $`44`$diff #> $`44`$diff$max #> [1] 5 #>  #>  #> $`44`$range #> $`44`$range$min #> [1] 0 #>  #> $`44`$range$max #> [1] 10 #>  #>  #> $`44`$all_values #>  [1]  0  1  0  2  0  1  1  3  6 10  8  5  6 10  5  6  6  2  1  1  0  0  1  0  0 #> [26]  0  0  0  0  0  0  0  0  1  1  0  2  0 #>  #> $`44`$max_repeats #> [1] 10 #>  #> $`44`$last_value #> [1] 0 #>  #> $`44`$any_zeros #> [1] TRUE #>  #> $`44`$meta #> $`44`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`44`$meta$resolution #> [1] \"weeks\" #>  #> $`44`$meta$date_range #> $`44`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`44`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`45` #> $`45`$diff #> $`45`$diff$max #> [1] 75 #>  #>  #> $`45`$range #> $`45`$range$min #> [1] 6 #>  #> $`45`$range$max #> [1] 163 #>  #>  #> $`45`$all_values #>  [1]  20  21  27  23  21  23  15  23  32  31  36  40  23  36  44  35  32  32  29 #> [20]  29  15  15   9  17  20  11  13   6  10  14   8   8  18  18  38  37  88 163 #>  #> $`45`$max_repeats #> [1] 2 #>  #> $`45`$last_value #> [1] 163 #>  #> $`45`$any_zeros #> [1] FALSE #>  #> $`45`$meta #> $`45`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`45`$meta$resolution #> [1] \"weeks\" #>  #> $`45`$meta$date_range #> $`45`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`45`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`46` #> $`46`$diff #> $`46`$diff$max #> [1] 19 #>  #>  #> $`46`$range #> $`46`$range$min #> [1] 0 #>  #> $`46`$range$max #> [1] 34 #>  #>  #> $`46`$all_values #>  [1] 19 14 15 34 15 10  5  9 10  4  7  8  4 10  6  3  1  1  2  3  1  0  0  8  9 #> [26]  5  7  8  6  7  7  7  7 10 10 13 12  9 #>  #> $`46`$max_repeats #> [1] 4 #>  #> $`46`$last_value #> [1] 9 #>  #> $`46`$any_zeros #> [1] TRUE #>  #> $`46`$meta #> $`46`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`46`$meta$resolution #> [1] \"weeks\" #>  #> $`46`$meta$date_range #> $`46`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`46`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`47` #> $`47`$diff #> $`47`$diff$max #> [1] 36 #>  #>  #> $`47`$range #> $`47`$range$min #> [1] 11 #>  #> $`47`$range$max #> [1] 130 #>  #>  #> $`47`$all_values #>  [1]  24  29  47  33  32  40  45  48  36  45  39  46  23  33  24  22  22  22  27 #> [20]  22  27  12  11  15  20  47  16  15  16  17  24  20  35  41  41  65  94 130 #>  #> $`47`$max_repeats #> [1] 3 #>  #> $`47`$last_value #> [1] 130 #>  #> $`47`$any_zeros #> [1] FALSE #>  #> $`47`$meta #> $`47`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`47`$meta$resolution #> [1] \"weeks\" #>  #> $`47`$meta$date_range #> $`47`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`47`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`48` #> $`48`$diff #> $`48`$diff$max #> [1] 235 #>  #>  #> $`48`$range #> $`48`$range$min #> [1] 78 #>  #> $`48`$range$max #> [1] 744 #>  #>  #> $`48`$all_values #>  [1] 173 284 347 345 453 663 630 507 357 351 337 191 165 156 149 138 125 100 140 #> [20] 120  94  78 114  99  87  83  92 107 111  83 121 122 128 137 239 329 509 744 #>  #> $`48`$max_repeats #> [1] 1 #>  #> $`48`$last_value #> [1] 744 #>  #> $`48`$any_zeros #> [1] FALSE #>  #> $`48`$meta #> $`48`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`48`$meta$resolution #> [1] \"weeks\" #>  #> $`48`$meta$date_range #> $`48`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`48`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`49` #> $`49`$diff #> $`49`$diff$max #> [1] 14 #>  #>  #> $`49`$range #> $`49`$range$min #> [1] 0 #>  #> $`49`$range$max #> [1] 18 #>  #>  #> $`49`$all_values #>  [1]  4  6  6 12 14 18  8 18 13 17  8  3 17 11  7  1  5  3  2  6  5  0  0  0  1 #> [26]  1  2  1  0  1  1  0  1  0  2  1  8 11 #>  #> $`49`$max_repeats #> [1] 3 #>  #> $`49`$last_value #> [1] 11 #>  #> $`49`$any_zeros #> [1] TRUE #>  #> $`49`$meta #> $`49`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`49`$meta$resolution #> [1] \"weeks\" #>  #> $`49`$meta$date_range #> $`49`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`49`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`50` #> $`50`$diff #> $`50`$diff$max #> [1] 8 #>  #>  #> $`50`$range #> $`50`$range$min #> [1] 0 #>  #> $`50`$range$max #> [1] 12 #>  #>  #> $`50`$all_values #>  [1]  0  0  1  0  0  0  8  6 12  8  8  6  7  3  0  2  0  3  2  0  3  1  1  0  0 #> [26]  0  0  0  0  1  0  0  0  0  1  1  0  1 #>  #> $`50`$max_repeats #> [1] 6 #>  #> $`50`$last_value #> [1] 1 #>  #> $`50`$any_zeros #> [1] TRUE #>  #> $`50`$meta #> $`50`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`50`$meta$resolution #> [1] \"weeks\" #>  #> $`50`$meta$date_range #> $`50`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`50`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`51` #> $`51`$diff #> $`51`$diff$max #> [1] 97 #>  #>  #> $`51`$range #> $`51`$range$min #> [1] 18 #>  #> $`51`$range$max #> [1] 186 #>  #>  #> $`51`$all_values #>  [1]  39  37  41  38  33  37  44  45  46  56  51  66  47  47  42  39  48  40  42 #> [20]  37  47  25  28  40  29  25  33  21  24  29  20  27  18  30  50  52  89 186 #>  #> $`51`$max_repeats #> [1] 2 #>  #> $`51`$last_value #> [1] 186 #>  #> $`51`$any_zeros #> [1] FALSE #>  #> $`51`$meta #> $`51`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`51`$meta$resolution #> [1] \"weeks\" #>  #> $`51`$meta$date_range #> $`51`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`51`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`53` #> $`53`$diff #> $`53`$diff$max #> [1] 23 #>  #>  #> $`53`$range #> $`53`$range$min #> [1] 5 #>  #> $`53`$range$max #> [1] 67 #>  #>  #> $`53`$all_values #>  [1]  8  5  7 12 14 19 25 19 26 37 35 41 58 54 65 57 64 59 46 67 50 27 30 23 15 #> [26] 17 13 12  7  8 10 15 10  8 17 17 20 35 #>  #> $`53`$max_repeats #> [1] 2 #>  #> $`53`$last_value #> [1] 35 #>  #> $`53`$any_zeros #> [1] FALSE #>  #> $`53`$meta #> $`53`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`53`$meta$resolution #> [1] \"weeks\" #>  #> $`53`$meta$date_range #> $`53`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`53`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`54` #> $`54`$diff #> $`54`$diff$max #> [1] 43 #>  #>  #> $`54`$range #> $`54`$range$min #> [1] 0 #>  #> $`54`$range$max #> [1] 66 #>  #>  #> $`54`$all_values #>  [1]  5 12 17 30 27 48 21 44 42 49 41 38 23 23 14  8  6 15  7  6  4  7  8  4  1 #> [26]  9  1  2  4  1  0  1  1  1  5 12 23 66 #>  #> $`54`$max_repeats #> [1] 3 #>  #> $`54`$last_value #> [1] 66 #>  #> $`54`$any_zeros #> [1] TRUE #>  #> $`54`$meta #> $`54`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`54`$meta$resolution #> [1] \"weeks\" #>  #> $`54`$meta$date_range #> $`54`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`54`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`55` #> $`55`$diff #> $`55`$diff$max #> [1] 37 #>  #>  #> $`55`$range #> $`55`$range$min #> [1] 0 #>  #> $`55`$range$max #> [1] 69 #>  #>  #> $`55`$all_values #>  [1] 28 29 27 64 46 50 58 55 50 69 51 65 46 36 28 24 14 15  8  8  7  2  1  0  3 #> [26]  5  1  1  3  2  0  0  4  1  1  6  8 17 #>  #> $`55`$max_repeats #> [1] 2 #>  #> $`55`$last_value #> [1] 17 #>  #> $`55`$any_zeros #> [1] TRUE #>  #> $`55`$meta #> $`55`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`55`$meta$resolution #> [1] \"weeks\" #>  #> $`55`$meta$date_range #> $`55`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`55`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>  #> $`56` #> $`56`$diff #> $`56`$diff$max #> [1] 7 #>  #>  #> $`56`$range #> $`56`$range$min #> [1] 0 #>  #> $`56`$range$max #> [1] 9 #>  #>  #> $`56`$all_values #>  [1] 2 2 5 5 4 4 6 4 8 8 1 5 6 4 4 6 9 6 3 0 2 2 2 0 2 0 0 0 0 0 0 0 0 0 1 3 1 5 #>  #> $`56`$max_repeats #> [1] 9 #>  #> $`56`$last_value #> [1] 5 #>  #> $`56`$any_zeros #> [1] TRUE #>  #> $`56`$meta #> $`56`$meta$cut_date #> [1] \"2022-10-29\" #>  #> $`56`$meta$resolution #> [1] \"weeks\" #>  #> $`56`$meta$date_range #> $`56`$meta$date_range$min #> [1] \"2022-02-12\" #>  #> $`56`$meta$date_range$max #> [1] \"2022-10-29\" #>  #>  #>  #>"},{"path":"https://signaturescience.github.io/rplanes/reference/plane_shape.html","id":null,"dir":"Reference","previous_headings":"","what":"Shape component — plane_shape","title":"Shape component — plane_shape","text":"function identifies shape trajectory forecasted signal compare existing shapes seed data. shape identified novel, flag raised, signal considered implausible. See Details section information.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/plane_shape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shape component — plane_shape","text":"","code":"plane_shape(location, input, seed)"},{"path":"https://signaturescience.github.io/rplanes/reference/plane_shape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shape component — plane_shape","text":"location Character vector location code; location must appear input seed input Input signal data scored; object must one forecast seed Prepared seed","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/plane_shape.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shape component — plane_shape","text":"list following values: indicator: Logical whether shape evaluated signal novel (TRUE shape novel, FALSE familiar shape exists seed)","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/plane_shape.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Shape component — plane_shape","text":"function uses Dynamic Time Warping (DTW) algorithm identify shapes within seed data compares shape forecast input signal observed shapes. done three broad steps: prepared seed data divided set sliding windows step size one, representing section overall time series. length windows determined horizon length input data signal (e.g., 2 weeks). seed data vector, c(1, 2, 3, 4, 5), horizon length 2, sliding windows observed seed data : c(1, 2), c(2, 3), c(3, 4), c(4, 5). sliding window subset total trajectory shape observed data. Shape-based DTW distances calculated every 1x1 combination observed sliding windows stored distance matrix. use distances calibrate function identifying outlying shapes forecast data. find minimum distances windowed time series use baseline \"observed distances\" chunks larger observed time series. calculate maximum minimum distance across observed time series. threshold. minimum forecast:observed distance matrix greater greatest minimum observed:observed distance, can infer forecast unfamiliar (.e., novel shape). calculate shape-based DTW distances forecast signal (including point estimate, lower, upper bounds) every observed sliding window. distance forecast observed sliding window less equal threshold defined , shape novel flag raised (indicator = FALSE).","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/plane_shape.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Shape component — plane_shape","text":"Toni Giorgino. Computing Visualizing Dynamic Time Warping Alignments R: dtw Package. Journal Statistical Software, 31(7), 1-24. doi:10.18637/jss.v031.i07 Tormene, P.; Giorgino, T.; Quaglini, S. & Stefanelli, M. Matching incomplete time series dynamic time warping: algorithm application post-stroke rehabilitation. Artif Intell Med, 2009, 45, 11-34. doi:10.1016/j.artmed.2008.11.007","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/plane_shape.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shape component — plane_shape","text":"","code":"## read in example observed data and prep observed signal hosp <- read.csv(system.file(\"extdata/observed/hdgov_hosp_weekly.csv\", package = \"rplanes\"))  tmp_hosp <-  hosp %>%  dplyr::select(date, location, flu.admits) %>%  dplyr::mutate(date = as.Date(date))  prepped_observed <- to_signal(tmp_hosp,                                outcome = \"flu.admits\",                                type = \"observed\",                                resolution = \"weeks\") ## read in example forecast and prep forecast signal prepped_forecast <- read_forecast(system.file(\"extdata/forecast/2022-10-31-SigSci-TSENS.csv\",                                                 package = \"rplanes\")) %>%    to_signal(., outcome = \"flu.admits\", type = \"forecast\", horizon = 4)  ## prepare seed with cut date prepped_seed <- plane_seed(prepped_observed, cut_date = \"2022-10-29\")  ## run plane component ## this location is an example of where we expect a flag to be raised plane_shape(location = \"13\", input = prepped_forecast, seed = prepped_seed) #> $indicator #> [1] TRUE #>   ## this location is an example of where we do not expect a flag to be raised plane_shape(location = \"06\", input = prepped_forecast, seed = prepped_seed) #> $indicator #> [1] FALSE #>"},{"path":"https://signaturescience.github.io/rplanes/reference/plane_taper.html","id":null,"dir":"Reference","previous_headings":"","what":"Taper component — plane_taper","title":"Taper component — plane_taper","text":"function evaluates whether evaluated signal interval tapers (.e., decreases width) horizons progress. interval used plausibility component drawn upper lower bounds forecasted prediction interval. , accepted signal format forecast, include upper lower bounds.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/plane_taper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Taper component — plane_taper","text":"","code":"plane_taper(location, input, seed)"},{"path":"https://signaturescience.github.io/rplanes/reference/plane_taper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Taper component — plane_taper","text":"location Character vector location code; location must appear input seed input Input signal data scored; object must one forecast seed Prepared seed","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/plane_taper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Taper component — plane_taper","text":"list following values: indicator: Logical whether prediction interval width tapers advancing horizons widths: Consecutive interval widths forecasted data","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/plane_taper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Taper component — plane_taper","text":"","code":"## read in example observed data and prep observed signal hosp <- read.csv(system.file(\"extdata/observed/hdgov_hosp_weekly.csv\", package = \"rplanes\")) hosp$date <- as.Date(hosp$date, format = \"%Y-%m-%d\") prepped_observed <- to_signal(hosp, outcome = \"flu.admits\", type = \"observed\", resolution = \"weeks\")  ## read in example forecast and prep forecast signal fp <- system.file(\"extdata/forecast/2022-10-31-SigSci-TSENS.csv\", package = \"rplanes\") prepped_forecast <- read_forecast(fp) %>%   to_signal(., outcome = \"flu.admits\", type = \"forecast\", horizon = 4)  ## prepare seed with cut date prepped_seed <- plane_seed(prepped_observed, cut_date = \"2022-10-29\")  ## run plane component plane_taper(location = \"19\", input = prepped_forecast, seed = prepped_seed) #> $indicator #> [1] FALSE #>  #> $widths #> [1] 23 30 38 42 #>  plane_taper(location = \"44\", input = prepped_forecast, seed = prepped_seed) #> $indicator #> [1] FALSE #>  #> $widths #> [1] 3 4 4 5 #>"},{"path":"https://signaturescience.github.io/rplanes/reference/plane_trend.html","id":null,"dir":"Reference","previous_headings":"","what":"Trend component — plane_trend","title":"Trend component — plane_trend","text":"function identifies change points forecast data final observed data point. Change points identified significant change magnitude direction slope time series.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/plane_trend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trend component — plane_trend","text":"","code":"plane_trend(location, input, seed, sig_lvl = 0.1)"},{"path":"https://signaturescience.github.io/rplanes/reference/plane_trend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trend component — plane_trend","text":"location Character vector location code; location must appear input seed input Input signal data scored; object must forecast seed Prepared seed sig_lvl significance level identify change points (zero one); default 0.1","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/plane_trend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trend component — plane_trend","text":"list following values: indicator: Logical whether forecast data final observed data point significant change point output: n x 7 tibble. length forecast plus observed data determine length n. columns : Location: character vector location code Index: integer index observed forecast data Date: dates corresponding observed forecast data (formatted date) Value: incidence observed forecast data (e.g., hospitalization rates) Type: Indicates whether data row observed forecast data Changepoint: Logical identifying change point (whether observed forecast data). TRUE returned point determined change point based user defined significance level (sig_lvl). Flagged: Logical indicating whether change point flagged. Change points flagged forecast data final observed data point. TRUE returned Changepoint TRUE final observed data point forecast point. flagged_dates: date flagged change point(s). none, NA returned","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/plane_trend.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trend component — plane_trend","text":"function uses e.divisive(), implements hierarchical divisive algorithm identify change points based distances segments (calculated using equations 3 5 Matteson James, 2014; larger distance, likely change point). permutation test used calculate approximate p-value. Within e.divisive(), use diff(x) instead x (raw data). preference slightly changes way change points identified. use diff(x), index aligns gap points rather points . Instead identifying change point based change size two points, identifies change points based change change . example, dataframe shows example x diff(x): Given data, e.divisive(x) identify index #5 (74) change point, jump +37 index 4 5. e.divisive(diff(x)) pick index #3 (28) #5 (1), jump +28 index 2 3, jump -36 index # 4 5. Ultimately, either way detects change points, application (forecasting), diff(ex) discerning less likely identify change points haphazardly. , specify min.size = 2, means forcing gap least 2 points detecting change points. roundabout way, increases significance level least decreases number change points identified. decide change function using diff(x), probably makes sense change min.size 3.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/plane_trend.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Trend component — plane_trend","text":"Matteson, D. S., & James, N. . (2014). nonparametric approach multiple change point analysis multivariate data. Journal American Statistical Association, 109(505), 334–345. https://doi.org/10.1080/01621459.2013.849605 Matteson DS, James NA (2013). “Nonparametric Approach Multiple Change Point Analysis Multivariate Data.” ArXiv e-prints. appear Journal American Statistical Association, 1306.4933. Gandy, . (2009) \"Sequential implementation Monte Carlo tests uniformly bounded resampling risk.\" Journal American Statistical Association.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/plane_trend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trend component — plane_trend","text":"","code":"## read in example observed data and prep observed signal hosp <- read.csv(system.file(\"extdata/observed/hdgov_hosp_weekly.csv\", package = \"rplanes\")) tmp_hosp <-   hosp %>%   dplyr::select(date, location, flu.admits) %>%   dplyr::mutate(date = as.Date(date))  prepped_observed <- to_signal(tmp_hosp, outcome = \"flu.admits\",                              type = \"observed\", resolution = \"weeks\")  ## read in example forecast and prep forecast signal prepped_forecast <- read_forecast(system.file(\"extdata/forecast/2022-10-31-SigSci-TSENS.csv\",                                                package = \"rplanes\")) %>%    to_signal(., outcome = \"flu.admits\", type = \"forecast\", horizon = 4)  ## prepare seed with cut date prepped_seed <- plane_seed(prepped_observed, cut_date = \"2022-10-29\")  ## run plane component plane_trend(location = \"05\", input = prepped_forecast, seed = prepped_seed, sig_lvl = .2) #> $indicator #> [1] TRUE #>  #> $output #> # A tibble: 20 × 7 #>    Location Index Date       Value Type     Changepoint Flagged #>    <chr>    <int> <date>     <dbl> <chr>    <lgl>       <lgl>   #>  1 05           1 2022-07-16    21 Observed FALSE       FALSE   #>  2 05           2 2022-07-23    14 Observed FALSE       FALSE   #>  3 05           3 2022-07-30     5 Observed TRUE        FALSE   #>  4 05           4 2022-08-06     8 Observed FALSE       FALSE   #>  5 05           5 2022-08-13     7 Observed FALSE       FALSE   #>  6 05           6 2022-08-20     4 Observed FALSE       FALSE   #>  7 05           7 2022-08-27     3 Observed FALSE       FALSE   #>  8 05           8 2022-09-03     8 Observed FALSE       FALSE   #>  9 05           9 2022-09-10     6 Observed FALSE       FALSE   #> 10 05          10 2022-09-17     4 Observed FALSE       FALSE   #> 11 05          11 2022-09-24     8 Observed FALSE       FALSE   #> 12 05          12 2022-10-01    10 Observed TRUE        FALSE   #> 13 05          13 2022-10-08    21 Observed FALSE       FALSE   #> 14 05          14 2022-10-15    40 Observed FALSE       FALSE   #> 15 05          15 2022-10-22    50 Observed FALSE       FALSE   #> 16 05          16 2022-10-29    84 Observed TRUE        TRUE    #> 17 05          17 2022-11-05    85 Forecast FALSE       FALSE   #> 18 05          18 2022-11-12    90 Forecast FALSE       FALSE   #> 19 05          19 2022-11-19    90 Forecast FALSE       FALSE   #> 20 05          20 2022-11-26    92 Forecast FALSE       FALSE   #>  #> $flagged_dates #> [1] \"2022-10-29\" #>  ## change location plane_trend(location = \"09\", input = prepped_forecast, seed = prepped_seed, sig_lvl = .2) #> $indicator #> [1] TRUE #>  #> $output #> # A tibble: 20 × 7 #>    Location Index Date       Value Type     Changepoint Flagged #>    <chr>    <int> <date>     <dbl> <chr>    <lgl>       <lgl>   #>  1 09           1 2022-07-16     3 Observed FALSE       FALSE   #>  2 09           2 2022-07-23     6 Observed FALSE       FALSE   #>  3 09           3 2022-07-30     4 Observed FALSE       FALSE   #>  4 09           4 2022-08-06     3 Observed FALSE       FALSE   #>  5 09           5 2022-08-13     0 Observed FALSE       FALSE   #>  6 09           6 2022-08-20     2 Observed FALSE       FALSE   #>  7 09           7 2022-08-27     9 Observed FALSE       FALSE   #>  8 09           8 2022-09-03     4 Observed FALSE       FALSE   #>  9 09           9 2022-09-10     3 Observed FALSE       FALSE   #> 10 09          10 2022-09-17     4 Observed FALSE       FALSE   #> 11 09          11 2022-09-24     3 Observed FALSE       FALSE   #> 12 09          12 2022-10-01     2 Observed FALSE       FALSE   #> 13 09          13 2022-10-08     3 Observed FALSE       FALSE   #> 14 09          14 2022-10-15     9 Observed FALSE       FALSE   #> 15 09          15 2022-10-22     9 Observed TRUE        FALSE   #> 16 09          16 2022-10-29    37 Observed FALSE       FALSE   #> 17 09          17 2022-11-05    74 Forecast TRUE        TRUE    #> 18 09          18 2022-11-12    75 Forecast FALSE       FALSE   #> 19 09          19 2022-11-19    75 Forecast FALSE       FALSE   #> 20 09          20 2022-11-26    75 Forecast FALSE       FALSE   #>  #> $flagged_dates #> [1] \"2022-11-05\" #>  ## change sig_lvl plane_trend(location = \"06\", input = prepped_forecast, seed = prepped_seed, sig_lvl = .05) #> $indicator #> [1] FALSE #>  #> $output #> # A tibble: 20 × 7 #>    Location Index Date       Value Type     Changepoint Flagged #>    <chr>    <int> <date>     <dbl> <chr>    <lgl>       <lgl>   #>  1 06           1 2022-07-16   102 Observed FALSE       FALSE   #>  2 06           2 2022-07-23    64 Observed FALSE       FALSE   #>  3 06           3 2022-07-30    46 Observed FALSE       FALSE   #>  4 06           4 2022-08-06    39 Observed FALSE       FALSE   #>  5 06           5 2022-08-13    38 Observed FALSE       FALSE   #>  6 06           6 2022-08-20    39 Observed FALSE       FALSE   #>  7 06           7 2022-08-27    33 Observed FALSE       FALSE   #>  8 06           8 2022-09-03    35 Observed FALSE       FALSE   #>  9 06           9 2022-09-10    29 Observed FALSE       FALSE   #> 10 06          10 2022-09-17    24 Observed TRUE        FALSE   #> 11 06          11 2022-09-24    35 Observed FALSE       FALSE   #> 12 06          12 2022-10-01    72 Observed FALSE       FALSE   #> 13 06          13 2022-10-08    93 Observed FALSE       FALSE   #> 14 06          14 2022-10-15    97 Observed FALSE       FALSE   #> 15 06          15 2022-10-22   124 Observed FALSE       FALSE   #> 16 06          16 2022-10-29   211 Observed FALSE       FALSE   #> 17 06          17 2022-11-05   249 Forecast FALSE       FALSE   #> 18 06          18 2022-11-12   272 Forecast FALSE       FALSE   #> 19 06          19 2022-11-19   288 Forecast FALSE       FALSE   #> 20 06          20 2022-11-26   301 Forecast FALSE       FALSE   #>  #> $flagged_dates #> [1] NA #>"},{"path":"https://signaturescience.github.io/rplanes/reference/plane_zero.html","id":null,"dir":"Reference","previous_headings":"","what":"Zero component — plane_zero","title":"Zero component — plane_zero","text":"function checks presence value(s) equal zero evaluated signal. zeros found, function assesses whether zeros observed seed given location. , function consider evaluated zero plausible flag raised (.e., indicator returned FALSE). , function consider evaluated zero implausible flag raised (.e., indicator returned TRUE).","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/plane_zero.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Zero component — plane_zero","text":"","code":"plane_zero(location, input, seed)"},{"path":"https://signaturescience.github.io/rplanes/reference/plane_zero.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Zero component — plane_zero","text":"location Character vector location code; location must appear input seed input Input signal data scored; object must one forecast observed seed Prepared seed","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/plane_zero.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Zero component — plane_zero","text":"list following values: indicator: Logical whether zeros evaluated signal seed data","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/plane_zero.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Zero component — plane_zero","text":"","code":"## read in example observed data and prep observed signal hosp <- read.csv(system.file(\"extdata/observed/hdgov_hosp_weekly.csv\", package = \"rplanes\")) hosp$date <- as.Date(hosp$date, format = \"%Y-%m-%d\") prepped_observed <- to_signal(hosp, outcome = \"flu.admits\", type = \"observed\", resolution = \"weeks\")  ## read in example forecast and prep forecast signal fp <- system.file(\"extdata/forecast/2022-10-31-SigSci-TSENS.csv\", package = \"rplanes\") prepped_forecast <- read_forecast(fp) %>%   to_signal(., outcome = \"flu.admits\", type = \"forecast\", horizon = 4)  ## prepare seed with cut date prepped_seed <- plane_seed(prepped_observed, cut_date = \"2022-10-29\")  ## run plane component plane_zero(location = \"10\", input = prepped_forecast, seed = prepped_seed) #> $indicator #> [1] FALSE #>  plane_zero(location = \"51\", input = prepped_forecast, seed = prepped_seed) #> $indicator #> [1] FALSE #>"},{"path":"https://signaturescience.github.io/rplanes/reference/q_boundary.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantile boundary — q_boundary","title":"Quantile boundary — q_boundary","text":"unexported helper generates vector lower bound, median, upper bound prediction interval specified width. function used internally inside read_forecast.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/q_boundary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantile boundary — q_boundary","text":"","code":"q_boundary(pi_width)"},{"path":"https://signaturescience.github.io/rplanes/reference/q_boundary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantile boundary — q_boundary","text":"pi_width Interval width integer","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/q_boundary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quantile boundary — q_boundary","text":"Vector quantiles corresponding lower upper bounds centered median.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/read_forecast.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in forecast file — read_forecast","title":"Read in forecast file — read_forecast","text":"function reads probabilistic (\"quantile\") forecast csv file prepares to_signal function downstream plausibility analysis. quantile forecast file can either \"legacy\" \"hubverse\" format (see Details information). object returned tibble summarized forecast data (.e., prediction interval) location horizon original file.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/read_forecast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in forecast file — read_forecast","text":"","code":"read_forecast(file, pi_width = 95, format = \"legacy\")"},{"path":"https://signaturescience.github.io/rplanes/reference/read_forecast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in forecast file — read_forecast","text":"file Path csv file containing quantile forecasts pi_width Width prediction interval integer; default 95 corresponds 95% prediction interval format Format probabilistic format file; must one \"legacy\" \"hubverse\" (see Details information); default \"legacy\"","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/read_forecast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read in forecast file — read_forecast","text":"tibble following columns: location: Geographic unit FIPS code date: Date corresponding forecast horizon horizon: Forecast horizon lower: Lower limit prediction interval forecast point: Point estimate forecast upper: Upper limit prediction interval forecast","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/read_forecast.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read in forecast file — read_forecast","text":"probabilistic forecast format used multiple forecasting hubs. general, format includes one row per combination quantile, location, target, horizon. row forecasted value provided. specific format, including columns required, changed time. function accommodates \"legacy\" well recent \"hubverse\" formats. details specific columns see links References.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/read_forecast.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Read in forecast file — read_forecast","text":"Hubverse: https://hubdocs.readthedocs.io/en/latest/user-guide/model-output.html Legacy: https://github.com/cdcepi/Flusight-forecast-data/tree/master/data-forecasts#forecast-file-format","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/read_forecast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read in forecast file — read_forecast","text":"","code":"## read in example forecast and prep forecast signal (legacy format) fp <- system.file(\"extdata/forecast/2022-10-31-SigSci-TSENS.csv\", package = \"rplanes\") read_forecast(fp) #> # A tibble: 200 × 6 #>    location date       horizon lower point upper #>    <chr>    <date>     <chr>   <dbl> <dbl> <dbl> #>  1 02       2022-11-05 1           0     6    11 #>  2 02       2022-11-12 2           0     5    12 #>  3 02       2022-11-19 3           0     5    12 #>  4 02       2022-11-26 4           0     5    12 #>  5 04       2022-11-05 1          13    58   103 #>  6 04       2022-11-12 2           9    68   127 #>  7 04       2022-11-19 3           0    72   147 #>  8 04       2022-11-26 4           0    79   167 #>  9 05       2022-11-05 1          67    85   103 #> 10 05       2022-11-12 2          66    90   115 #> # ℹ 190 more rows  fp2 <- system.file(\"extdata/forecast/2023-11-04-SigSci-TSENS.csv\", package = \"rplanes\") read_forecast(fp2, format = \"hubverse\") #> # A tibble: 204 × 6 #>    location date       horizon lower point upper #>    <chr>    <date>       <dbl> <dbl> <dbl> <dbl> #>  1 01       2023-11-04       0     0    33    69 #>  2 01       2023-11-11       1     0    34    84 #>  3 01       2023-11-18       2     0    34    94 #>  4 01       2023-11-25       3     0    35   103 #>  5 02       2023-11-04       0    18    29    40 #>  6 02       2023-11-11       1    13    28    43 #>  7 02       2023-11-18       2     9    27    45 #>  8 02       2023-11-25       3     6    26    46 #>  9 04       2023-11-04       0     0    56   124 #> 10 04       2023-11-11       1     0    63   173 #> # ℹ 194 more rows"},{"path":"https://signaturescience.github.io/rplanes/reference/resolve_resolution.html","id":null,"dir":"Reference","previous_headings":"","what":"Resolve resolution — resolve_resolution","title":"Resolve resolution — resolve_resolution","text":"helper function uses argument matching resolve resolution input. function also handles casing. allow, example, input resolution \"daily\" \"day\" resolved \"days\".","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/resolve_resolution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resolve resolution — resolve_resolution","text":"","code":"resolve_resolution(resolution)"},{"path":"https://signaturescience.github.io/rplanes/reference/resolve_resolution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resolve resolution — resolve_resolution","text":"resolution Character vector specifying temporal resolution (e.g., \"days\", \"weeks\", \"months\")","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/resolve_resolution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resolve resolution — resolve_resolution","text":"resolution matches \"days\", \"weeks\", \"months\" match returned. , function throw error.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/rplanes-package.html","id":null,"dir":"Reference","previous_headings":"","what":"rplanes: Plausibility Analysis of Epidemiological Signals in 'R' — rplanes-package","title":"rplanes: Plausibility Analysis of Epidemiological Signals in 'R' — rplanes-package","text":"'rplanes' package provides functionality prepare data analyze plausibility forecasted reported epidemiological signals. functions implement set plausbility algorithms agnostic geographic time resolutions calculated independently presented combined score.","code":""},{"path":[]},{"path":"https://signaturescience.github.io/rplanes/reference/rplanes-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rplanes: Plausibility Analysis of Epidemiological Signals in 'R' — rplanes-package","text":"Maintainer: VP Nagraj nagraj@nagraj.net (ORCID) Authors: Desiree Williams Amy Benefield","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/rplanes_explorer.html","id":null,"dir":"Reference","previous_headings":"","what":"rplanes explorer app launcher — rplanes_explorer","title":"rplanes explorer app launcher — rplanes_explorer","text":"rplanes explorer app allows user interactively upload data (view internal example) explore plausibility analysis functionality.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/rplanes_explorer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rplanes explorer app launcher — rplanes_explorer","text":"","code":"rplanes_explorer(...)"},{"path":"https://signaturescience.github.io/rplanes/reference/rplanes_explorer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rplanes explorer app launcher — rplanes_explorer","text":"... Additional arguments passed shiny::runApp","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/rplanes_explorer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rplanes explorer app launcher — rplanes_explorer","text":"function operates side-effect starts rplanes Shiny app.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/rplanes_explorer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"rplanes explorer app launcher — rplanes_explorer","text":"","code":"if (FALSE) { # Launch the explorer app rplanes_explorer(host = \"0.0.0.0\",                  launch.browser = TRUE,                  port = 80) }"},{"path":"https://signaturescience.github.io/rplanes/reference/seed_engine.html","id":null,"dir":"Reference","previous_headings":"","what":"Seed engine — seed_engine","title":"Seed engine — seed_engine","text":"helper function used inside plane_seed evaluate characteristics observed data use downstream plausibility analysis.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/seed_engine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Seed engine — seed_engine","text":"","code":"seed_engine(input, location, cut_date = NULL)"},{"path":"https://signaturescience.github.io/rplanes/reference/seed_engine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Seed engine — seed_engine","text":"input Input signal data used seeding; must observed signal object location Character vector location code cut_date Maximum date (inclusive) seeding performed; default NULL entire input used seeding","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/seed_engine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Seed engine — seed_engine","text":"list length 1 multiple elements corresponding seed characteristics metadata given location.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/to_signal.html","id":null,"dir":"Reference","previous_headings":"","what":"Create signal object — to_signal","title":"Create signal object — to_signal","text":"function creates object S3 class \"signal\". user can conditionally specify either \"forecast\" \"observed\" signal.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/to_signal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create signal object — to_signal","text":"","code":"to_signal(   input,   outcome,   type = \"observed\",   resolution = \"weeks\",   horizon = NULL )"},{"path":"https://signaturescience.github.io/rplanes/reference/to_signal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create signal object — to_signal","text":"input Data converted signal; see \"Details\" information outcome Name outcome column input data type Signal type; must one \"observed\" \"forecast\"; default \"observed\" resolution temporal resolution signal; data can aggregated daily, weekly, monthly; default \"weeks\"; see \"Details\" information horizon Number time steps ahead forecast signals; used type=\"forecast\"; default NULL","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/to_signal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create signal object — to_signal","text":"object class signal. object second class either observed forecast depending value passed \"type\" argument.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/to_signal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create signal object — to_signal","text":"input signal data may either \"observed\" \"forecast\" data. Depending type, input data must conform certain format prior submission. cases, data must passed data frame. \"observed\" data data frame must minimum include columns location (geographic unit FIPS code) date (date reported value; must date class). data also include column contains outcome (e.g., case count). \"forecast\" data data frame must include columns location (geographic unit FIPS code), date (date corresponding forecast horizon; must date class character formatted 'YYYY-MM-DD'), horizon (forecast horizon), lower (lower limit prediction interval forecast), point (point estimate forecast), upper (upper limit prediction interval forecast). Note read_forecast function returns data format. input data must daily, weekly, monthly resolution. \"resolution\" parameter designed use string matching. allows flexibility user, , example, input \"day\", \"days\", \"daily\" resolve resolution days. rules apply designating weekly monthly resolution.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/to_signal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create signal object — to_signal","text":"","code":"hosp <- read.csv(system.file(\"extdata/observed/hdgov_hosp_weekly.csv\", package = \"rplanes\")) to_signal(hosp, outcome = \"flu.admits\", type = \"observed\", resolution = \"weeks\") #> $data #>            date epiyear epiweek location flu.admits #> 1    2022-02-12    2022       6       US       1256 #> 2    2022-02-19    2022       7       US       1573 #> 3    2022-02-26    2022       8       US       1666 #> 4    2022-03-05    2022       9       US       1942 #> 5    2022-03-12    2022      10       US       2247 #> 6    2022-03-19    2022      11       US       2878 #> 7    2022-03-26    2022      12       US       3008 #> 8    2022-04-02    2022      13       US       3182 #> 9    2022-04-09    2022      14       US       3331 #> 10   2022-04-16    2022      15       US       3415 #> 11   2022-04-23    2022      16       US       3646 #> 12   2022-04-30    2022      17       US       3250 #> 13   2022-05-07    2022      18       US       3225 #> 14   2022-05-14    2022      19       US       3300 #> 15   2022-05-21    2022      20       US       3170 #> 16   2022-05-28    2022      21       US       2800 #> 17   2022-06-04    2022      22       US       2759 #> 18   2022-06-11    2022      23       US       2224 #> 19   2022-06-18    2022      24       US       1861 #> 20   2022-06-25    2022      25       US       1432 #> 21   2022-07-02    2022      26       US       1133 #> 22   2022-07-09    2022      27       US        875 #> 23   2022-07-16    2022      28       US        841 #> 24   2022-07-23    2022      29       US        700 #> 25   2022-07-30    2022      30       US        610 #> 26   2022-08-06    2022      31       US        630 #> 27   2022-08-13    2022      32       US        562 #> 28   2022-08-20    2022      33       US        573 #> 29   2022-08-27    2022      34       US        595 #> 30   2022-09-03    2022      35       US        601 #> 31   2022-09-10    2022      36       US        623 #> 32   2022-09-17    2022      37       US        644 #> 33   2022-09-24    2022      38       US        742 #> 34   2022-10-01    2022      39       US        896 #> 35   2022-10-08    2022      40       US       1331 #> 36   2022-10-15    2022      41       US       1694 #> 37   2022-10-22    2022      42       US       2380 #> 38   2022-10-29    2022      43       US       4353 #> 39   2022-11-05    2022      44       US       6571 #> 40   2022-11-12    2022      45       US       8848 #> 41   2022-11-19    2022      46       US      11427 #> 42   2022-11-26    2022      47       US      19846 #> 43   2022-12-03    2022      48       US      26333 #> 44   2022-12-10    2022      49       US      23851 #> 45   2022-12-17    2022      50       US      21421 #> 46   2022-12-24    2022      51       US      19288 #> 47   2022-12-31    2022      52       US      19369 #> 48   2023-01-07    2023       1       US      12929 #> 49   2023-01-14    2023       2       US       6686 #> 50   2023-01-21    2023       3       US       4182 #> 51   2023-01-28    2023       4       US       2837 #> 52   2023-02-04    2023       5       US       2320 #> 53   2023-02-11    2023       6       US       2152 #> 54   2023-02-18    2023       7       US       1843 #> 55   2023-02-25    2023       8       US       1657 #> 56   2023-03-04    2023       9       US       1456 #> 57   2023-03-11    2023      10       US       1397 #> 58   2023-03-18    2023      11       US       1397 #> 59   2023-03-25    2023      12       US       1315 #> 60   2023-04-01    2023      13       US       1274 #> 61   2023-04-08    2023      14       US       1211 #> 62   2023-04-15    2023      15       US       1083 #> 63   2023-04-22    2023      16       US       1013 #> 64   2023-04-29    2023      17       US        946 #> 65   2023-05-06    2023      18       US        943 #> 66   2023-05-13    2023      19       US        989 #> 67   2023-05-20    2023      20       US        961 #> 68   2023-05-27    2023      21       US        961 #> 69   2022-02-12    2022       6       01         12 #> 70   2022-02-19    2022       7       01         20 #> 71   2022-02-26    2022       8       01         14 #> 72   2022-03-05    2022       9       01         35 #> 73   2022-03-12    2022      10       01         30 #> 74   2022-03-19    2022      11       01         30 #> 75   2022-03-26    2022      12       01         25 #> 76   2022-04-02    2022      13       01         32 #> 77   2022-04-09    2022      14       01         29 #> 78   2022-04-16    2022      15       01         19 #> 79   2022-04-23    2022      16       01         30 #> 80   2022-04-30    2022      17       01         13 #> 81   2022-05-07    2022      18       01         25 #> 82   2022-05-14    2022      19       01         15 #> 83   2022-05-21    2022      20       01         12 #> 84   2022-05-28    2022      21       01         22 #> 85   2022-06-04    2022      22       01         19 #> 86   2022-06-11    2022      23       01         18 #> 87   2022-06-18    2022      24       01         17 #> 88   2022-06-25    2022      25       01         14 #> 89   2022-07-02    2022      26       01         10 #> 90   2022-07-09    2022      27       01         24 #> 91   2022-07-16    2022      28       01         21 #> 92   2022-07-23    2022      29       01         10 #> 93   2022-07-30    2022      30       01         19 #> 94   2022-08-06    2022      31       01         12 #> 95   2022-08-13    2022      32       01         19 #> 96   2022-08-20    2022      33       01         11 #> 97   2022-08-27    2022      34       01         19 #> 98   2022-09-03    2022      35       01         21 #> 99   2022-09-10    2022      36       01         11 #> 100  2022-09-17    2022      37       01         17 #> 101  2022-09-24    2022      38       01         20 #> 102  2022-10-01    2022      39       01         24 #> 103  2022-10-08    2022      40       01         41 #> 104  2022-10-15    2022      41       01         86 #> 105  2022-10-22    2022      42       01        141 #> 106  2022-10-29    2022      43       01        262 #> 107  2022-11-05    2022      44       01        360 #> 108  2022-11-12    2022      45       01        303 #> 109  2022-11-19    2022      46       01        226 #> 110  2022-11-26    2022      47       01        261 #> 111  2022-12-03    2022      48       01        351 #> 112  2022-12-10    2022      49       01        223 #> 113  2022-12-17    2022      50       01        143 #> 114  2022-12-24    2022      51       01        155 #> 115  2022-12-31    2022      52       01        140 #> 116  2023-01-07    2023       1       01        125 #> 117  2023-01-14    2023       2       01         94 #> 118  2023-01-21    2023       3       01         57 #> 119  2023-01-28    2023       4       01         42 #> 120  2023-02-04    2023       5       01         28 #> 121  2023-02-11    2023       6       01         33 #> 122  2023-02-18    2023       7       01         31 #> 123  2023-02-25    2023       8       01         26 #> 124  2023-03-04    2023       9       01         18 #> 125  2023-03-11    2023      10       01         16 #> 126  2023-03-18    2023      11       01         24 #> 127  2023-03-25    2023      12       01         20 #> 128  2023-04-01    2023      13       01         26 #> 129  2023-04-08    2023      14       01         15 #> 130  2023-04-15    2023      15       01         19 #> 131  2023-04-22    2023      16       01         19 #> 132  2023-04-29    2023      17       01         12 #> 133  2023-05-06    2023      18       01          6 #> 134  2023-05-13    2023      19       01         15 #> 135  2023-05-20    2023      20       01          9 #> 136  2023-05-27    2023      21       01         12 #> 137  2022-02-12    2022       6       02          0 #> 138  2022-02-19    2022       7       02          0 #> 139  2022-02-26    2022       8       02          1 #> 140  2022-03-05    2022       9       02          0 #> 141  2022-03-12    2022      10       02          2 #> 142  2022-03-19    2022      11       02          1 #> 143  2022-03-26    2022      12       02          3 #> 144  2022-04-02    2022      13       02          0 #> 145  2022-04-09    2022      14       02          2 #> 146  2022-04-16    2022      15       02          2 #> 147  2022-04-23    2022      16       02          1 #> 148  2022-04-30    2022      17       02          3 #> 149  2022-05-07    2022      18       02          4 #> 150  2022-05-14    2022      19       02          5 #> 151  2022-05-21    2022      20       02         17 #> 152  2022-05-28    2022      21       02          3 #> 153  2022-06-04    2022      22       02          2 #> 154  2022-06-11    2022      23       02          6 #> 155  2022-06-18    2022      24       02          1 #> 156  2022-06-25    2022      25       02          3 #> 157  2022-07-02    2022      26       02          2 #> 158  2022-07-09    2022      27       02          3 #> 159  2022-07-16    2022      28       02          0 #> 160  2022-07-23    2022      29       02          0 #> 161  2022-07-30    2022      30       02          0 #> 162  2022-08-06    2022      31       02          0 #> 163  2022-08-13    2022      32       02          1 #> 164  2022-08-20    2022      33       02          1 #> 165  2022-08-27    2022      34       02          1 #> 166  2022-09-03    2022      35       02          0 #> 167  2022-09-10    2022      36       02          5 #> 168  2022-09-17    2022      37       02          0 #> 169  2022-09-24    2022      38       02          0 #> 170  2022-10-01    2022      39       02          2 #> 171  2022-10-08    2022      40       02          3 #> 172  2022-10-15    2022      41       02          2 #> 173  2022-10-22    2022      42       02          3 #> 174  2022-10-29    2022      43       02         14 #> 175  2022-11-05    2022      44       02         10 #> 176  2022-11-12    2022      45       02         20 #> 177  2022-11-19    2022      46       02         38 #> 178  2022-11-26    2022      47       02         66 #> 179  2022-12-03    2022      48       02         58 #> 180  2022-12-10    2022      49       02         77 #> 181  2022-12-17    2022      50       02         45 #> 182  2022-12-24    2022      51       02         40 #> 183  2022-12-31    2022      52       02         44 #> 184  2023-01-07    2023       1       02         29 #> 185  2023-01-14    2023       2       02          6 #> 186  2023-01-21    2023       3       02          9 #> 187  2023-01-28    2023       4       02          3 #> 188  2023-02-04    2023       5       02          3 #> 189  2023-02-11    2023       6       02          1 #> 190  2023-02-18    2023       7       02          3 #> 191  2023-02-25    2023       8       02          4 #> 192  2023-03-04    2023       9       02          3 #> 193  2023-03-11    2023      10       02          3 #> 194  2023-03-18    2023      11       02          1 #> 195  2023-03-25    2023      12       02          4 #> 196  2023-04-01    2023      13       02          0 #> 197  2023-04-08    2023      14       02          2 #> 198  2023-04-15    2023      15       02          2 #> 199  2023-04-22    2023      16       02          1 #> 200  2023-04-29    2023      17       02          0 #> 201  2023-05-06    2023      18       02          6 #> 202  2023-05-13    2023      19       02          0 #> 203  2023-05-20    2023      20       02          0 #> 204  2023-05-27    2023      21       02          2 #> 205  2022-02-12    2022       6       04         63 #> 206  2022-02-19    2022       7       04         66 #> 207  2022-02-26    2022       8       04         72 #> 208  2022-03-05    2022       9       04         91 #> 209  2022-03-12    2022      10       04         85 #> 210  2022-03-19    2022      11       04        113 #> 211  2022-03-26    2022      12       04        131 #> 212  2022-04-02    2022      13       04        108 #> 213  2022-04-09    2022      14       04        112 #> 214  2022-04-16    2022      15       04        101 #> 215  2022-04-23    2022      16       04        147 #> 216  2022-04-30    2022      17       04        162 #> 217  2022-05-07    2022      18       04        176 #> 218  2022-05-14    2022      19       04        212 #> 219  2022-05-21    2022      20       04        237 #> 220  2022-05-28    2022      21       04        196 #> 221  2022-06-04    2022      22       04        204 #> 222  2022-06-11    2022      23       04         87 #> 223  2022-06-18    2022      24       04         52 #> 224  2022-06-25    2022      25       04         41 #> 225  2022-07-02    2022      26       04         13 #> 226  2022-07-09    2022      27       04         15 #> 227  2022-07-16    2022      28       04         13 #> 228  2022-07-23    2022      29       04         19 #> 229  2022-07-30    2022      30       04         21 #> 230  2022-08-06    2022      31       04         11 #> 231  2022-08-13    2022      32       04         11 #> 232  2022-08-20    2022      33       04         18 #> 233  2022-08-27    2022      34       04         16 #> 234  2022-09-03    2022      35       04         16 #> 235  2022-09-10    2022      36       04          5 #> 236  2022-09-17    2022      37       04          7 #> 237  2022-09-24    2022      38       04          9 #> 238  2022-10-01    2022      39       04         10 #> 239  2022-10-08    2022      40       04         18 #> 240  2022-10-15    2022      41       04         14 #> 241  2022-10-22    2022      42       04         22 #> 242  2022-10-29    2022      43       04         34 #> 243  2022-11-05    2022      44       04         84 #> 244  2022-11-12    2022      45       04        153 #> 245  2022-11-19    2022      46       04        339 #> 246  2022-11-26    2022      47       04        612 #> 247  2022-12-03    2022      48       04        821 #> 248  2022-12-10    2022      49       04        759 #> 249  2022-12-17    2022      50       04        563 #> 250  2022-12-24    2022      51       04        604 #> 251  2022-12-31    2022      52       04        656 #> 252  2023-01-07    2023       1       04        350 #> 253  2023-01-14    2023       2       04        140 #> 254  2023-01-21    2023       3       04        112 #> 255  2023-01-28    2023       4       04         50 #> 256  2023-02-04    2023       5       04         71 #> 257  2023-02-11    2023       6       04         52 #> 258  2023-02-18    2023       7       04         38 #> 259  2023-02-25    2023       8       04         53 #> 260  2023-03-04    2023       9       04         47 #> 261  2023-03-11    2023      10       04         49 #> 262  2023-03-18    2023      11       04         54 #> 263  2023-03-25    2023      12       04         42 #> 264  2023-04-01    2023      13       04         40 #> 265  2023-04-08    2023      14       04         68 #> 266  2023-04-15    2023      15       04         89 #> 267  2023-04-22    2023      16       04         78 #> 268  2023-04-29    2023      17       04         77 #> 269  2023-05-06    2023      18       04         68 #> 270  2023-05-13    2023      19       04         80 #> 271  2023-05-20    2023      20       04        103 #> 272  2023-05-27    2023      21       04        110 #> 273  2022-02-12    2022       6       05         24 #> 274  2022-02-19    2022       7       05         32 #> 275  2022-02-26    2022       8       05         42 #> 276  2022-03-05    2022       9       05         58 #> 277  2022-03-12    2022      10       05         62 #> 278  2022-03-19    2022      11       05         67 #> 279  2022-03-26    2022      12       05         89 #> 280  2022-04-02    2022      13       05         59 #> 281  2022-04-09    2022      14       05         83 #> 282  2022-04-16    2022      15       05         50 #> 283  2022-04-23    2022      16       05         37 #> 284  2022-04-30    2022      17       05         32 #> 285  2022-05-07    2022      18       05         23 #> 286  2022-05-14    2022      19       05         22 #> 287  2022-05-21    2022      20       05         16 #> 288  2022-05-28    2022      21       05         16 #> 289  2022-06-04    2022      22       05         21 #> 290  2022-06-11    2022      23       05         20 #> 291  2022-06-18    2022      24       05         13 #> 292  2022-06-25    2022      25       05         16 #> 293  2022-07-02    2022      26       05         11 #> 294  2022-07-09    2022      27       05          6 #> 295  2022-07-16    2022      28       05         21 #> 296  2022-07-23    2022      29       05         14 #> 297  2022-07-30    2022      30       05          5 #> 298  2022-08-06    2022      31       05          8 #> 299  2022-08-13    2022      32       05          7 #> 300  2022-08-20    2022      33       05          4 #> 301  2022-08-27    2022      34       05          3 #> 302  2022-09-03    2022      35       05          8 #> 303  2022-09-10    2022      36       05          6 #> 304  2022-09-17    2022      37       05          4 #> 305  2022-09-24    2022      38       05          8 #> 306  2022-10-01    2022      39       05         10 #> 307  2022-10-08    2022      40       05         21 #> 308  2022-10-15    2022      41       05         40 #> 309  2022-10-22    2022      42       05         50 #> 310  2022-10-29    2022      43       05         84 #> 311  2022-11-05    2022      44       05        141 #> 312  2022-11-12    2022      45       05        212 #> 313  2022-11-19    2022      46       05        218 #> 314  2022-11-26    2022      47       05        435 #> 315  2022-12-03    2022      48       05        468 #> 316  2022-12-10    2022      49       05        331 #> 317  2022-12-17    2022      50       05        234 #> 318  2022-12-24    2022      51       05        189 #> 319  2022-12-31    2022      52       05        217 #> 320  2023-01-07    2023       1       05        146 #> 321  2023-01-14    2023       2       05         98 #> 322  2023-01-21    2023       3       05         61 #> 323  2023-01-28    2023       4       05         30 #> 324  2023-02-04    2023       5       05         21 #> 325  2023-02-11    2023       6       05         35 #> 326  2023-02-18    2023       7       05         25 #> 327  2023-02-25    2023       8       05         32 #> 328  2023-03-04    2023       9       05         33 #> 329  2023-03-11    2023      10       05         18 #> 330  2023-03-18    2023      11       05         14 #> 331  2023-03-25    2023      12       05         22 #> 332  2023-04-01    2023      13       05         24 #> 333  2023-04-08    2023      14       05         16 #> 334  2023-04-15    2023      15       05         16 #> 335  2023-04-22    2023      16       05          8 #> 336  2023-04-29    2023      17       05         11 #> 337  2023-05-06    2023      18       05          9 #> 338  2023-05-13    2023      19       05         14 #> 339  2023-05-20    2023      20       05          8 #> 340  2023-05-27    2023      21       05         11 #> 341  2022-02-12    2022       6       06         34 #> 342  2022-02-19    2022       7       06         18 #> 343  2022-02-26    2022       8       06         34 #> 344  2022-03-05    2022       9       06         32 #> 345  2022-03-12    2022      10       06         45 #> 346  2022-03-19    2022      11       06         57 #> 347  2022-03-26    2022      12       06         63 #> 348  2022-04-02    2022      13       06         84 #> 349  2022-04-09    2022      14       06        106 #> 350  2022-04-16    2022      15       06        100 #> 351  2022-04-23    2022      16       06        165 #> 352  2022-04-30    2022      17       06        218 #> 353  2022-05-07    2022      18       06        202 #> 354  2022-05-14    2022      19       06        308 #> 355  2022-05-21    2022      20       06        386 #> 356  2022-05-28    2022      21       06        405 #> 357  2022-06-04    2022      22       06        453 #> 358  2022-06-11    2022      23       06        397 #> 359  2022-06-18    2022      24       06        304 #> 360  2022-06-25    2022      25       06        238 #> 361  2022-07-02    2022      26       06        192 #> 362  2022-07-09    2022      27       06        122 #> 363  2022-07-16    2022      28       06        102 #> 364  2022-07-23    2022      29       06         64 #> 365  2022-07-30    2022      30       06         46 #> 366  2022-08-06    2022      31       06         39 #> 367  2022-08-13    2022      32       06         38 #> 368  2022-08-20    2022      33       06         39 #> 369  2022-08-27    2022      34       06         33 #> 370  2022-09-03    2022      35       06         35 #> 371  2022-09-10    2022      36       06         29 #> 372  2022-09-17    2022      37       06         24 #> 373  2022-09-24    2022      38       06         35 #> 374  2022-10-01    2022      39       06         72 #> 375  2022-10-08    2022      40       06         93 #> 376  2022-10-15    2022      41       06         97 #> 377  2022-10-22    2022      42       06        124 #> 378  2022-10-29    2022      43       06        211 #> 379  2022-11-05    2022      44       06        456 #> 380  2022-11-12    2022      45       06        928 #> 381  2022-11-19    2022      46       06       1616 #> 382  2022-11-26    2022      47       06       2790 #> 383  2022-12-03    2022      48       06       3138 #> 384  2022-12-10    2022      49       06       2275 #> 385  2022-12-17    2022      50       06       1576 #> 386  2022-12-24    2022      51       06       1580 #> 387  2022-12-31    2022      52       06       1384 #> 388  2023-01-07    2023       1       06        855 #> 389  2023-01-14    2023       2       06        354 #> 390  2023-01-21    2023       3       06        198 #> 391  2023-01-28    2023       4       06        116 #> 392  2023-02-04    2023       5       06        116 #> 393  2023-02-11    2023       6       06         91 #> 394  2023-02-18    2023       7       06         70 #> 395  2023-02-25    2023       8       06         82 #> 396  2023-03-04    2023       9       06         59 #> 397  2023-03-11    2023      10       06         49 #> 398  2023-03-18    2023      11       06         58 #> 399  2023-03-25    2023      12       06         32 #> 400  2023-04-01    2023      13       06         34 #> 401  2023-04-08    2023      14       06         39 #> 402  2023-04-15    2023      15       06         37 #> 403  2023-04-22    2023      16       06         33 #> 404  2023-04-29    2023      17       06         25 #> 405  2023-05-06    2023      18       06         21 #> 406  2023-05-13    2023      19       06         36 #> 407  2023-05-20    2023      20       06         23 #> 408  2023-05-27    2023      21       06         30 #> 409  2022-02-12    2022       6       08         27 #> 410  2022-02-19    2022       7       08         22 #> 411  2022-02-26    2022       8       08         27 #> 412  2022-03-05    2022       9       08         25 #> 413  2022-03-12    2022      10       08         42 #> 414  2022-03-19    2022      11       08         60 #> 415  2022-03-26    2022      12       08         94 #> 416  2022-04-02    2022      13       08        117 #> 417  2022-04-09    2022      14       08        105 #> 418  2022-04-16    2022      15       08        146 #> 419  2022-04-23    2022      16       08        187 #> 420  2022-04-30    2022      17       08        168 #> 421  2022-05-07    2022      18       08        260 #> 422  2022-05-14    2022      19       08        171 #> 423  2022-05-21    2022      20       08        110 #> 424  2022-05-28    2022      21       08         91 #> 425  2022-06-04    2022      22       08         72 #> 426  2022-06-11    2022      23       08         33 #> 427  2022-06-18    2022      24       08         27 #> 428  2022-06-25    2022      25       08          9 #> 429  2022-07-02    2022      26       08         14 #> 430  2022-07-09    2022      27       08         11 #> 431  2022-07-16    2022      28       08         11 #> 432  2022-07-23    2022      29       08          8 #> 433  2022-07-30    2022      30       08          9 #> 434  2022-08-06    2022      31       08         14 #> 435  2022-08-13    2022      32       08          8 #> 436  2022-08-20    2022      33       08         11 #> 437  2022-08-27    2022      34       08          1 #> 438  2022-09-03    2022      35       08          1 #> 439  2022-09-10    2022      36       08          3 #> 440  2022-09-17    2022      37       08          3 #> 441  2022-09-24    2022      38       08          4 #> 442  2022-10-01    2022      39       08          3 #> 443  2022-10-08    2022      40       08          1 #> 444  2022-10-15    2022      41       08          5 #> 445  2022-10-22    2022      42       08         15 #> 446  2022-10-29    2022      43       08         32 #> 447  2022-11-05    2022      44       08         32 #> 448  2022-11-12    2022      45       08         61 #> 449  2022-11-19    2022      46       08        114 #> 450  2022-11-26    2022      47       08        157 #> 451  2022-12-03    2022      48       08        160 #> 452  2022-12-10    2022      49       08        243 #> 453  2022-12-17    2022      50       08        255 #> 454  2022-12-24    2022      51       08        350 #> 455  2022-12-31    2022      52       08        311 #> 456  2023-01-07    2023       1       08        146 #> 457  2023-01-14    2023       2       08         85 #> 458  2023-01-21    2023       3       08         33 #> 459  2023-01-28    2023       4       08         30 #> 460  2023-02-04    2023       5       08         38 #> 461  2023-02-11    2023       6       08         24 #> 462  2023-02-18    2023       7       08         16 #> 463  2023-02-25    2023       8       08         14 #> 464  2023-03-04    2023       9       08         17 #> 465  2023-03-11    2023      10       08         11 #> 466  2023-03-18    2023      11       08         10 #> 467  2023-03-25    2023      12       08         11 #> 468  2023-04-01    2023      13       08          6 #> 469  2023-04-08    2023      14       08          7 #> 470  2023-04-15    2023      15       08         19 #> 471  2023-04-22    2023      16       08         10 #> 472  2023-04-29    2023      17       08         12 #> 473  2023-05-06    2023      18       08          4 #> 474  2023-05-13    2023      19       08          8 #> 475  2023-05-20    2023      20       08         12 #> 476  2023-05-27    2023      21       08          6 #> 477  2022-02-12    2022       6       09          0 #> 478  2022-02-19    2022       7       09          1 #> 479  2022-02-26    2022       8       09          7 #> 480  2022-03-05    2022       9       09          7 #> 481  2022-03-12    2022      10       09          6 #> 482  2022-03-19    2022      11       09         18 #> 483  2022-03-26    2022      12       09         25 #> 484  2022-04-02    2022      13       09         30 #> 485  2022-04-09    2022      14       09         44 #> 486  2022-04-16    2022      15       09         51 #> 487  2022-04-23    2022      16       09         50 #> 488  2022-04-30    2022      17       09         57 #> 489  2022-05-07    2022      18       09         76 #> 490  2022-05-14    2022      19       09         79 #> 491  2022-05-21    2022      20       09         63 #> 492  2022-05-28    2022      21       09         34 #> 493  2022-06-04    2022      22       09         20 #> 494  2022-06-11    2022      23       09         37 #> 495  2022-06-18    2022      24       09         14 #> 496  2022-06-25    2022      25       09          4 #> 497  2022-07-02    2022      26       09          9 #> 498  2022-07-09    2022      27       09          4 #> 499  2022-07-16    2022      28       09          3 #> 500  2022-07-23    2022      29       09          6 #> 501  2022-07-30    2022      30       09          4 #> 502  2022-08-06    2022      31       09          3 #> 503  2022-08-13    2022      32       09          0 #> 504  2022-08-20    2022      33       09          2 #> 505  2022-08-27    2022      34       09          9 #> 506  2022-09-03    2022      35       09          4 #> 507  2022-09-10    2022      36       09          3 #> 508  2022-09-17    2022      37       09          4 #> 509  2022-09-24    2022      38       09          3 #> 510  2022-10-01    2022      39       09          2 #> 511  2022-10-08    2022      40       09          3 #> 512  2022-10-15    2022      41       09          9 #> 513  2022-10-22    2022      42       09          9 #> 514  2022-10-29    2022      43       09         37 #> 515  2022-11-05    2022      44       09         41 #> 516  2022-11-12    2022      45       09         58 #> 517  2022-11-19    2022      46       09        104 #> 518  2022-11-26    2022      47       09        199 #> 519  2022-12-03    2022      48       09        424 #> 520  2022-12-10    2022      49       09        419 #> 521  2022-12-17    2022      50       09        352 #> 522  2022-12-24    2022      51       09        275 #> 523  2022-12-31    2022      52       09        248 #> 524  2023-01-07    2023       1       09        160 #> 525  2023-01-14    2023       2       09         72 #> 526  2023-01-21    2023       3       09         31 #> 527  2023-01-28    2023       4       09         32 #> 528  2023-02-04    2023       5       09         14 #> 529  2023-02-11    2023       6       09         14 #> 530  2023-02-18    2023       7       09         16 #> 531  2023-02-25    2023       8       09         16 #> 532  2023-03-04    2023       9       09          9 #> 533  2023-03-11    2023      10       09         21 #> 534  2023-03-18    2023      11       09          9 #> 535  2023-03-25    2023      12       09         12 #> 536  2023-04-01    2023      13       09         14 #> 537  2023-04-08    2023      14       09         21 #> 538  2023-04-15    2023      15       09         11 #> 539  2023-04-22    2023      16       09          7 #> 540  2023-04-29    2023      17       09          9 #> 541  2023-05-06    2023      18       09          7 #> 542  2023-05-13    2023      19       09          6 #> 543  2023-05-20    2023      20       09         12 #> 544  2023-05-27    2023      21       09          9 #> 545  2022-02-12    2022       6       10          2 #> 546  2022-02-19    2022       7       10          3 #> 547  2022-02-26    2022       8       10          1 #> 548  2022-03-05    2022       9       10          1 #> 549  2022-03-12    2022      10       10          7 #> 550  2022-03-19    2022      11       10          6 #> 551  2022-03-26    2022      12       10          7 #> 552  2022-04-02    2022      13       10          4 #> 553  2022-04-09    2022      14       10         14 #> 554  2022-04-16    2022      15       10         41 #> 555  2022-04-23    2022      16       10         18 #> 556  2022-04-30    2022      17       10          6 #> 557  2022-05-07    2022      18       10          7 #> 558  2022-05-14    2022      19       10          4 #> 559  2022-05-21    2022      20       10          4 #> 560  2022-05-28    2022      21       10          4 #> 561  2022-06-04    2022      22       10          9 #> 562  2022-06-11    2022      23       10          5 #> 563  2022-06-18    2022      24       10          2 #> 564  2022-06-25    2022      25       10          4 #> 565  2022-07-02    2022      26       10          0 #> 566  2022-07-09    2022      27       10          1 #> 567  2022-07-16    2022      28       10          1 #> 568  2022-07-23    2022      29       10          0 #> 569  2022-07-30    2022      30       10          2 #> 570  2022-08-06    2022      31       10          0 #> 571  2022-08-13    2022      32       10          1 #> 572  2022-08-20    2022      33       10          1 #> 573  2022-08-27    2022      34       10          1 #> 574  2022-09-03    2022      35       10          3 #> 575  2022-09-10    2022      36       10          0 #> 576  2022-09-17    2022      37       10          2 #> 577  2022-09-24    2022      38       10          0 #> 578  2022-10-01    2022      39       10          0 #> 579  2022-10-08    2022      40       10          0 #> 580  2022-10-15    2022      41       10          0 #> 581  2022-10-22    2022      42       10          1 #> 582  2022-10-29    2022      43       10          4 #> 583  2022-11-05    2022      44       10         11 #> 584  2022-11-12    2022      45       10         15 #> 585  2022-11-19    2022      46       10         53 #> 586  2022-11-26    2022      47       10         48 #> 587  2022-12-03    2022      48       10         79 #> 588  2022-12-10    2022      49       10         28 #> 589  2022-12-17    2022      50       10         27 #> 590  2022-12-24    2022      51       10         29 #> 591  2022-12-31    2022      52       10         46 #> 592  2023-01-07    2023       1       10         41 #> 593  2023-01-14    2023       2       10         11 #> 594  2023-01-21    2023       3       10          5 #> 595  2023-01-28    2023       4       10          5 #> 596  2023-02-04    2023       5       10         15 #> 597  2023-02-11    2023       6       10          1 #> 598  2023-02-18    2023       7       10          1 #> 599  2023-02-25    2023       8       10          0 #> 600  2023-03-04    2023       9       10          5 #> 601  2023-03-11    2023      10       10          1 #> 602  2023-03-18    2023      11       10          0 #> 603  2023-03-25    2023      12       10          2 #> 604  2023-04-01    2023      13       10          2 #> 605  2023-04-08    2023      14       10          0 #> 606  2023-04-15    2023      15       10          0 #> 607  2023-04-22    2023      16       10          0 #> 608  2023-04-29    2023      17       10          1 #> 609  2023-05-06    2023      18       10          0 #> 610  2023-05-13    2023      19       10          1 #> 611  2023-05-20    2023      20       10          0 #> 612  2023-05-27    2023      21       10          0 #> 613  2022-02-12    2022       6       11          0 #> 614  2022-02-19    2022       7       11          1 #> 615  2022-02-26    2022       8       11          0 #> 616  2022-03-05    2022       9       11          1 #> 617  2022-03-12    2022      10       11          4 #> 618  2022-03-19    2022      11       11          4 #> 619  2022-03-26    2022      12       11          2 #> 620  2022-04-02    2022      13       11          4 #> 621  2022-04-09    2022      14       11          2 #> 622  2022-04-16    2022      15       11          2 #> 623  2022-04-23    2022      16       11          1 #> 624  2022-04-30    2022      17       11          4 #> 625  2022-05-07    2022      18       11          1 #> 626  2022-05-14    2022      19       11          5 #> 627  2022-05-21    2022      20       11          4 #> 628  2022-05-28    2022      21       11          6 #> 629  2022-06-04    2022      22       11          4 #> 630  2022-06-11    2022      23       11          1 #> 631  2022-06-18    2022      24       11          2 #> 632  2022-06-25    2022      25       11          3 #> 633  2022-07-02    2022      26       11          1 #> 634  2022-07-09    2022      27       11          2 #> 635  2022-07-16    2022      28       11          1 #> 636  2022-07-23    2022      29       11          0 #> 637  2022-07-30    2022      30       11          0 #> 638  2022-08-06    2022      31       11          2 #> 639  2022-08-13    2022      32       11          0 #> 640  2022-08-20    2022      33       11          0 #> 641  2022-08-27    2022      34       11          1 #> 642  2022-09-03    2022      35       11          0 #> 643  2022-09-10    2022      36       11          0 #> 644  2022-09-17    2022      37       11          0 #> 645  2022-09-24    2022      38       11          1 #> 646  2022-10-01    2022      39       11          0 #> 647  2022-10-08    2022      40       11          1 #> 648  2022-10-15    2022      41       11          2 #> 649  2022-10-22    2022      42       11          8 #> 650  2022-10-29    2022      43       11         11 #> 651  2022-11-05    2022      44       11         36 #> 652  2022-11-12    2022      45       11         44 #> 653  2022-11-19    2022      46       11         35 #> 654  2022-11-26    2022      47       11         70 #> 655  2022-12-03    2022      48       11         56 #> 656  2022-12-10    2022      49       11         42 #> 657  2022-12-17    2022      50       11         20 #> 658  2022-12-24    2022      51       11         26 #> 659  2022-12-31    2022      52       11         27 #> 660  2023-01-07    2023       1       11         15 #> 661  2023-01-14    2023       2       11          5 #> 662  2023-01-21    2023       3       11         10 #> 663  2023-01-28    2023       4       11          6 #> 664  2023-02-04    2023       5       11          8 #> 665  2023-02-11    2023       6       11          6 #> 666  2023-02-18    2023       7       11          4 #> 667  2023-02-25    2023       8       11          4 #> 668  2023-03-04    2023       9       11          5 #> 669  2023-03-11    2023      10       11          1 #> 670  2023-03-18    2023      11       11          3 #> 671  2023-03-25    2023      12       11          2 #> 672  2023-04-01    2023      13       11         11 #> 673  2023-04-08    2023      14       11          3 #> 674  2023-04-15    2023      15       11          3 #> 675  2023-04-22    2023      16       11          3 #> 676  2023-04-29    2023      17       11          1 #> 677  2023-05-06    2023      18       11          1 #> 678  2023-05-13    2023      19       11          1 #> 679  2023-05-20    2023      20       11          2 #> 680  2023-05-27    2023      21       11          6 #> 681  2022-02-12    2022       6       12         64 #> 682  2022-02-19    2022       7       12         74 #> 683  2022-02-26    2022       8       12         66 #> 684  2022-03-05    2022       9       12         72 #> 685  2022-03-12    2022      10       12         69 #> 686  2022-03-19    2022      11       12         73 #> 687  2022-03-26    2022      12       12        109 #> 688  2022-04-02    2022      13       12         96 #> 689  2022-04-09    2022      14       12        103 #> 690  2022-04-16    2022      15       12        165 #> 691  2022-04-23    2022      16       12        163 #> 692  2022-04-30    2022      17       12        179 #> 693  2022-05-07    2022      18       12        223 #> 694  2022-05-14    2022      19       12        306 #> 695  2022-05-21    2022      20       12        406 #> 696  2022-05-28    2022      21       12        542 #> 697  2022-06-04    2022      22       12        680 #> 698  2022-06-11    2022      23       12        556 #> 699  2022-06-18    2022      24       12        465 #> 700  2022-06-25    2022      25       12        321 #> 701  2022-07-02    2022      26       12        205 #> 702  2022-07-09    2022      27       12        177 #> 703  2022-07-16    2022      28       12        134 #> 704  2022-07-23    2022      29       12         97 #> 705  2022-07-30    2022      30       12         81 #> 706  2022-08-06    2022      31       12         87 #> 707  2022-08-13    2022      32       12         89 #> 708  2022-08-20    2022      33       12         67 #> 709  2022-08-27    2022      34       12         75 #> 710  2022-09-03    2022      35       12         70 #> 711  2022-09-10    2022      36       12         60 #> 712  2022-09-17    2022      37       12         78 #> 713  2022-09-24    2022      38       12         81 #> 714  2022-10-01    2022      39       12         77 #> 715  2022-10-08    2022      40       12        110 #> 716  2022-10-15    2022      41       12        105 #> 717  2022-10-22    2022      42       12        125 #> 718  2022-10-29    2022      43       12        260 #> 719  2022-11-05    2022      44       12        304 #> 720  2022-11-12    2022      45       12        490 #> 721  2022-11-19    2022      46       12        504 #> 722  2022-11-26    2022      47       12        803 #> 723  2022-12-03    2022      48       12        896 #> 724  2022-12-10    2022      49       12        789 #> 725  2022-12-17    2022      50       12        891 #> 726  2022-12-24    2022      51       12        982 #> 727  2022-12-31    2022      52       12       1297 #> 728  2023-01-07    2023       1       12       1213 #> 729  2023-01-14    2023       2       12        714 #> 730  2023-01-21    2023       3       12        577 #> 731  2023-01-28    2023       4       12        410 #> 732  2023-02-04    2023       5       12        343 #> 733  2023-02-11    2023       6       12        300 #> 734  2023-02-18    2023       7       12        226 #> 735  2023-02-25    2023       8       12        201 #> 736  2023-03-04    2023       9       12        184 #> 737  2023-03-11    2023      10       12        188 #> 738  2023-03-18    2023      11       12        201 #> 739  2023-03-25    2023      12       12        162 #> 740  2023-04-01    2023      13       12        162 #> 741  2023-04-08    2023      14       12        182 #> 742  2023-04-15    2023      15       12        135 #> 743  2023-04-22    2023      16       12        141 #> 744  2023-04-29    2023      17       12        141 #> 745  2023-05-06    2023      18       12        125 #> 746  2023-05-13    2023      19       12        135 #> 747  2023-05-20    2023      20       12        136 #> 748  2023-05-27    2023      21       12        140 #> 749  2022-02-12    2022       6       13         38 #> 750  2022-02-19    2022       7       13         45 #> 751  2022-02-26    2022       8       13         35 #> 752  2022-03-05    2022       9       13         28 #> 753  2022-03-12    2022      10       13         37 #> 754  2022-03-19    2022      11       13         34 #> 755  2022-03-26    2022      12       13         33 #> 756  2022-04-02    2022      13       13         46 #> 757  2022-04-09    2022      14       13         31 #> 758  2022-04-16    2022      15       13         41 #> 759  2022-04-23    2022      16       13         44 #> 760  2022-04-30    2022      17       13         41 #> 761  2022-05-07    2022      18       13         43 #> 762  2022-05-14    2022      19       13         43 #> 763  2022-05-21    2022      20       13         49 #> 764  2022-05-28    2022      21       13         64 #> 765  2022-06-04    2022      22       13         63 #> 766  2022-06-11    2022      23       13         38 #> 767  2022-06-18    2022      24       13         36 #> 768  2022-06-25    2022      25       13         26 #> 769  2022-07-02    2022      26       13         34 #> 770  2022-07-09    2022      27       13         23 #> 771  2022-07-16    2022      28       13         26 #> 772  2022-07-23    2022      29       13         26 #> 773  2022-07-30    2022      30       13         33 #> 774  2022-08-06    2022      31       13         31 #> 775  2022-08-13    2022      32       13         13 #> 776  2022-08-20    2022      33       13         19 #> 777  2022-08-27    2022      34       13         17 #> 778  2022-09-03    2022      35       13         22 #> 779  2022-09-10    2022      36       13         38 #> 780  2022-09-17    2022      37       13         36 #> 781  2022-09-24    2022      38       13         39 #> 782  2022-10-01    2022      39       13         54 #> 783  2022-10-08    2022      40       13         87 #> 784  2022-10-15    2022      41       13        113 #> 785  2022-10-22    2022      42       13        119 #> 786  2022-10-29    2022      43       13        176 #> 787  2022-11-05    2022      44       13        217 #> 788  2022-11-12    2022      45       13        250 #> 789  2022-11-19    2022      46       13        193 #> 790  2022-11-26    2022      47       13        251 #> 791  2022-12-03    2022      48       13        252 #> 792  2022-12-10    2022      49       13        172 #> 793  2022-12-17    2022      50       13        138 #> 794  2022-12-24    2022      51       13        162 #> 795  2022-12-31    2022      52       13        195 #> 796  2023-01-07    2023       1       13        168 #> 797  2023-01-14    2023       2       13        106 #> 798  2023-01-21    2023       3       13         71 #> 799  2023-01-28    2023       4       13         70 #> 800  2023-02-04    2023       5       13         88 #> 801  2023-02-11    2023       6       13         82 #> 802  2023-02-18    2023       7       13         69 #> 803  2023-02-25    2023       8       13         70 #> 804  2023-03-04    2023       9       13         44 #> 805  2023-03-11    2023      10       13         55 #> 806  2023-03-18    2023      11       13         51 #> 807  2023-03-25    2023      12       13         68 #> 808  2023-04-01    2023      13       13         49 #> 809  2023-04-08    2023      14       13         48 #> 810  2023-04-15    2023      15       13         30 #> 811  2023-04-22    2023      16       13         48 #> 812  2023-04-29    2023      17       13         40 #> 813  2023-05-06    2023      18       13         36 #> 814  2023-05-13    2023      19       13         52 #> 815  2023-05-20    2023      20       13         29 #> 816  2023-05-27    2023      21       13         38 #> 817  2022-02-12    2022       6       15          0 #> 818  2022-02-19    2022       7       15          0 #> 819  2022-02-26    2022       8       15          0 #> 820  2022-03-05    2022       9       15          0 #> 821  2022-03-12    2022      10       15          0 #> 822  2022-03-19    2022      11       15          1 #> 823  2022-03-26    2022      12       15          0 #> 824  2022-04-02    2022      13       15          1 #> 825  2022-04-09    2022      14       15          4 #> 826  2022-04-16    2022      15       15         10 #> 827  2022-04-23    2022      16       15          6 #> 828  2022-04-30    2022      17       15          4 #> 829  2022-05-07    2022      18       15          1 #> 830  2022-05-14    2022      19       15          4 #> 831  2022-05-21    2022      20       15         10 #> 832  2022-05-28    2022      21       15          9 #> 833  2022-06-04    2022      22       15          4 #> 834  2022-06-11    2022      23       15          3 #> 835  2022-06-18    2022      24       15          4 #> 836  2022-06-25    2022      25       15          6 #> 837  2022-07-02    2022      26       15          4 #> 838  2022-07-09    2022      27       15          2 #> 839  2022-07-16    2022      28       15          0 #> 840  2022-07-23    2022      29       15          1 #> 841  2022-07-30    2022      30       15          2 #> 842  2022-08-06    2022      31       15          3 #> 843  2022-08-13    2022      32       15          2 #> 844  2022-08-20    2022      33       15          0 #> 845  2022-08-27    2022      34       15          1 #> 846  2022-09-03    2022      35       15          2 #> 847  2022-09-10    2022      36       15          1 #> 848  2022-09-17    2022      37       15          2 #> 849  2022-09-24    2022      38       15          3 #> 850  2022-10-01    2022      39       15          5 #> 851  2022-10-08    2022      40       15          4 #> 852  2022-10-15    2022      41       15          6 #> 853  2022-10-22    2022      42       15          4 #> 854  2022-10-29    2022      43       15          6 #> 855  2022-11-05    2022      44       15          8 #> 856  2022-11-12    2022      45       15         25 #> 857  2022-11-19    2022      46       15         10 #> 858  2022-11-26    2022      47       15         12 #> 859  2022-12-03    2022      48       15         12 #> 860  2022-12-10    2022      49       15         11 #> 861  2022-12-17    2022      50       15         17 #> 862  2022-12-24    2022      51       15         31 #> 863  2022-12-31    2022      52       15         28 #> 864  2023-01-07    2023       1       15         10 #> 865  2023-01-14    2023       2       15          9 #> 866  2023-01-21    2023       3       15          0 #> 867  2023-01-28    2023       4       15         11 #> 868  2023-02-04    2023       5       15          6 #> 869  2023-02-11    2023       6       15         10 #> 870  2023-02-18    2023       7       15          4 #> 871  2023-02-25    2023       8       15          5 #> 872  2023-03-04    2023       9       15          1 #> 873  2023-03-11    2023      10       15          4 #> 874  2023-03-18    2023      11       15          3 #> 875  2023-03-25    2023      12       15          2 #> 876  2023-04-01    2023      13       15          6 #> 877  2023-04-08    2023      14       15          3 #> 878  2023-04-15    2023      15       15          1 #> 879  2023-04-22    2023      16       15          2 #> 880  2023-04-29    2023      17       15          1 #> 881  2023-05-06    2023      18       15          0 #> 882  2023-05-13    2023      19       15          1 #> 883  2023-05-20    2023      20       15          3 #> 884  2023-05-27    2023      21       15          0 #> 885  2022-02-12    2022       6       16          1 #> 886  2022-02-19    2022       7       16          1 #> 887  2022-02-26    2022       8       16          4 #> 888  2022-03-05    2022       9       16          3 #> 889  2022-03-12    2022      10       16         15 #> 890  2022-03-19    2022      11       16         15 #> 891  2022-03-26    2022      12       16         15 #> 892  2022-04-02    2022      13       16         21 #> 893  2022-04-09    2022      14       16         17 #> 894  2022-04-16    2022      15       16         19 #> 895  2022-04-23    2022      16       16         14 #> 896  2022-04-30    2022      17       16         15 #> 897  2022-05-07    2022      18       16         15 #> 898  2022-05-14    2022      19       16         16 #> 899  2022-05-21    2022      20       16         13 #> 900  2022-05-28    2022      21       16          7 #> 901  2022-06-04    2022      22       16         11 #> 902  2022-06-11    2022      23       16          6 #> 903  2022-06-18    2022      24       16          6 #> 904  2022-06-25    2022      25       16          3 #> 905  2022-07-02    2022      26       16          3 #> 906  2022-07-09    2022      27       16          4 #> 907  2022-07-16    2022      28       16          4 #> 908  2022-07-23    2022      29       16          0 #> 909  2022-07-30    2022      30       16          1 #> 910  2022-08-06    2022      31       16          2 #> 911  2022-08-13    2022      32       16          0 #> 912  2022-08-20    2022      33       16          2 #> 913  2022-08-27    2022      34       16          1 #> 914  2022-09-03    2022      35       16          3 #> 915  2022-09-10    2022      36       16          0 #> 916  2022-09-17    2022      37       16          1 #> 917  2022-09-24    2022      38       16          3 #> 918  2022-10-01    2022      39       16          2 #> 919  2022-10-08    2022      40       16          1 #> 920  2022-10-15    2022      41       16          1 #> 921  2022-10-22    2022      42       16          1 #> 922  2022-10-29    2022      43       16          1 #> 923  2022-11-05    2022      44       16         20 #> 924  2022-11-12    2022      45       16         14 #> 925  2022-11-19    2022      46       16         60 #> 926  2022-11-26    2022      47       16        155 #> 927  2022-12-03    2022      48       16        189 #> 928  2022-12-10    2022      49       16        195 #> 929  2022-12-17    2022      50       16        285 #> 930  2022-12-24    2022      51       16        195 #> 931  2022-12-31    2022      52       16        219 #> 932  2023-01-07    2023       1       16        101 #> 933  2023-01-14    2023       2       16         42 #> 934  2023-01-21    2023       3       16         30 #> 935  2023-01-28    2023       4       16         17 #> 936  2023-02-04    2023       5       16          4 #> 937  2023-02-11    2023       6       16          4 #> 938  2023-02-18    2023       7       16          8 #> 939  2023-02-25    2023       8       16          3 #> 940  2023-03-04    2023       9       16          3 #> 941  2023-03-11    2023      10       16          4 #> 942  2023-03-18    2023      11       16          5 #> 943  2023-03-25    2023      12       16          5 #> 944  2023-04-01    2023      13       16          2 #> 945  2023-04-08    2023      14       16          5 #> 946  2023-04-15    2023      15       16          1 #> 947  2023-04-22    2023      16       16          5 #> 948  2023-04-29    2023      17       16          5 #> 949  2023-05-06    2023      18       16          6 #> 950  2023-05-13    2023      19       16          8 #> 951  2023-05-20    2023      20       16          2 #> 952  2023-05-27    2023      21       16          1 #> 953  2022-02-12    2022       6       17          9 #> 954  2022-02-19    2022       7       17         26 #> 955  2022-02-26    2022       8       17         26 #> 956  2022-03-05    2022       9       17         21 #> 957  2022-03-12    2022      10       17         39 #> 958  2022-03-19    2022      11       17         74 #> 959  2022-03-26    2022      12       17        105 #> 960  2022-04-02    2022      13       17        100 #> 961  2022-04-09    2022      14       17        103 #> 962  2022-04-16    2022      15       17         92 #> 963  2022-04-23    2022      16       17        126 #> 964  2022-04-30    2022      17       17         99 #> 965  2022-05-07    2022      18       17        114 #> 966  2022-05-14    2022      19       17        128 #> 967  2022-05-21    2022      20       17         93 #> 968  2022-05-28    2022      21       17         49 #> 969  2022-06-04    2022      22       17         41 #> 970  2022-06-11    2022      23       17         18 #> 971  2022-06-18    2022      24       17         23 #> 972  2022-06-25    2022      25       17         18 #> 973  2022-07-02    2022      26       17         11 #> 974  2022-07-09    2022      27       17          9 #> 975  2022-07-16    2022      28       17         14 #> 976  2022-07-23    2022      29       17          3 #> 977  2022-07-30    2022      30       17         12 #> 978  2022-08-06    2022      31       17         13 #> 979  2022-08-13    2022      32       17         12 #> 980  2022-08-20    2022      33       17         14 #> 981  2022-08-27    2022      34       17         15 #> 982  2022-09-03    2022      35       17         10 #> 983  2022-09-10    2022      36       17          3 #> 984  2022-09-17    2022      37       17          5 #> 985  2022-09-24    2022      38       17         16 #> 986  2022-10-01    2022      39       17         11 #> 987  2022-10-08    2022      40       17         11 #> 988  2022-10-15    2022      41       17         31 #> 989  2022-10-22    2022      42       17         45 #> 990  2022-10-29    2022      43       17        104 #> 991  2022-11-05    2022      44       17        181 #> 992  2022-11-12    2022      45       17        276 #> 993  2022-11-19    2022      46       17        447 #> 994  2022-11-26    2022      47       17        915 #> 995  2022-12-03    2022      48       17       1125 #> 996  2022-12-10    2022      49       17        973 #> 997  2022-12-17    2022      50       17        744 #> 998  2022-12-24    2022      51       17        563 #> 999  2022-12-31    2022      52       17        571 #> 1000 2023-01-07    2023       1       17        393 #> 1001 2023-01-14    2023       2       17        166 #> 1002 2023-01-21    2023       3       17         63 #> 1003 2023-01-28    2023       4       17         64 #> 1004 2023-02-04    2023       5       17         26 #> 1005 2023-02-11    2023       6       17         33 #> 1006 2023-02-18    2023       7       17         25 #> 1007 2023-02-25    2023       8       17         36 #> 1008 2023-03-04    2023       9       17         23 #> 1009 2023-03-11    2023      10       17         14 #> 1010 2023-03-18    2023      11       17         15 #> 1011 2023-03-25    2023      12       17         28 #> 1012 2023-04-01    2023      13       17         30 #> 1013 2023-04-08    2023      14       17         22 #> 1014 2023-04-15    2023      15       17         34 #> 1015 2023-04-22    2023      16       17         29 #> 1016 2023-04-29    2023      17       17         16 #> 1017 2023-05-06    2023      18       17         26 #> 1018 2023-05-13    2023      19       17         27 #> 1019 2023-05-20    2023      20       17         29 #> 1020 2023-05-27    2023      21       17         24 #> 1021 2022-02-12    2022       6       18         34 #> 1022 2022-02-19    2022       7       18         61 #> 1023 2022-02-26    2022       8       18         42 #> 1024 2022-03-05    2022       9       18         72 #> 1025 2022-03-12    2022      10       18        106 #> 1026 2022-03-19    2022      11       18        124 #> 1027 2022-03-26    2022      12       18        125 #> 1028 2022-04-02    2022      13       18        113 #> 1029 2022-04-09    2022      14       18        117 #> 1030 2022-04-16    2022      15       18         81 #> 1031 2022-04-23    2022      16       18         66 #> 1032 2022-04-30    2022      17       18         73 #> 1033 2022-05-07    2022      18       18         47 #> 1034 2022-05-14    2022      19       18         42 #> 1035 2022-05-21    2022      20       18         44 #> 1036 2022-05-28    2022      21       18         33 #> 1037 2022-06-04    2022      22       18         25 #> 1038 2022-06-11    2022      23       18         13 #> 1039 2022-06-18    2022      24       18         23 #> 1040 2022-06-25    2022      25       18         21 #> 1041 2022-07-02    2022      26       18         17 #> 1042 2022-07-09    2022      27       18         12 #> 1043 2022-07-16    2022      28       18         11 #> 1044 2022-07-23    2022      29       18          7 #> 1045 2022-07-30    2022      30       18         18 #> 1046 2022-08-06    2022      31       18         11 #> 1047 2022-08-13    2022      32       18          7 #> 1048 2022-08-20    2022      33       18         10 #> 1049 2022-08-27    2022      34       18         15 #> 1050 2022-09-03    2022      35       18         22 #> 1051 2022-09-10    2022      36       18         27 #> 1052 2022-09-17    2022      37       18         26 #> 1053 2022-09-24    2022      38       18         34 #> 1054 2022-10-01    2022      39       18         33 #> 1055 2022-10-08    2022      40       18         51 #> 1056 2022-10-15    2022      41       18         57 #> 1057 2022-10-22    2022      42       18         72 #> 1058 2022-10-29    2022      43       18        102 #> 1059 2022-11-05    2022      44       18        149 #> 1060 2022-11-12    2022      45       18        141 #> 1061 2022-11-19    2022      46       18        264 #> 1062 2022-11-26    2022      47       18        505 #> 1063 2022-12-03    2022      48       18        826 #> 1064 2022-12-10    2022      49       18        851 #> 1065 2022-12-17    2022      50       18        685 #> 1066 2022-12-24    2022      51       18        592 #> 1067 2022-12-31    2022      52       18        571 #> 1068 2023-01-07    2023       1       18        339 #> 1069 2023-01-14    2023       2       18        149 #> 1070 2023-01-21    2023       3       18         96 #> 1071 2023-01-28    2023       4       18         65 #> 1072 2023-02-04    2023       5       18         43 #> 1073 2023-02-11    2023       6       18         37 #> 1074 2023-02-18    2023       7       18         34 #> 1075 2023-02-25    2023       8       18         47 #> 1076 2023-03-04    2023       9       18         43 #> 1077 2023-03-11    2023      10       18         31 #> 1078 2023-03-18    2023      11       18         33 #> 1079 2023-03-25    2023      12       18         22 #> 1080 2023-04-01    2023      13       18         40 #> 1081 2023-04-08    2023      14       18         15 #> 1082 2023-04-15    2023      15       18         17 #> 1083 2023-04-22    2023      16       18         13 #> 1084 2023-04-29    2023      17       18         15 #> 1085 2023-05-06    2023      18       18         20 #> 1086 2023-05-13    2023      19       18         21 #> 1087 2023-05-20    2023      20       18         19 #> 1088 2023-05-27    2023      21       18         19 #> 1089 2022-02-12    2022       6       19         52 #> 1090 2022-02-19    2022       7       19         44 #> 1091 2022-02-26    2022       8       19         62 #> 1092 2022-03-05    2022       9       19         57 #> 1093 2022-03-12    2022      10       19         61 #> 1094 2022-03-19    2022      11       19         43 #> 1095 2022-03-26    2022      12       19         42 #> 1096 2022-04-02    2022      13       19         37 #> 1097 2022-04-09    2022      14       19         21 #> 1098 2022-04-16    2022      15       19         28 #> 1099 2022-04-23    2022      16       19         20 #> 1100 2022-04-30    2022      17       19         15 #> 1101 2022-05-07    2022      18       19         21 #> 1102 2022-05-14    2022      19       19         17 #> 1103 2022-05-21    2022      20       19         10 #> 1104 2022-05-28    2022      21       19          6 #> 1105 2022-06-04    2022      22       19          5 #> 1106 2022-06-11    2022      23       19         10 #> 1107 2022-06-18    2022      24       19          5 #> 1108 2022-06-25    2022      25       19          7 #> 1109 2022-07-02    2022      26       19          4 #> 1110 2022-07-09    2022      27       19          3 #> 1111 2022-07-16    2022      28       19          0 #> 1112 2022-07-23    2022      29       19          1 #> 1113 2022-07-30    2022      30       19          0 #> 1114 2022-08-06    2022      31       19          1 #> 1115 2022-08-13    2022      32       19          2 #> 1116 2022-08-20    2022      33       19          3 #> 1117 2022-08-27    2022      34       19          1 #> 1118 2022-09-03    2022      35       19          3 #> 1119 2022-09-10    2022      36       19          0 #> 1120 2022-09-17    2022      37       19          1 #> 1121 2022-09-24    2022      38       19          7 #> 1122 2022-10-01    2022      39       19          5 #> 1123 2022-10-08    2022      40       19          5 #> 1124 2022-10-15    2022      41       19          7 #> 1125 2022-10-22    2022      42       19         10 #> 1126 2022-10-29    2022      43       19         19 #> 1127 2022-11-05    2022      44       19         16 #> 1128 2022-11-12    2022      45       19         23 #> 1129 2022-11-19    2022      46       19         37 #> 1130 2022-11-26    2022      47       19        139 #> 1131 2022-12-03    2022      48       19        201 #> 1132 2022-12-10    2022      49       19        235 #> 1133 2022-12-17    2022      50       19        352 #> 1134 2022-12-24    2022      51       19        331 #> 1135 2022-12-31    2022      52       19        301 #> 1136 2023-01-07    2023       1       19        202 #> 1137 2023-01-14    2023       2       19         87 #> 1138 2023-01-21    2023       3       19         43 #> 1139 2023-01-28    2023       4       19         44 #> 1140 2023-02-04    2023       5       19         11 #> 1141 2023-02-11    2023       6       19         15 #> 1142 2023-02-18    2023       7       19          9 #> 1143 2023-02-25    2023       8       19          9 #> 1144 2023-03-04    2023       9       19          9 #> 1145 2023-03-11    2023      10       19          8 #> 1146 2023-03-18    2023      11       19          7 #> 1147 2023-03-25    2023      12       19          7 #> 1148 2023-04-01    2023      13       19          4 #> 1149 2023-04-08    2023      14       19          2 #> 1150 2023-04-15    2023      15       19          5 #> 1151 2023-04-22    2023      16       19          1 #> 1152 2023-04-29    2023      17       19         11 #> 1153 2023-05-06    2023      18       19          6 #> 1154 2023-05-13    2023      19       19          4 #> 1155 2023-05-20    2023      20       19          6 #> 1156 2023-05-27    2023      21       19          1 #> 1157 2022-02-12    2022       6       20         20 #> 1158 2022-02-19    2022       7       20         25 #> 1159 2022-02-26    2022       8       20         38 #> 1160 2022-03-05    2022       9       20         32 #> 1161 2022-03-12    2022      10       20         45 #> 1162 2022-03-19    2022      11       20         32 #> 1163 2022-03-26    2022      12       20         44 #> 1164 2022-04-02    2022      13       20         28 #> 1165 2022-04-09    2022      14       20         34 #> 1166 2022-04-16    2022      15       20         21 #> 1167 2022-04-23    2022      16       20         30 #> 1168 2022-04-30    2022      17       20         20 #> 1169 2022-05-07    2022      18       20         15 #> 1170 2022-05-14    2022      19       20         10 #> 1171 2022-05-21    2022      20       20          8 #> 1172 2022-05-28    2022      21       20          2 #> 1173 2022-06-04    2022      22       20          3 #> 1174 2022-06-11    2022      23       20          3 #> 1175 2022-06-18    2022      24       20          2 #> 1176 2022-06-25    2022      25       20          3 #> 1177 2022-07-02    2022      26       20          4 #> 1178 2022-07-09    2022      27       20          3 #> 1179 2022-07-16    2022      28       20          2 #> 1180 2022-07-23    2022      29       20          3 #> 1181 2022-07-30    2022      30       20          5 #> 1182 2022-08-06    2022      31       20          2 #> 1183 2022-08-13    2022      32       20          2 #> 1184 2022-08-20    2022      33       20          3 #> 1185 2022-08-27    2022      34       20          1 #> 1186 2022-09-03    2022      35       20          3 #> 1187 2022-09-10    2022      36       20          0 #> 1188 2022-09-17    2022      37       20          0 #> 1189 2022-09-24    2022      38       20          1 #> 1190 2022-10-01    2022      39       20          5 #> 1191 2022-10-08    2022      40       20          5 #> 1192 2022-10-15    2022      41       20          7 #> 1193 2022-10-22    2022      42       20         16 #> 1194 2022-10-29    2022      43       20         20 #> 1195 2022-11-05    2022      44       20         37 #> 1196 2022-11-12    2022      45       20         49 #> 1197 2022-11-19    2022      46       20         68 #> 1198 2022-11-26    2022      47       20        187 #> 1199 2022-12-03    2022      48       20        303 #> 1200 2022-12-10    2022      49       20        253 #> 1201 2022-12-17    2022      50       20        220 #> 1202 2022-12-24    2022      51       20        187 #> 1203 2022-12-31    2022      52       20        176 #> 1204 2023-01-07    2023       1       20        116 #> 1205 2023-01-14    2023       2       20         47 #> 1206 2023-01-21    2023       3       20         46 #> 1207 2023-01-28    2023       4       20         18 #> 1208 2023-02-04    2023       5       20         11 #> 1209 2023-02-11    2023       6       20         10 #> 1210 2023-02-18    2023       7       20          5 #> 1211 2023-02-25    2023       8       20          9 #> 1212 2023-03-04    2023       9       20          2 #> 1213 2023-03-11    2023      10       20          6 #> 1214 2023-03-18    2023      11       20          9 #> 1215 2023-03-25    2023      12       20          7 #> 1216 2023-04-01    2023      13       20          8 #> 1217 2023-04-08    2023      14       20          4 #> 1218 2023-04-15    2023      15       20          8 #> 1219 2023-04-22    2023      16       20          3 #> 1220 2023-04-29    2023      17       20          1 #> 1221 2023-05-06    2023      18       20          3 #> 1222 2023-05-13    2023      19       20          3 #> 1223 2023-05-20    2023      20       20          6 #> 1224 2023-05-27    2023      21       20          1 #> 1225 2022-02-12    2022       6       21         15 #> 1226 2022-02-19    2022       7       21         20 #> 1227 2022-02-26    2022       8       21         28 #> 1228 2022-03-05    2022       9       21         20 #> 1229 2022-03-12    2022      10       21         35 #> 1230 2022-03-19    2022      11       21         43 #> 1231 2022-03-26    2022      12       21         39 #> 1232 2022-04-02    2022      13       21         65 #> 1233 2022-04-09    2022      14       21         88 #> 1234 2022-04-16    2022      15       21         92 #> 1235 2022-04-23    2022      16       21         87 #> 1236 2022-04-30    2022      17       21         89 #> 1237 2022-05-07    2022      18       21         63 #> 1238 2022-05-14    2022      19       21         41 #> 1239 2022-05-21    2022      20       21         45 #> 1240 2022-05-28    2022      21       21         24 #> 1241 2022-06-04    2022      22       21         25 #> 1242 2022-06-11    2022      23       21         25 #> 1243 2022-06-18    2022      24       21          7 #> 1244 2022-06-25    2022      25       21         16 #> 1245 2022-07-02    2022      26       21          4 #> 1246 2022-07-09    2022      27       21          7 #> 1247 2022-07-16    2022      28       21          9 #> 1248 2022-07-23    2022      29       21          3 #> 1249 2022-07-30    2022      30       21          7 #> 1250 2022-08-06    2022      31       21          9 #> 1251 2022-08-13    2022      32       21          6 #> 1252 2022-08-20    2022      33       21          6 #> 1253 2022-08-27    2022      34       21          6 #> 1254 2022-09-03    2022      35       21          6 #> 1255 2022-09-10    2022      36       21         19 #> 1256 2022-09-17    2022      37       21          3 #> 1257 2022-09-24    2022      38       21         11 #> 1258 2022-10-01    2022      39       21          3 #> 1259 2022-10-08    2022      40       21         10 #> 1260 2022-10-15    2022      41       21         23 #> 1261 2022-10-22    2022      42       21         15 #> 1262 2022-10-29    2022      43       21         66 #> 1263 2022-11-05    2022      44       21        139 #> 1264 2022-11-12    2022      45       21        227 #> 1265 2022-11-19    2022      46       21        313 #> 1266 2022-11-26    2022      47       21        603 #> 1267 2022-12-03    2022      48       21        807 #> 1268 2022-12-10    2022      49       21        691 #> 1269 2022-12-17    2022      50       21        419 #> 1270 2022-12-24    2022      51       21        268 #> 1271 2022-12-31    2022      52       21        231 #> 1272 2023-01-07    2023       1       21        123 #> 1273 2023-01-14    2023       2       21         62 #> 1274 2023-01-21    2023       3       21         30 #> 1275 2023-01-28    2023       4       21         29 #> 1276 2023-02-04    2023       5       21         15 #> 1277 2023-02-11    2023       6       21         33 #> 1278 2023-02-18    2023       7       21         18 #> 1279 2023-02-25    2023       8       21         13 #> 1280 2023-03-04    2023       9       21         10 #> 1281 2023-03-11    2023      10       21         17 #> 1282 2023-03-18    2023      11       21         27 #> 1283 2023-03-25    2023      12       21         15 #> 1284 2023-04-01    2023      13       21         15 #> 1285 2023-04-08    2023      14       21         19 #> 1286 2023-04-15    2023      15       21         12 #> 1287 2023-04-22    2023      16       21         12 #> 1288 2023-04-29    2023      17       21          7 #> 1289 2023-05-06    2023      18       21         14 #> 1290 2023-05-13    2023      19       21         14 #> 1291 2023-05-20    2023      20       21         10 #> 1292 2023-05-27    2023      21       21         11 #> 1293 2022-02-12    2022       6       22         22 #> 1294 2022-02-19    2022       7       22         40 #> 1295 2022-02-26    2022       8       22         36 #> 1296 2022-03-05    2022       9       22         31 #> 1297 2022-03-12    2022      10       22         31 #> 1298 2022-03-19    2022      11       22         50 #> 1299 2022-03-26    2022      12       22         42 #> 1300 2022-04-02    2022      13       22         46 #> 1301 2022-04-09    2022      14       22         28 #> 1302 2022-04-16    2022      15       22         41 #> 1303 2022-04-23    2022      16       22         40 #> 1304 2022-04-30    2022      17       22         19 #> 1305 2022-05-07    2022      18       22         24 #> 1306 2022-05-14    2022      19       22         20 #> 1307 2022-05-21    2022      20       22         17 #> 1308 2022-05-28    2022      21       22         10 #> 1309 2022-06-04    2022      22       22         16 #> 1310 2022-06-11    2022      23       22         21 #> 1311 2022-06-18    2022      24       22         14 #> 1312 2022-06-25    2022      25       22          8 #> 1313 2022-07-02    2022      26       22          4 #> 1314 2022-07-09    2022      27       22          3 #> 1315 2022-07-16    2022      28       22          5 #> 1316 2022-07-23    2022      29       22         15 #> 1317 2022-07-30    2022      30       22          2 #> 1318 2022-08-06    2022      31       22          5 #> 1319 2022-08-13    2022      32       22          7 #> 1320 2022-08-20    2022      33       22          6 #> 1321 2022-08-27    2022      34       22         10 #> 1322 2022-09-03    2022      35       22          6 #> 1323 2022-09-10    2022      36       22         19 #> 1324 2022-09-17    2022      37       22         18 #> 1325 2022-09-24    2022      38       22         23 #> 1326 2022-10-01    2022      39       22         38 #> 1327 2022-10-08    2022      40       22         43 #> 1328 2022-10-15    2022      41       22         82 #> 1329 2022-10-22    2022      42       22         97 #> 1330 2022-10-29    2022      43       22        188 #> 1331 2022-11-05    2022      44       22        170 #> 1332 2022-11-12    2022      45       22        167 #> 1333 2022-11-19    2022      46       22        177 #> 1334 2022-11-26    2022      47       22        240 #> 1335 2022-12-03    2022      48       22        294 #> 1336 2022-12-10    2022      49       22        253 #> 1337 2022-12-17    2022      50       22        146 #> 1338 2022-12-24    2022      51       22        141 #> 1339 2022-12-31    2022      52       22        189 #> 1340 2023-01-07    2023       1       22        147 #> 1341 2023-01-14    2023       2       22         89 #> 1342 2023-01-21    2023       3       22         70 #> 1343 2023-01-28    2023       4       22         42 #> 1344 2023-02-04    2023       5       22         34 #> 1345 2023-02-11    2023       6       22         55 #> 1346 2023-02-18    2023       7       22         28 #> 1347 2023-02-25    2023       8       22         23 #> 1348 2023-03-04    2023       9       22         26 #> 1349 2023-03-11    2023      10       22         18 #> 1350 2023-03-18    2023      11       22         26 #> 1351 2023-03-25    2023      12       22         21 #> 1352 2023-04-01    2023      13       22         25 #> 1353 2023-04-08    2023      14       22         21 #> 1354 2023-04-15    2023      15       22         11 #> 1355 2023-04-22    2023      16       22         27 #> 1356 2023-04-29    2023      17       22         19 #> 1357 2023-05-06    2023      18       22         10 #> 1358 2023-05-13    2023      19       22         17 #> 1359 2023-05-20    2023      20       22         19 #> 1360 2023-05-27    2023      21       22         11 #> 1361 2022-02-12    2022       6       23          7 #> 1362 2022-02-19    2022       7       23          4 #> 1363 2022-02-26    2022       8       23          2 #> 1364 2022-03-05    2022       9       23          3 #> 1365 2022-03-12    2022      10       23          2 #> 1366 2022-03-19    2022      11       23          1 #> 1367 2022-03-26    2022      12       23          3 #> 1368 2022-04-02    2022      13       23         10 #> 1369 2022-04-09    2022      14       23         11 #> 1370 2022-04-16    2022      15       23         15 #> 1371 2022-04-23    2022      16       23         28 #> 1372 2022-04-30    2022      17       23         23 #> 1373 2022-05-07    2022      18       23         10 #> 1374 2022-05-14    2022      19       23         41 #> 1375 2022-05-21    2022      20       23         31 #> 1376 2022-05-28    2022      21       23         16 #> 1377 2022-06-04    2022      22       23         12 #> 1378 2022-06-11    2022      23       23         15 #> 1379 2022-06-18    2022      24       23          5 #> 1380 2022-06-25    2022      25       23          3 #> 1381 2022-07-02    2022      26       23          3 #> 1382 2022-07-09    2022      27       23          0 #> 1383 2022-07-16    2022      28       23          0 #> 1384 2022-07-23    2022      29       23          2 #> 1385 2022-07-30    2022      30       23          0 #> 1386 2022-08-06    2022      31       23          0 #> 1387 2022-08-13    2022      32       23          2 #> 1388 2022-08-20    2022      33       23          0 #> 1389 2022-08-27    2022      34       23          0 #> 1390 2022-09-03    2022      35       23          0 #> 1391 2022-09-10    2022      36       23          0 #> 1392 2022-09-17    2022      37       23          0 #> 1393 2022-09-24    2022      38       23          0 #> 1394 2022-10-01    2022      39       23          1 #> 1395 2022-10-08    2022      40       23          0 #> 1396 2022-10-15    2022      41       23          0 #> 1397 2022-10-22    2022      42       23          0 #> 1398 2022-10-29    2022      43       23          3 #> 1399 2022-11-05    2022      44       23          3 #> 1400 2022-11-12    2022      45       23         11 #> 1401 2022-11-19    2022      46       23         14 #> 1402 2022-11-26    2022      47       23         34 #> 1403 2022-12-03    2022      48       23        110 #> 1404 2022-12-10    2022      49       23        120 #> 1405 2022-12-17    2022      50       23        196 #> 1406 2022-12-24    2022      51       23        212 #> 1407 2022-12-31    2022      52       23        186 #> 1408 2023-01-07    2023       1       23        109 #> 1409 2023-01-14    2023       2       23         53 #> 1410 2023-01-21    2023       3       23         31 #> 1411 2023-01-28    2023       4       23         11 #> 1412 2023-02-04    2023       5       23          9 #> 1413 2023-02-11    2023       6       23          7 #> 1414 2023-02-18    2023       7       23          3 #> 1415 2023-02-25    2023       8       23          0 #> 1416 2023-03-04    2023       9       23          4 #> 1417 2023-03-11    2023      10       23          0 #> 1418 2023-03-18    2023      11       23          5 #> 1419 2023-03-25    2023      12       23          1 #> 1420 2023-04-01    2023      13       23          5 #> 1421 2023-04-08    2023      14       23          2 #> 1422 2023-04-15    2023      15       23          1 #> 1423 2023-04-22    2023      16       23          4 #> 1424 2023-04-29    2023      17       23          0 #> 1425 2023-05-06    2023      18       23          2 #> 1426 2023-05-13    2023      19       23          4 #> 1427 2023-05-20    2023      20       23          5 #> 1428 2023-05-27    2023      21       23          2 #> 1429 2022-02-12    2022       6       24          8 #> 1430 2022-02-19    2022       7       24         14 #> 1431 2022-02-26    2022       8       24         17 #> 1432 2022-03-05    2022       9       24         21 #> 1433 2022-03-12    2022      10       24         18 #> 1434 2022-03-19    2022      11       24         30 #> 1435 2022-03-26    2022      12       24         28 #> 1436 2022-04-02    2022      13       24         31 #> 1437 2022-04-09    2022      14       24         57 #> 1438 2022-04-16    2022      15       24         48 #> 1439 2022-04-23    2022      16       24         43 #> 1440 2022-04-30    2022      17       24         57 #> 1441 2022-05-07    2022      18       24         46 #> 1442 2022-05-14    2022      19       24         61 #> 1443 2022-05-21    2022      20       24         46 #> 1444 2022-05-28    2022      21       24         32 #> 1445 2022-06-04    2022      22       24         18 #> 1446 2022-06-11    2022      23       24         20 #> 1447 2022-06-18    2022      24       24         23 #> 1448 2022-06-25    2022      25       24         22 #> 1449 2022-07-02    2022      26       24         13 #> 1450 2022-07-09    2022      27       24         15 #> 1451 2022-07-16    2022      28       24          5 #> 1452 2022-07-23    2022      29       24          5 #> 1453 2022-07-30    2022      30       24          5 #> 1454 2022-08-06    2022      31       24          3 #> 1455 2022-08-13    2022      32       24          5 #> 1456 2022-08-20    2022      33       24         10 #> 1457 2022-08-27    2022      34       24          5 #> 1458 2022-09-03    2022      35       24          1 #> 1459 2022-09-10    2022      36       24          3 #> 1460 2022-09-17    2022      37       24          8 #> 1461 2022-09-24    2022      38       24          3 #> 1462 2022-10-01    2022      39       24          9 #> 1463 2022-10-08    2022      40       24         21 #> 1464 2022-10-15    2022      41       24         25 #> 1465 2022-10-22    2022      42       24         49 #> 1466 2022-10-29    2022      43       24        109 #> 1467 2022-11-05    2022      44       24        165 #> 1468 2022-11-12    2022      45       24        224 #> 1469 2022-11-19    2022      46       24        218 #> 1470 2022-11-26    2022      47       24        332 #> 1471 2022-12-03    2022      48       24        405 #> 1472 2022-12-10    2022      49       24        319 #> 1473 2022-12-17    2022      50       24        278 #> 1474 2022-12-24    2022      51       24        227 #> 1475 2022-12-31    2022      52       24        221 #> 1476 2023-01-07    2023       1       24        161 #> 1477 2023-01-14    2023       2       24        102 #> 1478 2023-01-21    2023       3       24         61 #> 1479 2023-01-28    2023       4       24         37 #> 1480 2023-02-04    2023       5       24         56 #> 1481 2023-02-11    2023       6       24         36 #> 1482 2023-02-18    2023       7       24         25 #> 1483 2023-02-25    2023       8       24         26 #> 1484 2023-03-04    2023       9       24         12 #> 1485 2023-03-11    2023      10       24         16 #> 1486 2023-03-18    2023      11       24         14 #> 1487 2023-03-25    2023      12       24         19 #> 1488 2023-04-01    2023      13       24          9 #> 1489 2023-04-08    2023      14       24         16 #> 1490 2023-04-15    2023      15       24         10 #> 1491 2023-04-22    2023      16       24         11 #> 1492 2023-04-29    2023      17       24         10 #> 1493 2023-05-06    2023      18       24         14 #> 1494 2023-05-13    2023      19       24         10 #> 1495 2023-05-20    2023      20       24          5 #> 1496 2023-05-27    2023      21       24          6 #> 1497 2022-02-12    2022       6       25         37 #> 1498 2022-02-19    2022       7       25         54 #> 1499 2022-02-26    2022       8       25         30 #> 1500 2022-03-05    2022       9       25         14 #> 1501 2022-03-12    2022      10       25         34 #> 1502 2022-03-19    2022      11       25         44 #> 1503 2022-03-26    2022      12       25         44 #> 1504 2022-04-02    2022      13       25        100 #> 1505 2022-04-09    2022      14       25        156 #> 1506 2022-04-16    2022      15       25        166 #> 1507 2022-04-23    2022      16       25        188 #> 1508 2022-04-30    2022      17       25        182 #> 1509 2022-05-07    2022      18       25        184 #> 1510 2022-05-14    2022      19       25        172 #> 1511 2022-05-21    2022      20       25        145 #> 1512 2022-05-28    2022      21       25         86 #> 1513 2022-06-04    2022      22       25         50 #> 1514 2022-06-11    2022      23       25         47 #> 1515 2022-06-18    2022      24       25         13 #> 1516 2022-06-25    2022      25       25         17 #> 1517 2022-07-02    2022      26       25          8 #> 1518 2022-07-09    2022      27       25         15 #> 1519 2022-07-16    2022      28       25         14 #> 1520 2022-07-23    2022      29       25         12 #> 1521 2022-07-30    2022      30       25          5 #> 1522 2022-08-06    2022      31       25         11 #> 1523 2022-08-13    2022      32       25          9 #> 1524 2022-08-20    2022      33       25          3 #> 1525 2022-08-27    2022      34       25         12 #> 1526 2022-09-03    2022      35       25          7 #> 1527 2022-09-10    2022      36       25          4 #> 1528 2022-09-17    2022      37       25          2 #> 1529 2022-09-24    2022      38       25          4 #> 1530 2022-10-01    2022      39       25          4 #> 1531 2022-10-08    2022      40       25          8 #> 1532 2022-10-15    2022      41       25          7 #> 1533 2022-10-22    2022      42       25          8 #> 1534 2022-10-29    2022      43       25         14 #> 1535 2022-11-05    2022      44       25         31 #> 1536 2022-11-12    2022      45       25         43 #> 1537 2022-11-19    2022      46       25         79 #> 1538 2022-11-26    2022      47       25        221 #> 1539 2022-12-03    2022      48       25        446 #> 1540 2022-12-10    2022      49       25        578 #> 1541 2022-12-17    2022      50       25        694 #> 1542 2022-12-24    2022      51       25        769 #> 1543 2022-12-31    2022      52       25        733 #> 1544 2023-01-07    2023       1       25        466 #> 1545 2023-01-14    2023       2       25        238 #> 1546 2023-01-21    2023       3       25        122 #> 1547 2023-01-28    2023       4       25         71 #> 1548 2023-02-04    2023       5       25         52 #> 1549 2023-02-11    2023       6       25         63 #> 1550 2023-02-18    2023       7       25         37 #> 1551 2023-02-25    2023       8       25         17 #> 1552 2023-03-04    2023       9       25         15 #> 1553 2023-03-11    2023      10       25         19 #> 1554 2023-03-18    2023      11       25         20 #> 1555 2023-03-25    2023      12       25         19 #> 1556 2023-04-01    2023      13       25         11 #> 1557 2023-04-08    2023      14       25         12 #> 1558 2023-04-15    2023      15       25         10 #> 1559 2023-04-22    2023      16       25          8 #> 1560 2023-04-29    2023      17       25          9 #> 1561 2023-05-06    2023      18       25         12 #> 1562 2023-05-13    2023      19       25          9 #> 1563 2023-05-20    2023      20       25         11 #> 1564 2023-05-27    2023      21       25         12 #> 1565 2022-02-12    2022       6       26         40 #> 1566 2022-02-19    2022       7       26         52 #> 1567 2022-02-26    2022       8       26         55 #> 1568 2022-03-05    2022       9       26         82 #> 1569 2022-03-12    2022      10       26         92 #> 1570 2022-03-19    2022      11       26        131 #> 1571 2022-03-26    2022      12       26        125 #> 1572 2022-04-02    2022      13       26        173 #> 1573 2022-04-09    2022      14       26        176 #> 1574 2022-04-16    2022      15       26        139 #> 1575 2022-04-23    2022      16       26        147 #> 1576 2022-04-30    2022      17       26        140 #> 1577 2022-05-07    2022      18       26        174 #> 1578 2022-05-14    2022      19       26        184 #> 1579 2022-05-21    2022      20       26        133 #> 1580 2022-05-28    2022      21       26         89 #> 1581 2022-06-04    2022      22       26         57 #> 1582 2022-06-11    2022      23       26         39 #> 1583 2022-06-18    2022      24       26         19 #> 1584 2022-06-25    2022      25       26         18 #> 1585 2022-07-02    2022      26       26          9 #> 1586 2022-07-09    2022      27       26         12 #> 1587 2022-07-16    2022      28       26          6 #> 1588 2022-07-23    2022      29       26          7 #> 1589 2022-07-30    2022      30       26          4 #> 1590 2022-08-06    2022      31       26          0 #> 1591 2022-08-13    2022      32       26          5 #> 1592 2022-08-20    2022      33       26          0 #> 1593 2022-08-27    2022      34       26          2 #> 1594 2022-09-03    2022      35       26          1 #> 1595 2022-09-10    2022      36       26         10 #> 1596 2022-09-17    2022      37       26          3 #> 1597 2022-09-24    2022      38       26          5 #> 1598 2022-10-01    2022      39       26          4 #> 1599 2022-10-08    2022      40       26         13 #> 1600 2022-10-15    2022      41       26         14 #> 1601 2022-10-22    2022      42       26         17 #> 1602 2022-10-29    2022      43       26         46 #> 1603 2022-11-05    2022      44       26         59 #> 1604 2022-11-12    2022      45       26         90 #> 1605 2022-11-19    2022      46       26        193 #> 1606 2022-11-26    2022      47       26        313 #> 1607 2022-12-03    2022      48       26        485 #> 1608 2022-12-10    2022      49       26        601 #> 1609 2022-12-17    2022      50       26       1001 #> 1610 2022-12-24    2022      51       26       1109 #> 1611 2022-12-31    2022      52       26       1137 #> 1612 2023-01-07    2023       1       26        641 #> 1613 2023-01-14    2023       2       26        290 #> 1614 2023-01-21    2023       3       26        150 #> 1615 2023-01-28    2023       4       26         86 #> 1616 2023-02-04    2023       5       26         86 #> 1617 2023-02-11    2023       6       26         51 #> 1618 2023-02-18    2023       7       26         58 #> 1619 2023-02-25    2023       8       26         57 #> 1620 2023-03-04    2023       9       26         44 #> 1621 2023-03-11    2023      10       26         41 #> 1622 2023-03-18    2023      11       26         31 #> 1623 2023-03-25    2023      12       26         19 #> 1624 2023-04-01    2023      13       26         17 #> 1625 2023-04-08    2023      14       26         27 #> 1626 2023-04-15    2023      15       26         15 #> 1627 2023-04-22    2023      16       26          8 #> 1628 2023-04-29    2023      17       26          7 #> 1629 2023-05-06    2023      18       26         16 #> 1630 2023-05-13    2023      19       26         17 #> 1631 2023-05-20    2023      20       26         14 #> 1632 2023-05-27    2023      21       26         18 #> 1633 2022-02-12    2022       6       27         19 #> 1634 2022-02-19    2022       7       27         28 #> 1635 2022-02-26    2022       8       27         19 #> 1636 2022-03-05    2022       9       27         31 #> 1637 2022-03-12    2022      10       27         35 #> 1638 2022-03-19    2022      11       27         29 #> 1639 2022-03-26    2022      12       27         37 #> 1640 2022-04-02    2022      13       27         34 #> 1641 2022-04-09    2022      14       27         24 #> 1642 2022-04-16    2022      15       27         28 #> 1643 2022-04-23    2022      16       27         36 #> 1644 2022-04-30    2022      17       27         29 #> 1645 2022-05-07    2022      18       27         30 #> 1646 2022-05-14    2022      19       27         15 #> 1647 2022-05-21    2022      20       27         12 #> 1648 2022-05-28    2022      21       27         14 #> 1649 2022-06-04    2022      22       27          4 #> 1650 2022-06-11    2022      23       27          5 #> 1651 2022-06-18    2022      24       27          9 #> 1652 2022-06-25    2022      25       27          0 #> 1653 2022-07-02    2022      26       27          1 #> 1654 2022-07-09    2022      27       27          2 #> 1655 2022-07-16    2022      28       27          2 #> 1656 2022-07-23    2022      29       27          3 #> 1657 2022-07-30    2022      30       27          3 #> 1658 2022-08-06    2022      31       27          2 #> 1659 2022-08-13    2022      32       27          5 #> 1660 2022-08-20    2022      33       27          1 #> 1661 2022-08-27    2022      34       27          0 #> 1662 2022-09-03    2022      35       27          1 #> 1663 2022-09-10    2022      36       27          1 #> 1664 2022-09-17    2022      37       27          0 #> 1665 2022-09-24    2022      38       27          3 #> 1666 2022-10-01    2022      39       27          2 #> 1667 2022-10-08    2022      40       27         11 #> 1668 2022-10-15    2022      41       27          7 #> 1669 2022-10-22    2022      42       27         11 #> 1670 2022-10-29    2022      43       27         43 #> 1671 2022-11-05    2022      44       27         85 #> 1672 2022-11-12    2022      45       27        182 #> 1673 2022-11-19    2022      46       27        268 #> 1674 2022-11-26    2022      47       27        382 #> 1675 2022-12-03    2022      48       27        447 #> 1676 2022-12-10    2022      49       27        325 #> 1677 2022-12-17    2022      50       27        236 #> 1678 2022-12-24    2022      51       27        162 #> 1679 2022-12-31    2022      52       27        164 #> 1680 2023-01-07    2023       1       27         75 #> 1681 2023-01-14    2023       2       27         48 #> 1682 2023-01-21    2023       3       27         25 #> 1683 2023-01-28    2023       4       27         15 #> 1684 2023-02-04    2023       5       27         16 #> 1685 2023-02-11    2023       6       27          9 #> 1686 2023-02-18    2023       7       27          8 #> 1687 2023-02-25    2023       8       27          8 #> 1688 2023-03-04    2023       9       27          7 #> 1689 2023-03-11    2023      10       27          4 #> 1690 2023-03-18    2023      11       27          6 #> 1691 2023-03-25    2023      12       27          6 #> 1692 2023-04-01    2023      13       27          9 #> 1693 2023-04-08    2023      14       27         14 #> 1694 2023-04-15    2023      15       27         11 #> 1695 2023-04-22    2023      16       27          6 #> 1696 2023-04-29    2023      17       27         14 #> 1697 2023-05-06    2023      18       27         20 #> 1698 2023-05-13    2023      19       27         11 #> 1699 2023-05-20    2023      20       27          7 #> 1700 2023-05-27    2023      21       27          3 #> 1701 2022-02-12    2022       6       28         22 #> 1702 2022-02-19    2022       7       28         27 #> 1703 2022-02-26    2022       8       28         31 #> 1704 2022-03-05    2022       9       28         34 #> 1705 2022-03-12    2022      10       28         32 #> 1706 2022-03-19    2022      11       28         36 #> 1707 2022-03-26    2022      12       28         38 #> 1708 2022-04-02    2022      13       28         20 #> 1709 2022-04-09    2022      14       28         34 #> 1710 2022-04-16    2022      15       28         23 #> 1711 2022-04-23    2022      16       28         20 #> 1712 2022-04-30    2022      17       28         26 #> 1713 2022-05-07    2022      18       28         21 #> 1714 2022-05-14    2022      19       28         30 #> 1715 2022-05-21    2022      20       28         27 #> 1716 2022-05-28    2022      21       28         22 #> 1717 2022-06-04    2022      22       28         23 #> 1718 2022-06-11    2022      23       28         13 #> 1719 2022-06-18    2022      24       28         19 #> 1720 2022-06-25    2022      25       28         19 #> 1721 2022-07-02    2022      26       28         17 #> 1722 2022-07-09    2022      27       28         24 #> 1723 2022-07-16    2022      28       28         18 #> 1724 2022-07-23    2022      29       28         24 #> 1725 2022-07-30    2022      30       28         17 #> 1726 2022-08-06    2022      31       28         21 #> 1727 2022-08-13    2022      32       28         13 #> 1728 2022-08-20    2022      33       28         16 #> 1729 2022-08-27    2022      34       28         15 #> 1730 2022-09-03    2022      35       28         19 #> 1731 2022-09-10    2022      36       28         22 #> 1732 2022-09-17    2022      37       28         32 #> 1733 2022-09-24    2022      38       28         20 #> 1734 2022-10-01    2022      39       28         35 #> 1735 2022-10-08    2022      40       28         58 #> 1736 2022-10-15    2022      41       28         70 #> 1737 2022-10-22    2022      42       28         90 #> 1738 2022-10-29    2022      43       28        165 #> 1739 2022-11-05    2022      44       28        255 #> 1740 2022-11-12    2022      45       28        258 #> 1741 2022-11-19    2022      46       28        243 #> 1742 2022-11-26    2022      47       28        282 #> 1743 2022-12-03    2022      48       28        258 #> 1744 2022-12-10    2022      49       28        171 #> 1745 2022-12-17    2022      50       28        133 #> 1746 2022-12-24    2022      51       28         87 #> 1747 2022-12-31    2022      52       28        122 #> 1748 2023-01-07    2023       1       28         86 #> 1749 2023-01-14    2023       2       28         47 #> 1750 2023-01-21    2023       3       28         58 #> 1751 2023-01-28    2023       4       28         30 #> 1752 2023-02-04    2023       5       28         27 #> 1753 2023-02-11    2023       6       28         19 #> 1754 2023-02-18    2023       7       28         33 #> 1755 2023-02-25    2023       8       28         31 #> 1756 2023-03-04    2023       9       28         34 #> 1757 2023-03-11    2023      10       28         30 #> 1758 2023-03-18    2023      11       28         23 #> 1759 2023-03-25    2023      12       28         15 #> 1760 2023-04-01    2023      13       28         20 #> 1761 2023-04-08    2023      14       28         26 #> 1762 2023-04-15    2023      15       28         19 #> 1763 2023-04-22    2023      16       28         30 #> 1764 2023-04-29    2023      17       28         15 #> 1765 2023-05-06    2023      18       28         20 #> 1766 2023-05-13    2023      19       28         28 #> 1767 2023-05-20    2023      20       28         22 #> 1768 2023-05-27    2023      21       28         16 #> 1769 2022-02-12    2022       6       29         42 #> 1770 2022-02-19    2022       7       29         60 #> 1771 2022-02-26    2022       8       29         57 #> 1772 2022-03-05    2022       9       29         77 #> 1773 2022-03-12    2022      10       29         67 #> 1774 2022-03-19    2022      11       29         96 #> 1775 2022-03-26    2022      12       29         84 #> 1776 2022-04-02    2022      13       29         97 #> 1777 2022-04-09    2022      14       29         78 #> 1778 2022-04-16    2022      15       29         78 #> 1779 2022-04-23    2022      16       29         70 #> 1780 2022-04-30    2022      17       29         59 #> 1781 2022-05-07    2022      18       29         68 #> 1782 2022-05-14    2022      19       29         39 #> 1783 2022-05-21    2022      20       29         37 #> 1784 2022-05-28    2022      21       29         20 #> 1785 2022-06-04    2022      22       29         33 #> 1786 2022-06-11    2022      23       29         19 #> 1787 2022-06-18    2022      24       29         24 #> 1788 2022-06-25    2022      25       29         18 #> 1789 2022-07-02    2022      26       29         14 #> 1790 2022-07-09    2022      27       29         15 #> 1791 2022-07-16    2022      28       29         14 #> 1792 2022-07-23    2022      29       29         18 #> 1793 2022-07-30    2022      30       29         14 #> 1794 2022-08-06    2022      31       29         22 #> 1795 2022-08-13    2022      32       29         17 #> 1796 2022-08-20    2022      33       29         11 #> 1797 2022-08-27    2022      34       29          6 #> 1798 2022-09-03    2022      35       29         10 #> 1799 2022-09-10    2022      36       29          4 #> 1800 2022-09-17    2022      37       29          6 #> 1801 2022-09-24    2022      38       29          7 #> 1802 2022-10-01    2022      39       29         14 #> 1803 2022-10-08    2022      40       29          6 #> 1804 2022-10-15    2022      41       29         12 #> 1805 2022-10-22    2022      42       29         23 #> 1806 2022-10-29    2022      43       29         56 #> 1807 2022-11-05    2022      44       29         71 #> 1808 2022-11-12    2022      45       29        115 #> 1809 2022-11-19    2022      46       29        221 #> 1810 2022-11-26    2022      47       29        548 #> 1811 2022-12-03    2022      48       29        861 #> 1812 2022-12-10    2022      49       29        861 #> 1813 2022-12-17    2022      50       29        717 #> 1814 2022-12-24    2022      51       29        548 #> 1815 2022-12-31    2022      52       29        642 #> 1816 2023-01-07    2023       1       29        370 #> 1817 2023-01-14    2023       2       29        176 #> 1818 2023-01-21    2023       3       29         94 #> 1819 2023-01-28    2023       4       29         68 #> 1820 2023-02-04    2023       5       29         52 #> 1821 2023-02-11    2023       6       29         39 #> 1822 2023-02-18    2023       7       29         45 #> 1823 2023-02-25    2023       8       29         33 #> 1824 2023-03-04    2023       9       29         38 #> 1825 2023-03-11    2023      10       29         37 #> 1826 2023-03-18    2023      11       29         22 #> 1827 2023-03-25    2023      12       29         31 #> 1828 2023-04-01    2023      13       29         29 #> 1829 2023-04-08    2023      14       29         29 #> 1830 2023-04-15    2023      15       29         19 #> 1831 2023-04-22    2023      16       29         22 #> 1832 2023-04-29    2023      17       29         24 #> 1833 2023-05-06    2023      18       29         24 #> 1834 2023-05-13    2023      19       29         25 #> 1835 2023-05-20    2023      20       29         18 #> 1836 2023-05-27    2023      21       29          9 #> 1837 2022-02-12    2022       6       30         13 #> 1838 2022-02-19    2022       7       30          9 #> 1839 2022-02-26    2022       8       30         15 #> 1840 2022-03-05    2022       9       30         19 #> 1841 2022-03-12    2022      10       30         15 #> 1842 2022-03-19    2022      11       30         17 #> 1843 2022-03-26    2022      12       30         21 #> 1844 2022-04-02    2022      13       30         36 #> 1845 2022-04-09    2022      14       30         18 #> 1846 2022-04-16    2022      15       30         18 #> 1847 2022-04-23    2022      16       30         19 #> 1848 2022-04-30    2022      17       30         17 #> 1849 2022-05-07    2022      18       30         21 #> 1850 2022-05-14    2022      19       30         11 #> 1851 2022-05-21    2022      20       30          7 #> 1852 2022-05-28    2022      21       30         14 #> 1853 2022-06-04    2022      22       30         22 #> 1854 2022-06-11    2022      23       30         10 #> 1855 2022-06-18    2022      24       30          1 #> 1856 2022-06-25    2022      25       30          0 #> 1857 2022-07-02    2022      26       30          4 #> 1858 2022-07-09    2022      27       30          3 #> 1859 2022-07-16    2022      28       30          1 #> 1860 2022-07-23    2022      29       30          0 #> 1861 2022-07-30    2022      30       30          0 #> 1862 2022-08-06    2022      31       30          0 #> 1863 2022-08-13    2022      32       30          0 #> 1864 2022-08-20    2022      33       30          1 #> 1865 2022-08-27    2022      34       30          0 #> 1866 2022-09-03    2022      35       30          0 #> 1867 2022-09-10    2022      36       30          0 #> 1868 2022-09-17    2022      37       30          1 #> 1869 2022-09-24    2022      38       30          0 #> 1870 2022-10-01    2022      39       30          2 #> 1871 2022-10-08    2022      40       30          0 #> 1872 2022-10-15    2022      41       30          0 #> 1873 2022-10-22    2022      42       30          0 #> 1874 2022-10-29    2022      43       30          5 #> 1875 2022-11-05    2022      44       30          5 #> 1876 2022-11-12    2022      45       30         12 #> 1877 2022-11-19    2022      46       30         12 #> 1878 2022-11-26    2022      47       30         50 #> 1879 2022-12-03    2022      48       30         71 #> 1880 2022-12-10    2022      49       30        104 #> 1881 2022-12-17    2022      50       30         96 #> 1882 2022-12-24    2022      51       30         64 #> 1883 2022-12-31    2022      52       30         86 #> 1884 2023-01-07    2023       1       30         58 #> 1885 2023-01-14    2023       2       30         37 #> 1886 2023-01-21    2023       3       30         13 #> 1887 2023-01-28    2023       4       30         10 #> 1888 2023-02-04    2023       5       30          9 #> 1889 2023-02-11    2023       6       30          3 #> 1890 2023-02-18    2023       7       30          4 #> 1891 2023-02-25    2023       8       30          3 #> 1892 2023-03-04    2023       9       30          6 #> 1893 2023-03-11    2023      10       30          4 #> 1894 2023-03-18    2023      11       30          1 #> 1895 2023-03-25    2023      12       30          1 #> 1896 2023-04-01    2023      13       30          1 #> 1897 2023-04-08    2023      14       30          0 #> 1898 2023-04-15    2023      15       30          1 #> 1899 2023-04-22    2023      16       30          1 #> 1900 2023-04-29    2023      17       30          0 #> 1901 2023-05-06    2023      18       30          0 #> 1902 2023-05-13    2023      19       30          0 #> 1903 2023-05-20    2023      20       30          2 #> 1904 2023-05-27    2023      21       30          3 #> 1905 2022-02-12    2022       6       31         29 #> 1906 2022-02-19    2022       7       31         34 #> 1907 2022-02-26    2022       8       31         36 #> 1908 2022-03-05    2022       9       31         60 #> 1909 2022-03-12    2022      10       31         39 #> 1910 2022-03-19    2022      11       31         70 #> 1911 2022-03-26    2022      12       31         50 #> 1912 2022-04-02    2022      13       31         22 #> 1913 2022-04-09    2022      14       31         35 #> 1914 2022-04-16    2022      15       31         29 #> 1915 2022-04-23    2022      16       31         19 #> 1916 2022-04-30    2022      17       31         14 #> 1917 2022-05-07    2022      18       31          4 #> 1918 2022-05-14    2022      19       31          4 #> 1919 2022-05-21    2022      20       31          7 #> 1920 2022-05-28    2022      21       31          3 #> 1921 2022-06-04    2022      22       31          9 #> 1922 2022-06-11    2022      23       31          6 #> 1923 2022-06-18    2022      24       31          3 #> 1924 2022-06-25    2022      25       31          7 #> 1925 2022-07-02    2022      26       31          8 #> 1926 2022-07-09    2022      27       31          8 #> 1927 2022-07-16    2022      28       31          4 #> 1928 2022-07-23    2022      29       31          1 #> 1929 2022-07-30    2022      30       31          4 #> 1930 2022-08-06    2022      31       31          2 #> 1931 2022-08-13    2022      32       31          0 #> 1932 2022-08-20    2022      33       31          7 #> 1933 2022-08-27    2022      34       31          8 #> 1934 2022-09-03    2022      35       31          8 #> 1935 2022-09-10    2022      36       31          4 #> 1936 2022-09-17    2022      37       31          7 #> 1937 2022-09-24    2022      38       31          9 #> 1938 2022-10-01    2022      39       31         11 #> 1939 2022-10-08    2022      40       31         22 #> 1940 2022-10-15    2022      41       31          9 #> 1941 2022-10-22    2022      42       31         14 #> 1942 2022-10-29    2022      43       31         16 #> 1943 2022-11-05    2022      44       31         28 #> 1944 2022-11-12    2022      45       31         21 #> 1945 2022-11-19    2022      46       31         43 #> 1946 2022-11-26    2022      47       31         62 #> 1947 2022-12-03    2022      48       31         97 #> 1948 2022-12-10    2022      49       31        133 #> 1949 2022-12-17    2022      50       31        173 #> 1950 2022-12-24    2022      51       31        138 #> 1951 2022-12-31    2022      52       31        136 #> 1952 2023-01-07    2023       1       31         93 #> 1953 2023-01-14    2023       2       31         58 #> 1954 2023-01-21    2023       3       31         57 #> 1955 2023-01-28    2023       4       31         19 #> 1956 2023-02-04    2023       5       31          8 #> 1957 2023-02-11    2023       6       31          0 #> 1958 2023-02-18    2023       7       31          6 #> 1959 2023-02-25    2023       8       31         11 #> 1960 2023-03-04    2023       9       31          6 #> 1961 2023-03-11    2023      10       31         13 #> 1962 2023-03-18    2023      11       31         11 #> 1963 2023-03-25    2023      12       31          9 #> 1964 2023-04-01    2023      13       31          9 #> 1965 2023-04-08    2023      14       31          6 #> 1966 2023-04-15    2023      15       31          4 #> 1967 2023-04-22    2023      16       31          7 #> 1968 2023-04-29    2023      17       31          4 #> 1969 2023-05-06    2023      18       31          1 #> 1970 2023-05-13    2023      19       31          4 #> 1971 2023-05-20    2023      20       31          2 #> 1972 2023-05-27    2023      21       31          8 #> 1973 2022-02-12    2022       6       32          6 #> 1974 2022-02-19    2022       7       32          8 #> 1975 2022-02-26    2022       8       32          9 #> 1976 2022-03-05    2022       9       32         20 #> 1977 2022-03-12    2022      10       32         25 #> 1978 2022-03-19    2022      11       32         37 #> 1979 2022-03-26    2022      12       32         43 #> 1980 2022-04-02    2022      13       32         59 #> 1981 2022-04-09    2022      14       32         96 #> 1982 2022-04-16    2022      15       32         73 #> 1983 2022-04-23    2022      16       32         76 #> 1984 2022-04-30    2022      17       32         53 #> 1985 2022-05-07    2022      18       32         44 #> 1986 2022-05-14    2022      19       32         81 #> 1987 2022-05-21    2022      20       32         85 #> 1988 2022-05-28    2022      21       32         76 #> 1989 2022-06-04    2022      22       32         64 #> 1990 2022-06-11    2022      23       32         86 #> 1991 2022-06-18    2022      24       32         48 #> 1992 2022-06-25    2022      25       32         30 #> 1993 2022-07-02    2022      26       32         24 #> 1994 2022-07-09    2022      27       32         18 #> 1995 2022-07-16    2022      28       32         16 #> 1996 2022-07-23    2022      29       32          3 #> 1997 2022-07-30    2022      30       32          6 #> 1998 2022-08-06    2022      31       32          1 #> 1999 2022-08-13    2022      32       32          1 #> 2000 2022-08-20    2022      33       32          2 #> 2001 2022-08-27    2022      34       32          7 #> 2002 2022-09-03    2022      35       32          3 #> 2003 2022-09-10    2022      36       32          6 #> 2004 2022-09-17    2022      37       32          8 #> 2005 2022-09-24    2022      38       32          9 #> 2006 2022-10-01    2022      39       32         14 #> 2007 2022-10-08    2022      40       32         37 #> 2008 2022-10-15    2022      41       32          8 #> 2009 2022-10-22    2022      42       32         14 #> 2010 2022-10-29    2022      43       32         12 #> 2011 2022-11-05    2022      44       32         31 #> 2012 2022-11-12    2022      45       32         80 #> 2013 2022-11-19    2022      46       32        157 #> 2014 2022-11-26    2022      47       32        252 #> 2015 2022-12-03    2022      48       32        397 #> 2016 2022-12-10    2022      49       32        366 #> 2017 2022-12-17    2022      50       32        231 #> 2018 2022-12-24    2022      51       32        232 #> 2019 2022-12-31    2022      52       32        169 #> 2020 2023-01-07    2023       1       32        107 #> 2021 2023-01-14    2023       2       32         29 #> 2022 2023-01-21    2023       3       32         21 #> 2023 2023-01-28    2023       4       32         11 #> 2024 2023-02-04    2023       5       32          6 #> 2025 2023-02-11    2023       6       32         10 #> 2026 2023-02-18    2023       7       32         11 #> 2027 2023-02-25    2023       8       32          3 #> 2028 2023-03-04    2023       9       32          4 #> 2029 2023-03-11    2023      10       32          3 #> 2030 2023-03-18    2023      11       32          6 #> 2031 2023-03-25    2023      12       32         10 #> 2032 2023-04-01    2023      13       32          3 #> 2033 2023-04-08    2023      14       32          7 #> 2034 2023-04-15    2023      15       32          4 #> 2035 2023-04-22    2023      16       32          0 #> 2036 2023-04-29    2023      17       32          6 #> 2037 2023-05-06    2023      18       32          5 #> 2038 2023-05-13    2023      19       32          6 #> 2039 2023-05-20    2023      20       32          4 #> 2040 2023-05-27    2023      21       32          5 #> 2041 2022-02-12    2022       6       33         11 #> 2042 2022-02-19    2022       7       33          7 #> 2043 2022-02-26    2022       8       33          4 #> 2044 2022-03-05    2022       9       33          3 #> 2045 2022-03-12    2022      10       33         17 #> 2046 2022-03-19    2022      11       33          8 #> 2047 2022-03-26    2022      12       33          9 #> 2048 2022-04-02    2022      13       33          9 #> 2049 2022-04-09    2022      14       33         16 #> 2050 2022-04-16    2022      15       33         19 #> 2051 2022-04-23    2022      16       33         32 #> 2052 2022-04-30    2022      17       33         30 #> 2053 2022-05-07    2022      18       33         26 #> 2054 2022-05-14    2022      19       33         15 #> 2055 2022-05-21    2022      20       33         14 #> 2056 2022-05-28    2022      21       33         10 #> 2057 2022-06-04    2022      22       33          8 #> 2058 2022-06-11    2022      23       33          4 #> 2059 2022-06-18    2022      24       33          2 #> 2060 2022-06-25    2022      25       33          1 #> 2061 2022-07-02    2022      26       33          3 #> 2062 2022-07-09    2022      27       33          1 #> 2063 2022-07-16    2022      28       33          0 #> 2064 2022-07-23    2022      29       33          2 #> 2065 2022-07-30    2022      30       33          2 #> 2066 2022-08-06    2022      31       33          1 #> 2067 2022-08-13    2022      32       33          1 #> 2068 2022-08-20    2022      33       33          0 #> 2069 2022-08-27    2022      34       33          0 #> 2070 2022-09-03    2022      35       33          0 #> 2071 2022-09-10    2022      36       33          0 #> 2072 2022-09-17    2022      37       33          3 #> 2073 2022-09-24    2022      38       33          2 #> 2074 2022-10-01    2022      39       33          0 #> 2075 2022-10-08    2022      40       33          0 #> 2076 2022-10-15    2022      41       33          0 #> 2077 2022-10-22    2022      42       33          1 #> 2078 2022-10-29    2022      43       33          0 #> 2079 2022-11-05    2022      44       33          3 #> 2080 2022-11-12    2022      45       33          5 #> 2081 2022-11-19    2022      46       33          7 #> 2082 2022-11-26    2022      47       33         12 #> 2083 2022-12-03    2022      48       33         36 #> 2084 2022-12-10    2022      49       33         73 #> 2085 2022-12-17    2022      50       33         87 #> 2086 2022-12-24    2022      51       33        120 #> 2087 2022-12-31    2022      52       33        142 #> 2088 2023-01-07    2023       1       33        100 #> 2089 2023-01-14    2023       2       33         44 #> 2090 2023-01-21    2023       3       33         20 #> 2091 2023-01-28    2023       4       33         20 #> 2092 2023-02-04    2023       5       33          1 #> 2093 2023-02-11    2023       6       33          9 #> 2094 2023-02-18    2023       7       33          4 #> 2095 2023-02-25    2023       8       33          2 #> 2096 2023-03-04    2023       9       33          1 #> 2097 2023-03-11    2023      10       33          6 #> 2098 2023-03-18    2023      11       33          9 #> 2099 2023-03-25    2023      12       33          9 #> 2100 2023-04-01    2023      13       33          9 #> 2101 2023-04-08    2023      14       33          5 #> 2102 2023-04-15    2023      15       33          0 #> 2103 2023-04-22    2023      16       33          1 #> 2104 2023-04-29    2023      17       33          3 #> 2105 2023-05-06    2023      18       33          2 #> 2106 2023-05-13    2023      19       33          1 #> 2107 2023-05-20    2023      20       33          1 #> 2108 2023-05-27    2023      21       33          3 #> 2109 2022-02-12    2022       6       34         25 #> 2110 2022-02-19    2022       7       34         32 #> 2111 2022-02-26    2022       8       34         35 #> 2112 2022-03-05    2022       9       34         41 #> 2113 2022-03-12    2022      10       34         39 #> 2114 2022-03-19    2022      11       34         52 #> 2115 2022-03-26    2022      12       34         63 #> 2116 2022-04-02    2022      13       34         94 #> 2117 2022-04-09    2022      14       34        152 #> 2118 2022-04-16    2022      15       34        130 #> 2119 2022-04-23    2022      16       34        131 #> 2120 2022-04-30    2022      17       34        129 #> 2121 2022-05-07    2022      18       34        116 #> 2122 2022-05-14    2022      19       34        108 #> 2123 2022-05-21    2022      20       34         82 #> 2124 2022-05-28    2022      21       34         79 #> 2125 2022-06-04    2022      22       34         48 #> 2126 2022-06-11    2022      23       34         50 #> 2127 2022-06-18    2022      24       34         49 #> 2128 2022-06-25    2022      25       34         17 #> 2129 2022-07-02    2022      26       34         17 #> 2130 2022-07-09    2022      27       34         18 #> 2131 2022-07-16    2022      28       34         20 #> 2132 2022-07-23    2022      29       34          7 #> 2133 2022-07-30    2022      30       34         10 #> 2134 2022-08-06    2022      31       34         19 #> 2135 2022-08-13    2022      32       34          6 #> 2136 2022-08-20    2022      33       34         15 #> 2137 2022-08-27    2022      34       34         12 #> 2138 2022-09-03    2022      35       34          9 #> 2139 2022-09-10    2022      36       34         13 #> 2140 2022-09-17    2022      37       34          9 #> 2141 2022-09-24    2022      38       34         19 #> 2142 2022-10-01    2022      39       34         17 #> 2143 2022-10-08    2022      40       34         28 #> 2144 2022-10-15    2022      41       34         31 #> 2145 2022-10-22    2022      42       34         32 #> 2146 2022-10-29    2022      43       34         76 #> 2147 2022-11-05    2022      44       34        183 #> 2148 2022-11-12    2022      45       34        309 #> 2149 2022-11-19    2022      46       34        324 #> 2150 2022-11-26    2022      47       34        581 #> 2151 2022-12-03    2022      48       34        892 #> 2152 2022-12-10    2022      49       34        738 #> 2153 2022-12-17    2022      50       34        601 #> 2154 2022-12-24    2022      51       34        522 #> 2155 2022-12-31    2022      52       34        505 #> 2156 2023-01-07    2023       1       34        316 #> 2157 2023-01-14    2023       2       34        157 #> 2158 2023-01-21    2023       3       34        102 #> 2159 2023-01-28    2023       4       34         70 #> 2160 2023-02-04    2023       5       34         31 #> 2161 2023-02-11    2023       6       34         28 #> 2162 2023-02-18    2023       7       34         56 #> 2163 2023-02-25    2023       8       34         41 #> 2164 2023-03-04    2023       9       34         27 #> 2165 2023-03-11    2023      10       34         25 #> 2166 2023-03-18    2023      11       34         22 #> 2167 2023-03-25    2023      12       34         45 #> 2168 2023-04-01    2023      13       34         37 #> 2169 2023-04-08    2023      14       34         41 #> 2170 2023-04-15    2023      15       34         43 #> 2171 2023-04-22    2023      16       34         35 #> 2172 2023-04-29    2023      17       34         12 #> 2173 2023-05-06    2023      18       34         21 #> 2174 2023-05-13    2023      19       34         22 #> 2175 2023-05-20    2023      20       34         15 #> 2176 2023-05-27    2023      21       34         18 #> 2177 2022-02-12    2022       6       35          7 #> 2178 2022-02-19    2022       7       35          8 #> 2179 2022-02-26    2022       8       35          3 #> 2180 2022-03-05    2022       9       35          6 #> 2181 2022-03-12    2022      10       35          8 #> 2182 2022-03-19    2022      11       35         17 #> 2183 2022-03-26    2022      12       35         43 #> 2184 2022-04-02    2022      13       35         40 #> 2185 2022-04-09    2022      14       35         42 #> 2186 2022-04-16    2022      15       35         28 #> 2187 2022-04-23    2022      16       35         48 #> 2188 2022-04-30    2022      17       35         55 #> 2189 2022-05-07    2022      18       35         69 #> 2190 2022-05-14    2022      19       35         34 #> 2191 2022-05-21    2022      20       35         69 #> 2192 2022-05-28    2022      21       35         50 #> 2193 2022-06-04    2022      22       35         54 #> 2194 2022-06-11    2022      23       35         27 #> 2195 2022-06-18    2022      24       35         16 #> 2196 2022-06-25    2022      25       35          8 #> 2197 2022-07-02    2022      26       35         14 #> 2198 2022-07-09    2022      27       35          0 #> 2199 2022-07-16    2022      28       35          6 #> 2200 2022-07-23    2022      29       35          5 #> 2201 2022-07-30    2022      30       35          3 #> 2202 2022-08-06    2022      31       35          6 #> 2203 2022-08-13    2022      32       35          7 #> 2204 2022-08-20    2022      33       35          7 #> 2205 2022-08-27    2022      34       35          6 #> 2206 2022-09-03    2022      35       35         21 #> 2207 2022-09-10    2022      36       35          7 #> 2208 2022-09-17    2022      37       35          4 #> 2209 2022-09-24    2022      38       35          9 #> 2210 2022-10-01    2022      39       35         12 #> 2211 2022-10-08    2022      40       35         27 #> 2212 2022-10-15    2022      41       35         22 #> 2213 2022-10-22    2022      42       35         29 #> 2214 2022-10-29    2022      43       35         56 #> 2215 2022-11-05    2022      44       35         97 #> 2216 2022-11-12    2022      45       35        154 #> 2217 2022-11-19    2022      46       35        159 #> 2218 2022-11-26    2022      47       35        190 #> 2219 2022-12-03    2022      48       35        371 #> 2220 2022-12-10    2022      49       35        417 #> 2221 2022-12-17    2022      50       35        351 #> 2222 2022-12-24    2022      51       35        352 #> 2223 2022-12-31    2022      52       35        269 #> 2224 2023-01-07    2023       1       35        163 #> 2225 2023-01-14    2023       2       35         43 #> 2226 2023-01-21    2023       3       35         30 #> 2227 2023-01-28    2023       4       35         17 #> 2228 2023-02-04    2023       5       35          9 #> 2229 2023-02-11    2023       6       35          9 #> 2230 2023-02-18    2023       7       35          3 #> 2231 2023-02-25    2023       8       35         12 #> 2232 2023-03-04    2023       9       35         15 #> 2233 2023-03-11    2023      10       35          5 #> 2234 2023-03-18    2023      11       35          3 #> 2235 2023-03-25    2023      12       35          4 #> 2236 2023-04-01    2023      13       35          8 #> 2237 2023-04-08    2023      14       35          1 #> 2238 2023-04-15    2023      15       35          4 #> 2239 2023-04-22    2023      16       35          8 #> 2240 2023-04-29    2023      17       35          2 #> 2241 2023-05-06    2023      18       35          1 #> 2242 2023-05-13    2023      19       35          1 #> 2243 2023-05-20    2023      20       35          4 #> 2244 2023-05-27    2023      21       35          3 #> 2245 2022-02-12    2022       6       36         34 #> 2246 2022-02-19    2022       7       36         30 #> 2247 2022-02-26    2022       8       36         38 #> 2248 2022-03-05    2022       9       36         56 #> 2249 2022-03-12    2022      10       36         57 #> 2250 2022-03-19    2022      11       36        101 #> 2251 2022-03-26    2022      12       36         87 #> 2252 2022-04-02    2022      13       36        180 #> 2253 2022-04-09    2022      14       36        191 #> 2254 2022-04-16    2022      15       36        245 #> 2255 2022-04-23    2022      16       36        302 #> 2256 2022-04-30    2022      17       36        265 #> 2257 2022-05-07    2022      18       36        239 #> 2258 2022-05-14    2022      19       36        201 #> 2259 2022-05-21    2022      20       36        177 #> 2260 2022-05-28    2022      21       36        169 #> 2261 2022-06-04    2022      22       36        119 #> 2262 2022-06-11    2022      23       36        102 #> 2263 2022-06-18    2022      24       36         89 #> 2264 2022-06-25    2022      25       36         63 #> 2265 2022-07-02    2022      26       36         43 #> 2266 2022-07-09    2022      27       36         35 #> 2267 2022-07-16    2022      28       36         36 #> 2268 2022-07-23    2022      29       36         12 #> 2269 2022-07-30    2022      30       36         15 #> 2270 2022-08-06    2022      31       36         11 #> 2271 2022-08-13    2022      32       36         10 #> 2272 2022-08-20    2022      33       36         19 #> 2273 2022-08-27    2022      34       36         26 #> 2274 2022-09-03    2022      35       36         21 #> 2275 2022-09-10    2022      36       36         14 #> 2276 2022-09-17    2022      37       36         20 #> 2277 2022-09-24    2022      38       36         12 #> 2278 2022-10-01    2022      39       36         29 #> 2279 2022-10-08    2022      40       36         38 #> 2280 2022-10-15    2022      41       36         49 #> 2281 2022-10-22    2022      42       36         49 #> 2282 2022-10-29    2022      43       36        107 #> 2283 2022-11-05    2022      44       36        206 #> 2284 2022-11-12    2022      45       36        300 #> 2285 2022-11-19    2022      46       36        508 #> 2286 2022-11-26    2022      47       36        871 #> 2287 2022-12-03    2022      48       36       1350 #> 2288 2022-12-10    2022      49       36       1531 #> 2289 2022-12-17    2022      50       36       1741 #> 2290 2022-12-24    2022      51       36       1485 #> 2291 2022-12-31    2022      52       36       1273 #> 2292 2023-01-07    2023       1       36        797 #> 2293 2023-01-14    2023       2       36        425 #> 2294 2023-01-21    2023       3       36        243 #> 2295 2023-01-28    2023       4       36        154 #> 2296 2023-02-04    2023       5       36         94 #> 2297 2023-02-11    2023       6       36         98 #> 2298 2023-02-18    2023       7       36         84 #> 2299 2023-02-25    2023       8       36         50 #> 2300 2023-03-04    2023       9       36         51 #> 2301 2023-03-11    2023      10       36         57 #> 2302 2023-03-18    2023      11       36         64 #> 2303 2023-03-25    2023      12       36         73 #> 2304 2023-04-01    2023      13       36         78 #> 2305 2023-04-08    2023      14       36         76 #> 2306 2023-04-15    2023      15       36         74 #> 2307 2023-04-22    2023      16       36         45 #> 2308 2023-04-29    2023      17       36         40 #> 2309 2023-05-06    2023      18       36         50 #> 2310 2023-05-13    2023      19       36         48 #> 2311 2023-05-20    2023      20       36         53 #> 2312 2023-05-27    2023      21       36         59 #> 2313 2022-02-12    2022       6       37         32 #> 2314 2022-02-19    2022       7       37         32 #> 2315 2022-02-26    2022       8       37         36 #> 2316 2022-03-05    2022       9       37         54 #> 2317 2022-03-12    2022      10       37         52 #> 2318 2022-03-19    2022      11       37         15 #> 2319 2022-03-26    2022      12       37         25 #> 2320 2022-04-02    2022      13       37         37 #> 2321 2022-04-09    2022      14       37         45 #> 2322 2022-04-16    2022      15       37         53 #> 2323 2022-04-23    2022      16       37         56 #> 2324 2022-04-30    2022      17       37         60 #> 2325 2022-05-07    2022      18       37         51 #> 2326 2022-05-14    2022      19       37         47 #> 2327 2022-05-21    2022      20       37         54 #> 2328 2022-05-28    2022      21       37         34 #> 2329 2022-06-04    2022      22       37         30 #> 2330 2022-06-11    2022      23       37         45 #> 2331 2022-06-18    2022      24       37         73 #> 2332 2022-06-25    2022      25       37         48 #> 2333 2022-07-02    2022      26       37         41 #> 2334 2022-07-09    2022      27       37         19 #> 2335 2022-07-16    2022      28       37         41 #> 2336 2022-07-23    2022      29       37         41 #> 2337 2022-07-30    2022      30       37          8 #> 2338 2022-08-06    2022      31       37          2 #> 2339 2022-08-13    2022      32       37         12 #> 2340 2022-08-20    2022      33       37         13 #> 2341 2022-08-27    2022      34       37         13 #> 2342 2022-09-03    2022      35       37          8 #> 2343 2022-09-10    2022      36       37         14 #> 2344 2022-09-17    2022      37       37         17 #> 2345 2022-09-24    2022      38       37         13 #> 2346 2022-10-01    2022      39       37         21 #> 2347 2022-10-08    2022      40       37         22 #> 2348 2022-10-15    2022      41       37         32 #> 2349 2022-10-22    2022      42       37         79 #> 2350 2022-10-29    2022      43       37        211 #> 2351 2022-11-05    2022      44       37        281 #> 2352 2022-11-12    2022      45       37        371 #> 2353 2022-11-19    2022      46       37        369 #> 2354 2022-11-26    2022      47       37        467 #> 2355 2022-12-03    2022      48       37        600 #> 2356 2022-12-10    2022      49       37        385 #> 2357 2022-12-17    2022      50       37        315 #> 2358 2022-12-24    2022      51       37        296 #> 2359 2022-12-31    2022      52       37        308 #> 2360 2023-01-07    2023       1       37        194 #> 2361 2023-01-14    2023       2       37        124 #> 2362 2023-01-21    2023       3       37         59 #> 2363 2023-01-28    2023       4       37         34 #> 2364 2023-02-04    2023       5       37         45 #> 2365 2023-02-11    2023       6       37         55 #> 2366 2023-02-18    2023       7       37         42 #> 2367 2023-02-25    2023       8       37         30 #> 2368 2023-03-04    2023       9       37         34 #> 2369 2023-03-11    2023      10       37         28 #> 2370 2023-03-18    2023      11       37         30 #> 2371 2023-03-25    2023      12       37         18 #> 2372 2023-04-01    2023      13       37         10 #> 2373 2023-04-08    2023      14       37         27 #> 2374 2023-04-15    2023      15       37         21 #> 2375 2023-04-22    2023      16       37         15 #> 2376 2023-04-29    2023      17       37          7 #> 2377 2023-05-06    2023      18       37          8 #> 2378 2023-05-13    2023      19       37         17 #> 2379 2023-05-20    2023      20       37         10 #> 2380 2023-05-27    2023      21       37          6 #> 2381 2022-02-12    2022       6       38          5 #> 2382 2022-02-19    2022       7       38          5 #> 2383 2022-02-26    2022       8       38          0 #> 2384 2022-03-05    2022       9       38          2 #> 2385 2022-03-12    2022      10       38          6 #> 2386 2022-03-19    2022      11       38          4 #> 2387 2022-03-26    2022      12       38          5 #> 2388 2022-04-02    2022      13       38          3 #> 2389 2022-04-09    2022      14       38          5 #> 2390 2022-04-16    2022      15       38          7 #> 2391 2022-04-23    2022      16       38          5 #> 2392 2022-04-30    2022      17       38          2 #> 2393 2022-05-07    2022      18       38          1 #> 2394 2022-05-14    2022      19       38          1 #> 2395 2022-05-21    2022      20       38          1 #> 2396 2022-05-28    2022      21       38          0 #> 2397 2022-06-04    2022      22       38          3 #> 2398 2022-06-11    2022      23       38          2 #> 2399 2022-06-18    2022      24       38          0 #> 2400 2022-06-25    2022      25       38          0 #> 2401 2022-07-02    2022      26       38          0 #> 2402 2022-07-09    2022      27       38          0 #> 2403 2022-07-16    2022      28       38          1 #> 2404 2022-07-23    2022      29       38          2 #> 2405 2022-07-30    2022      30       38          0 #> 2406 2022-08-06    2022      31       38          2 #> 2407 2022-08-13    2022      32       38          2 #> 2408 2022-08-20    2022      33       38          0 #> 2409 2022-08-27    2022      34       38          0 #> 2410 2022-09-03    2022      35       38          3 #> 2411 2022-09-10    2022      36       38          0 #> 2412 2022-09-17    2022      37       38          0 #> 2413 2022-09-24    2022      38       38          1 #> 2414 2022-10-01    2022      39       38          0 #> 2415 2022-10-08    2022      40       38          0 #> 2416 2022-10-15    2022      41       38          2 #> 2417 2022-10-22    2022      42       38          1 #> 2418 2022-10-29    2022      43       38          2 #> 2419 2022-11-05    2022      44       38          5 #> 2420 2022-11-12    2022      45       38         10 #> 2421 2022-11-19    2022      46       38         12 #> 2422 2022-11-26    2022      47       38         28 #> 2423 2022-12-03    2022      48       38         49 #> 2424 2022-12-10    2022      49       38         59 #> 2425 2022-12-17    2022      50       38         95 #> 2426 2022-12-24    2022      51       38         70 #> 2427 2022-12-31    2022      52       38         81 #> 2428 2023-01-07    2023       1       38         69 #> 2429 2023-01-14    2023       2       38         48 #> 2430 2023-01-21    2023       3       38         28 #> 2431 2023-01-28    2023       4       38         21 #> 2432 2023-02-04    2023       5       38          8 #> 2433 2023-02-11    2023       6       38         19 #> 2434 2023-02-18    2023       7       38          8 #> 2435 2023-02-25    2023       8       38          9 #> 2436 2023-03-04    2023       9       38          4 #> 2437 2023-03-11    2023      10       38          6 #> 2438 2023-03-18    2023      11       38         10 #> 2439 2023-03-25    2023      12       38          0 #> 2440 2023-04-01    2023      13       38          0 #> 2441 2023-04-08    2023      14       38          8 #> 2442 2023-04-15    2023      15       38          4 #> 2443 2023-04-22    2023      16       38          5 #> 2444 2023-04-29    2023      17       38          3 #> 2445 2023-05-06    2023      18       38          8 #> 2446 2023-05-13    2023      19       38          1 #> 2447 2023-05-20    2023      20       38          4 #> 2448 2023-05-27    2023      21       38          3 #> 2449 2022-02-12    2022       6       39         29 #> 2450 2022-02-19    2022       7       39         41 #> 2451 2022-02-26    2022       8       39         33 #> 2452 2022-03-05    2022       9       39         50 #> 2453 2022-03-12    2022      10       39         86 #> 2454 2022-03-19    2022      11       39        104 #> 2455 2022-03-26    2022      12       39        106 #> 2456 2022-04-02    2022      13       39        100 #> 2457 2022-04-09    2022      14       39        135 #> 2458 2022-04-16    2022      15       39        123 #> 2459 2022-04-23    2022      16       39        136 #> 2460 2022-04-30    2022      17       39        100 #> 2461 2022-05-07    2022      18       39        104 #> 2462 2022-05-14    2022      19       39         82 #> 2463 2022-05-21    2022      20       39         61 #> 2464 2022-05-28    2022      21       39         47 #> 2465 2022-06-04    2022      22       39         41 #> 2466 2022-06-11    2022      23       39         25 #> 2467 2022-06-18    2022      24       39         24 #> 2468 2022-06-25    2022      25       39         12 #> 2469 2022-07-02    2022      26       39         18 #> 2470 2022-07-09    2022      27       39          4 #> 2471 2022-07-16    2022      28       39          8 #> 2472 2022-07-23    2022      29       39         12 #> 2473 2022-07-30    2022      30       39          7 #> 2474 2022-08-06    2022      31       39          3 #> 2475 2022-08-13    2022      32       39          1 #> 2476 2022-08-20    2022      33       39         12 #> 2477 2022-08-27    2022      34       39         14 #> 2478 2022-09-03    2022      35       39         13 #> 2479 2022-09-10    2022      36       39         16 #> 2480 2022-09-17    2022      37       39          5 #> 2481 2022-09-24    2022      38       39         12 #> 2482 2022-10-01    2022      39       39         17 #> 2483 2022-10-08    2022      40       39         18 #> 2484 2022-10-15    2022      41       39         32 #> 2485 2022-10-22    2022      42       39         39 #> 2486 2022-10-29    2022      43       39        115 #> 2487 2022-11-05    2022      44       39        211 #> 2488 2022-11-12    2022      45       39        244 #> 2489 2022-11-19    2022      46       39        329 #> 2490 2022-11-26    2022      47       39        646 #> 2491 2022-12-03    2022      48       39        966 #> 2492 2022-12-10    2022      49       39        952 #> 2493 2022-12-17    2022      50       39        982 #> 2494 2022-12-24    2022      51       39        783 #> 2495 2022-12-31    2022      52       39        688 #> 2496 2023-01-07    2023       1       39        429 #> 2497 2023-01-14    2023       2       39        179 #> 2498 2023-01-21    2023       3       39        107 #> 2499 2023-01-28    2023       4       39         66 #> 2500 2023-02-04    2023       5       39         63 #> 2501 2023-02-11    2023       6       39         46 #> 2502 2023-02-18    2023       7       39         42 #> 2503 2023-02-25    2023       8       39         24 #> 2504 2023-03-04    2023       9       39         24 #> 2505 2023-03-11    2023      10       39         26 #> 2506 2023-03-18    2023      11       39         32 #> 2507 2023-03-25    2023      12       39         34 #> 2508 2023-04-01    2023      13       39         30 #> 2509 2023-04-08    2023      14       39         13 #> 2510 2023-04-15    2023      15       39         26 #> 2511 2023-04-22    2023      16       39         18 #> 2512 2023-04-29    2023      17       39         18 #> 2513 2023-05-06    2023      18       39         16 #> 2514 2023-05-13    2023      19       39         18 #> 2515 2023-05-20    2023      20       39          9 #> 2516 2023-05-27    2023      21       39         18 #> 2517 2022-02-12    2022       6       40         70 #> 2518 2022-02-19    2022       7       40         78 #> 2519 2022-02-26    2022       8       40         81 #> 2520 2022-03-05    2022       9       40         95 #> 2521 2022-03-12    2022      10       40        129 #> 2522 2022-03-19    2022      11       40        167 #> 2523 2022-03-26    2022      12       40        163 #> 2524 2022-04-02    2022      13       40        164 #> 2525 2022-04-09    2022      14       40        117 #> 2526 2022-04-16    2022      15       40        107 #> 2527 2022-04-23    2022      16       40         76 #> 2528 2022-04-30    2022      17       40         43 #> 2529 2022-05-07    2022      18       40         35 #> 2530 2022-05-14    2022      19       40         51 #> 2531 2022-05-21    2022      20       40         36 #> 2532 2022-05-28    2022      21       40         35 #> 2533 2022-06-04    2022      22       40         37 #> 2534 2022-06-11    2022      23       40         26 #> 2535 2022-06-18    2022      24       40         28 #> 2536 2022-06-25    2022      25       40         30 #> 2537 2022-07-02    2022      26       40         25 #> 2538 2022-07-09    2022      27       40         26 #> 2539 2022-07-16    2022      28       40         22 #> 2540 2022-07-23    2022      29       40          6 #> 2541 2022-07-30    2022      30       40          6 #> 2542 2022-08-06    2022      31       40         24 #> 2543 2022-08-13    2022      32       40          9 #> 2544 2022-08-20    2022      33       40          7 #> 2545 2022-08-27    2022      34       40         10 #> 2546 2022-09-03    2022      35       40          9 #> 2547 2022-09-10    2022      36       40         10 #> 2548 2022-09-17    2022      37       40          9 #> 2549 2022-09-24    2022      38       40          8 #> 2550 2022-10-01    2022      39       40          6 #> 2551 2022-10-08    2022      40       40          7 #> 2552 2022-10-15    2022      41       40         17 #> 2553 2022-10-22    2022      42       40         36 #> 2554 2022-10-29    2022      43       40         59 #> 2555 2022-11-05    2022      44       40         46 #> 2556 2022-11-12    2022      45       40         85 #> 2557 2022-11-19    2022      46       40        177 #> 2558 2022-11-26    2022      47       40        426 #> 2559 2022-12-03    2022      48       40        829 #> 2560 2022-12-10    2022      49       40        871 #> 2561 2022-12-17    2022      50       40        764 #> 2562 2022-12-24    2022      51       40        682 #> 2563 2022-12-31    2022      52       40        700 #> 2564 2023-01-07    2023       1       40        481 #> 2565 2023-01-14    2023       2       40        268 #> 2566 2023-01-21    2023       3       40        139 #> 2567 2023-01-28    2023       4       40         97 #> 2568 2023-02-04    2023       5       40         75 #> 2569 2023-02-11    2023       6       40         52 #> 2570 2023-02-18    2023       7       40         42 #> 2571 2023-02-25    2023       8       40         35 #> 2572 2023-03-04    2023       9       40         27 #> 2573 2023-03-11    2023      10       40         27 #> 2574 2023-03-18    2023      11       40         22 #> 2575 2023-03-25    2023      12       40         23 #> 2576 2023-04-01    2023      13       40         22 #> 2577 2023-04-08    2023      14       40         22 #> 2578 2023-04-15    2023      15       40         17 #> 2579 2023-04-22    2023      16       40         17 #> 2580 2023-04-29    2023      17       40         22 #> 2581 2023-05-06    2023      18       40          9 #> 2582 2023-05-13    2023      19       40         14 #> 2583 2023-05-20    2023      20       40         26 #> 2584 2023-05-27    2023      21       40         16 #> 2585 2022-02-12    2022       6       41          2 #> 2586 2022-02-19    2022       7       41          6 #> 2587 2022-02-26    2022       8       41          3 #> 2588 2022-03-05    2022       9       41          2 #> 2589 2022-03-12    2022      10       41          9 #> 2590 2022-03-19    2022      11       41         19 #> 2591 2022-03-26    2022      12       41         23 #> 2592 2022-04-02    2022      13       41         10 #> 2593 2022-04-09    2022      14       41         15 #> 2594 2022-04-16    2022      15       41         15 #> 2595 2022-04-23    2022      16       41         29 #> 2596 2022-04-30    2022      17       41         20 #> 2597 2022-05-07    2022      18       41         30 #> 2598 2022-05-14    2022      19       41         30 #> 2599 2022-05-21    2022      20       41         38 #> 2600 2022-05-28    2022      21       41         29 #> 2601 2022-06-04    2022      22       41         29 #> 2602 2022-06-11    2022      23       41         16 #> 2603 2022-06-18    2022      24       41         12 #> 2604 2022-06-25    2022      25       41          7 #> 2605 2022-07-02    2022      26       41          2 #> 2606 2022-07-09    2022      27       41          0 #> 2607 2022-07-16    2022      28       41          7 #> 2608 2022-07-23    2022      29       41          1 #> 2609 2022-07-30    2022      30       41          2 #> 2610 2022-08-06    2022      31       41          0 #> 2611 2022-08-13    2022      32       41          2 #> 2612 2022-08-20    2022      33       41          0 #> 2613 2022-08-27    2022      34       41          0 #> 2614 2022-09-03    2022      35       41          0 #> 2615 2022-09-10    2022      36       41          1 #> 2616 2022-09-17    2022      37       41          1 #> 2617 2022-09-24    2022      38       41          1 #> 2618 2022-10-01    2022      39       41          1 #> 2619 2022-10-08    2022      40       41          1 #> 2620 2022-10-15    2022      41       41          2 #> 2621 2022-10-22    2022      42       41          6 #> 2622 2022-10-29    2022      43       41          5 #> 2623 2022-11-05    2022      44       41         46 #> 2624 2022-11-12    2022      45       41         45 #> 2625 2022-11-19    2022      46       41        129 #> 2626 2022-11-26    2022      47       41        406 #> 2627 2022-12-03    2022      48       41        546 #> 2628 2022-12-10    2022      49       41        698 #> 2629 2022-12-17    2022      50       41        652 #> 2630 2022-12-24    2022      51       41        443 #> 2631 2022-12-31    2022      52       41        344 #> 2632 2023-01-07    2023       1       41        130 #> 2633 2023-01-14    2023       2       41         62 #> 2634 2023-01-21    2023       3       41         25 #> 2635 2023-01-28    2023       4       41         10 #> 2636 2023-02-04    2023       5       41         10 #> 2637 2023-02-11    2023       6       41          6 #> 2638 2023-02-18    2023       7       41          5 #> 2639 2023-02-25    2023       8       41          5 #> 2640 2023-03-04    2023       9       41          8 #> 2641 2023-03-11    2023      10       41          4 #> 2642 2023-03-18    2023      11       41          7 #> 2643 2023-03-25    2023      12       41          3 #> 2644 2023-04-01    2023      13       41          5 #> 2645 2023-04-08    2023      14       41          5 #> 2646 2023-04-15    2023      15       41          2 #> 2647 2023-04-22    2023      16       41          1 #> 2648 2023-04-29    2023      17       41          4 #> 2649 2023-05-06    2023      18       41          2 #> 2650 2023-05-13    2023      19       41          0 #> 2651 2023-05-20    2023      20       41          2 #> 2652 2023-05-27    2023      21       41          3 #> 2653 2022-02-12    2022       6       42         60 #> 2654 2022-02-19    2022       7       42         96 #> 2655 2022-02-26    2022       8       42         82 #> 2656 2022-03-05    2022       9       42         77 #> 2657 2022-03-12    2022      10       42         82 #> 2658 2022-03-19    2022      11       42        120 #> 2659 2022-03-26    2022      12       42        113 #> 2660 2022-04-02    2022      13       42        153 #> 2661 2022-04-09    2022      14       42        207 #> 2662 2022-04-16    2022      15       42        207 #> 2663 2022-04-23    2022      16       42        213 #> 2664 2022-04-30    2022      17       42        169 #> 2665 2022-05-07    2022      18       42        156 #> 2666 2022-05-14    2022      19       42        186 #> 2667 2022-05-21    2022      20       42        151 #> 2668 2022-05-28    2022      21       42         85 #> 2669 2022-06-04    2022      22       42         63 #> 2670 2022-06-11    2022      23       42         55 #> 2671 2022-06-18    2022      24       42         43 #> 2672 2022-06-25    2022      25       42         38 #> 2673 2022-07-02    2022      26       42         44 #> 2674 2022-07-09    2022      27       42         40 #> 2675 2022-07-16    2022      28       42         25 #> 2676 2022-07-23    2022      29       42         37 #> 2677 2022-07-30    2022      30       42         28 #> 2678 2022-08-06    2022      31       42         28 #> 2679 2022-08-13    2022      32       42         30 #> 2680 2022-08-20    2022      33       42         44 #> 2681 2022-08-27    2022      34       42         29 #> 2682 2022-09-03    2022      35       42         40 #> 2683 2022-09-10    2022      36       42         35 #> 2684 2022-09-17    2022      37       42         29 #> 2685 2022-09-24    2022      38       42         35 #> 2686 2022-10-01    2022      39       42         53 #> 2687 2022-10-08    2022      40       42         59 #> 2688 2022-10-15    2022      41       42         76 #> 2689 2022-10-22    2022      42       42         97 #> 2690 2022-10-29    2022      43       42        179 #> 2691 2022-11-05    2022      44       42        238 #> 2692 2022-11-12    2022      45       42        366 #> 2693 2022-11-19    2022      46       42        438 #> 2694 2022-11-26    2022      47       42        825 #> 2695 2022-12-03    2022      48       42       1330 #> 2696 2022-12-10    2022      49       42       1180 #> 2697 2022-12-17    2022      50       42       1042 #> 2698 2022-12-24    2022      51       42       1044 #> 2699 2022-12-31    2022      52       42       1060 #> 2700 2023-01-07    2023       1       42        777 #> 2701 2023-01-14    2023       2       42        430 #> 2702 2023-01-21    2023       3       42        288 #> 2703 2023-01-28    2023       4       42        222 #> 2704 2023-02-04    2023       5       42        186 #> 2705 2023-02-11    2023       6       42        183 #> 2706 2023-02-18    2023       7       42        197 #> 2707 2023-02-25    2023       8       42        167 #> 2708 2023-03-04    2023       9       42        164 #> 2709 2023-03-11    2023      10       42        179 #> 2710 2023-03-18    2023      11       42        171 #> 2711 2023-03-25    2023      12       42        147 #> 2712 2023-04-01    2023      13       42         91 #> 2713 2023-04-08    2023      14       42         65 #> 2714 2023-04-15    2023      15       42         73 #> 2715 2023-04-22    2023      16       42         77 #> 2716 2023-04-29    2023      17       42         74 #> 2717 2023-05-06    2023      18       42         52 #> 2718 2023-05-13    2023      19       42         59 #> 2719 2023-05-20    2023      20       42         54 #> 2720 2023-05-27    2023      21       42         59 #> 2721 2022-02-12    2022       6       44          0 #> 2722 2022-02-19    2022       7       44          1 #> 2723 2022-02-26    2022       8       44          0 #> 2724 2022-03-05    2022       9       44          2 #> 2725 2022-03-12    2022      10       44          0 #> 2726 2022-03-19    2022      11       44          1 #> 2727 2022-03-26    2022      12       44          1 #> 2728 2022-04-02    2022      13       44          3 #> 2729 2022-04-09    2022      14       44          6 #> 2730 2022-04-16    2022      15       44         10 #> 2731 2022-04-23    2022      16       44          8 #> 2732 2022-04-30    2022      17       44          5 #> 2733 2022-05-07    2022      18       44          6 #> 2734 2022-05-14    2022      19       44         10 #> 2735 2022-05-21    2022      20       44          5 #> 2736 2022-05-28    2022      21       44          6 #> 2737 2022-06-04    2022      22       44          6 #> 2738 2022-06-11    2022      23       44          2 #> 2739 2022-06-18    2022      24       44          1 #> 2740 2022-06-25    2022      25       44          1 #> 2741 2022-07-02    2022      26       44          0 #> 2742 2022-07-09    2022      27       44          0 #> 2743 2022-07-16    2022      28       44          1 #> 2744 2022-07-23    2022      29       44          0 #> 2745 2022-07-30    2022      30       44          0 #> 2746 2022-08-06    2022      31       44          0 #> 2747 2022-08-13    2022      32       44          0 #> 2748 2022-08-20    2022      33       44          0 #> 2749 2022-08-27    2022      34       44          0 #> 2750 2022-09-03    2022      35       44          0 #> 2751 2022-09-10    2022      36       44          0 #> 2752 2022-09-17    2022      37       44          0 #> 2753 2022-09-24    2022      38       44          0 #> 2754 2022-10-01    2022      39       44          1 #> 2755 2022-10-08    2022      40       44          1 #> 2756 2022-10-15    2022      41       44          0 #> 2757 2022-10-22    2022      42       44          2 #> 2758 2022-10-29    2022      43       44          0 #> 2759 2022-11-05    2022      44       44          3 #> 2760 2022-11-12    2022      45       44          6 #> 2761 2022-11-19    2022      46       44          3 #> 2762 2022-11-26    2022      47       44         16 #> 2763 2022-12-03    2022      48       44         26 #> 2764 2022-12-10    2022      49       44         50 #> 2765 2022-12-17    2022      50       44         47 #> 2766 2022-12-24    2022      51       44         62 #> 2767 2022-12-31    2022      52       44         51 #> 2768 2023-01-07    2023       1       44         31 #> 2769 2023-01-14    2023       2       44         10 #> 2770 2023-01-21    2023       3       44         14 #> 2771 2023-01-28    2023       4       44         10 #> 2772 2023-02-04    2023       5       44          3 #> 2773 2023-02-11    2023       6       44          1 #> 2774 2023-02-18    2023       7       44          2 #> 2775 2023-02-25    2023       8       44          2 #> 2776 2023-03-04    2023       9       44          1 #> 2777 2023-03-11    2023      10       44          0 #> 2778 2023-03-18    2023      11       44          1 #> 2779 2023-03-25    2023      12       44          2 #> 2780 2023-04-01    2023      13       44          0 #> 2781 2023-04-08    2023      14       44          0 #> 2782 2023-04-15    2023      15       44          1 #> 2783 2023-04-22    2023      16       44          1 #> 2784 2023-04-29    2023      17       44          1 #> 2785 2023-05-06    2023      18       44          1 #> 2786 2023-05-13    2023      19       44          3 #> 2787 2023-05-20    2023      20       44          0 #> 2788 2023-05-27    2023      21       44          3 #> 2789 2022-02-12    2022       6       45         20 #> 2790 2022-02-19    2022       7       45         21 #> 2791 2022-02-26    2022       8       45         27 #> 2792 2022-03-05    2022       9       45         23 #> 2793 2022-03-12    2022      10       45         21 #> 2794 2022-03-19    2022      11       45         23 #> 2795 2022-03-26    2022      12       45         15 #> 2796 2022-04-02    2022      13       45         23 #> 2797 2022-04-09    2022      14       45         32 #> 2798 2022-04-16    2022      15       45         31 #> 2799 2022-04-23    2022      16       45         36 #> 2800 2022-04-30    2022      17       45         40 #> 2801 2022-05-07    2022      18       45         23 #> 2802 2022-05-14    2022      19       45         36 #> 2803 2022-05-21    2022      20       45         44 #> 2804 2022-05-28    2022      21       45         35 #> 2805 2022-06-04    2022      22       45         32 #> 2806 2022-06-11    2022      23       45         32 #> 2807 2022-06-18    2022      24       45         29 #> 2808 2022-06-25    2022      25       45         29 #> 2809 2022-07-02    2022      26       45         15 #> 2810 2022-07-09    2022      27       45         15 #> 2811 2022-07-16    2022      28       45          9 #> 2812 2022-07-23    2022      29       45         17 #> 2813 2022-07-30    2022      30       45         20 #> 2814 2022-08-06    2022      31       45         11 #> 2815 2022-08-13    2022      32       45         13 #> 2816 2022-08-20    2022      33       45          6 #> 2817 2022-08-27    2022      34       45         10 #> 2818 2022-09-03    2022      35       45         14 #> 2819 2022-09-10    2022      36       45          8 #> 2820 2022-09-17    2022      37       45          8 #> 2821 2022-09-24    2022      38       45         18 #> 2822 2022-10-01    2022      39       45         18 #> 2823 2022-10-08    2022      40       45         38 #> 2824 2022-10-15    2022      41       45         37 #> 2825 2022-10-22    2022      42       45         88 #> 2826 2022-10-29    2022      43       45        163 #> 2827 2022-11-05    2022      44       45        258 #> 2828 2022-11-12    2022      45       45        254 #> 2829 2022-11-19    2022      46       45        215 #> 2830 2022-11-26    2022      47       45        233 #> 2831 2022-12-03    2022      48       45        223 #> 2832 2022-12-10    2022      49       45        163 #> 2833 2022-12-17    2022      50       45        137 #> 2834 2022-12-24    2022      51       45        128 #> 2835 2022-12-31    2022      52       45        164 #> 2836 2023-01-07    2023       1       45        128 #> 2837 2023-01-14    2023       2       45         78 #> 2838 2023-01-21    2023       3       45         60 #> 2839 2023-01-28    2023       4       45         34 #> 2840 2023-02-04    2023       5       45         42 #> 2841 2023-02-11    2023       6       45         47 #> 2842 2023-02-18    2023       7       45         42 #> 2843 2023-02-25    2023       8       45         38 #> 2844 2023-03-04    2023       9       45         32 #> 2845 2023-03-11    2023      10       45         26 #> 2846 2023-03-18    2023      11       45         21 #> 2847 2023-03-25    2023      12       45         25 #> 2848 2023-04-01    2023      13       45         20 #> 2849 2023-04-08    2023      14       45         25 #> 2850 2023-04-15    2023      15       45         19 #> 2851 2023-04-22    2023      16       45         23 #> 2852 2023-04-29    2023      17       45         26 #> 2853 2023-05-06    2023      18       45         21 #> 2854 2023-05-13    2023      19       45         21 #> 2855 2023-05-20    2023      20       45         17 #> 2856 2023-05-27    2023      21       45         19 #> 2857 2022-02-12    2022       6       46         19 #> 2858 2022-02-19    2022       7       46         14 #> 2859 2022-02-26    2022       8       46         15 #> 2860 2022-03-05    2022       9       46         34 #> 2861 2022-03-12    2022      10       46         15 #> 2862 2022-03-19    2022      11       46         10 #> 2863 2022-03-26    2022      12       46          5 #> 2864 2022-04-02    2022      13       46          9 #> 2865 2022-04-09    2022      14       46         10 #> 2866 2022-04-16    2022      15       46          4 #> 2867 2022-04-23    2022      16       46          7 #> 2868 2022-04-30    2022      17       46          8 #> 2869 2022-05-07    2022      18       46          4 #> 2870 2022-05-14    2022      19       46         10 #> 2871 2022-05-21    2022      20       46          6 #> 2872 2022-05-28    2022      21       46          3 #> 2873 2022-06-04    2022      22       46          1 #> 2874 2022-06-11    2022      23       46          1 #> 2875 2022-06-18    2022      24       46          2 #> 2876 2022-06-25    2022      25       46          3 #> 2877 2022-07-02    2022      26       46          1 #> 2878 2022-07-09    2022      27       46          0 #> 2879 2022-07-16    2022      28       46          0 #> 2880 2022-07-23    2022      29       46          8 #> 2881 2022-07-30    2022      30       46          9 #> 2882 2022-08-06    2022      31       46          5 #> 2883 2022-08-13    2022      32       46          7 #> 2884 2022-08-20    2022      33       46          8 #> 2885 2022-08-27    2022      34       46          6 #> 2886 2022-09-03    2022      35       46          7 #> 2887 2022-09-10    2022      36       46          7 #> 2888 2022-09-17    2022      37       46          7 #> 2889 2022-09-24    2022      38       46          7 #> 2890 2022-10-01    2022      39       46         10 #> 2891 2022-10-08    2022      40       46         10 #> 2892 2022-10-15    2022      41       46         13 #> 2893 2022-10-22    2022      42       46         12 #> 2894 2022-10-29    2022      43       46          9 #> 2895 2022-11-05    2022      44       46          9 #> 2896 2022-11-12    2022      45       46         13 #> 2897 2022-11-19    2022      46       46         28 #> 2898 2022-11-26    2022      47       46         63 #> 2899 2022-12-03    2022      48       46         70 #> 2900 2022-12-10    2022      49       46         85 #> 2901 2022-12-17    2022      50       46        105 #> 2902 2022-12-24    2022      51       46         71 #> 2903 2022-12-31    2022      52       46         57 #> 2904 2023-01-07    2023       1       46         58 #> 2905 2023-01-14    2023       2       46         16 #> 2906 2023-01-21    2023       3       46         11 #> 2907 2023-01-28    2023       4       46         16 #> 2908 2023-02-04    2023       5       46         12 #> 2909 2023-02-11    2023       6       46          9 #> 2910 2023-02-18    2023       7       46         10 #> 2911 2023-02-25    2023       8       46          4 #> 2912 2023-03-04    2023       9       46          9 #> 2913 2023-03-11    2023      10       46         16 #> 2914 2023-03-18    2023      11       46         11 #> 2915 2023-03-25    2023      12       46         21 #> 2916 2023-04-01    2023      13       46         13 #> 2917 2023-04-08    2023      14       46         10 #> 2918 2023-04-15    2023      15       46          4 #> 2919 2023-04-22    2023      16       46          4 #> 2920 2023-04-29    2023      17       46          5 #> 2921 2023-05-06    2023      18       46          6 #> 2922 2023-05-13    2023      19       46          6 #> 2923 2023-05-20    2023      20       46          2 #> 2924 2023-05-27    2023      21       46          1 #> 2925 2022-02-12    2022       6       47         24 #> 2926 2022-02-19    2022       7       47         29 #> 2927 2022-02-26    2022       8       47         47 #> 2928 2022-03-05    2022       9       47         33 #> 2929 2022-03-12    2022      10       47         32 #> 2930 2022-03-19    2022      11       47         40 #> 2931 2022-03-26    2022      12       47         45 #> 2932 2022-04-02    2022      13       47         48 #> 2933 2022-04-09    2022      14       47         36 #> 2934 2022-04-16    2022      15       47         45 #> 2935 2022-04-23    2022      16       47         39 #> 2936 2022-04-30    2022      17       47         46 #> 2937 2022-05-07    2022      18       47         23 #> 2938 2022-05-14    2022      19       47         33 #> 2939 2022-05-21    2022      20       47         24 #> 2940 2022-05-28    2022      21       47         22 #> 2941 2022-06-04    2022      22       47         22 #> 2942 2022-06-11    2022      23       47         22 #> 2943 2022-06-18    2022      24       47         27 #> 2944 2022-06-25    2022      25       47         22 #> 2945 2022-07-02    2022      26       47         27 #> 2946 2022-07-09    2022      27       47         12 #> 2947 2022-07-16    2022      28       47         11 #> 2948 2022-07-23    2022      29       47         15 #> 2949 2022-07-30    2022      30       47         20 #> 2950 2022-08-06    2022      31       47         47 #> 2951 2022-08-13    2022      32       47         16 #> 2952 2022-08-20    2022      33       47         15 #> 2953 2022-08-27    2022      34       47         16 #> 2954 2022-09-03    2022      35       47         17 #> 2955 2022-09-10    2022      36       47         24 #> 2956 2022-09-17    2022      37       47         20 #> 2957 2022-09-24    2022      38       47         35 #> 2958 2022-10-01    2022      39       47         41 #> 2959 2022-10-08    2022      40       47         41 #> 2960 2022-10-15    2022      41       47         65 #> 2961 2022-10-22    2022      42       47         94 #> 2962 2022-10-29    2022      43       47        130 #> 2963 2022-11-05    2022      44       47        261 #> 2964 2022-11-12    2022      45       47        317 #> 2965 2022-11-19    2022      46       47        300 #> 2966 2022-11-26    2022      47       47        534 #> 2967 2022-12-03    2022      48       47        660 #> 2968 2022-12-10    2022      49       47        462 #> 2969 2022-12-17    2022      50       47        251 #> 2970 2022-12-24    2022      51       47        225 #> 2971 2022-12-31    2022      52       47        247 #> 2972 2023-01-07    2023       1       47        171 #> 2973 2023-01-14    2023       2       47         86 #> 2974 2023-01-21    2023       3       47         75 #> 2975 2023-01-28    2023       4       47         37 #> 2976 2023-02-04    2023       5       47         41 #> 2977 2023-02-11    2023       6       47         33 #> 2978 2023-02-18    2023       7       47         50 #> 2979 2023-02-25    2023       8       47         43 #> 2980 2023-03-04    2023       9       47         34 #> 2981 2023-03-11    2023      10       47         29 #> 2982 2023-03-18    2023      11       47         29 #> 2983 2023-03-25    2023      12       47         31 #> 2984 2023-04-01    2023      13       47         46 #> 2985 2023-04-08    2023      14       47         28 #> 2986 2023-04-15    2023      15       47         23 #> 2987 2023-04-22    2023      16       47         22 #> 2988 2023-04-29    2023      17       47         20 #> 2989 2023-05-06    2023      18       47         23 #> 2990 2023-05-13    2023      19       47         13 #> 2991 2023-05-20    2023      20       47         17 #> 2992 2023-05-27    2023      21       47         27 #> 2993 2022-02-12    2022       6       48        173 #> 2994 2022-02-19    2022       7       48        284 #> 2995 2022-02-26    2022       8       48        347 #> 2996 2022-03-05    2022       9       48        345 #> 2997 2022-03-12    2022      10       48        453 #> 2998 2022-03-19    2022      11       48        663 #> 2999 2022-03-26    2022      12       48        630 #> 3000 2022-04-02    2022      13       48        507 #> 3001 2022-04-09    2022      14       48        357 #> 3002 2022-04-16    2022      15       48        351 #> 3003 2022-04-23    2022      16       48        337 #> 3004 2022-04-30    2022      17       48        191 #> 3005 2022-05-07    2022      18       48        165 #> 3006 2022-05-14    2022      19       48        156 #> 3007 2022-05-21    2022      20       48        149 #> 3008 2022-05-28    2022      21       48        138 #> 3009 2022-06-04    2022      22       48        125 #> 3010 2022-06-11    2022      23       48        100 #> 3011 2022-06-18    2022      24       48        140 #> 3012 2022-06-25    2022      25       48        120 #> 3013 2022-07-02    2022      26       48         94 #> 3014 2022-07-09    2022      27       48         78 #> 3015 2022-07-16    2022      28       48        114 #> 3016 2022-07-23    2022      29       48         99 #> 3017 2022-07-30    2022      30       48         87 #> 3018 2022-08-06    2022      31       48         83 #> 3019 2022-08-13    2022      32       48         92 #> 3020 2022-08-20    2022      33       48        107 #> 3021 2022-08-27    2022      34       48        111 #> 3022 2022-09-03    2022      35       48         83 #> 3023 2022-09-10    2022      36       48        121 #> 3024 2022-09-17    2022      37       48        122 #> 3025 2022-09-24    2022      38       48        128 #> 3026 2022-10-01    2022      39       48        137 #> 3027 2022-10-08    2022      40       48        239 #> 3028 2022-10-15    2022      41       48        329 #> 3029 2022-10-22    2022      42       48        509 #> 3030 2022-10-29    2022      43       48        744 #> 3031 2022-11-05    2022      44       48        984 #> 3032 2022-11-12    2022      45       48       1129 #> 3033 2022-11-19    2022      46       48       1230 #> 3034 2022-11-26    2022      47       48       1929 #> 3035 2022-12-03    2022      48       48       2139 #> 3036 2022-12-10    2022      49       48       1781 #> 3037 2022-12-17    2022      50       48       1462 #> 3038 2022-12-24    2022      51       48       1225 #> 3039 2022-12-31    2022      52       48       1432 #> 3040 2023-01-07    2023       1       48       1167 #> 3041 2023-01-14    2023       2       48        727 #> 3042 2023-01-21    2023       3       48        458 #> 3043 2023-01-28    2023       4       48        341 #> 3044 2023-02-04    2023       5       48        256 #> 3045 2023-02-11    2023       6       48        270 #> 3046 2023-02-18    2023       7       48        235 #> 3047 2023-02-25    2023       8       48        202 #> 3048 2023-03-04    2023       9       48        167 #> 3049 2023-03-11    2023      10       48        152 #> 3050 2023-03-18    2023      11       48        147 #> 3051 2023-03-25    2023      12       48        135 #> 3052 2023-04-01    2023      13       48        150 #> 3053 2023-04-08    2023      14       48        120 #> 3054 2023-04-15    2023      15       48        110 #> 3055 2023-04-22    2023      16       48        100 #> 3056 2023-04-29    2023      17       48        119 #> 3057 2023-05-06    2023      18       48        110 #> 3058 2023-05-13    2023      19       48         94 #> 3059 2023-05-20    2023      20       48         96 #> 3060 2023-05-27    2023      21       48         75 #> 3061 2022-02-12    2022       6       49          4 #> 3062 2022-02-19    2022       7       49          6 #> 3063 2022-02-26    2022       8       49          6 #> 3064 2022-03-05    2022       9       49         12 #> 3065 2022-03-12    2022      10       49         14 #> 3066 2022-03-19    2022      11       49         18 #> 3067 2022-03-26    2022      12       49          8 #> 3068 2022-04-02    2022      13       49         18 #> 3069 2022-04-09    2022      14       49         13 #> 3070 2022-04-16    2022      15       49         17 #> 3071 2022-04-23    2022      16       49          8 #> 3072 2022-04-30    2022      17       49          3 #> 3073 2022-05-07    2022      18       49         17 #> 3074 2022-05-14    2022      19       49         11 #> 3075 2022-05-21    2022      20       49          7 #> 3076 2022-05-28    2022      21       49          1 #> 3077 2022-06-04    2022      22       49          5 #> 3078 2022-06-11    2022      23       49          3 #> 3079 2022-06-18    2022      24       49          2 #> 3080 2022-06-25    2022      25       49          6 #> 3081 2022-07-02    2022      26       49          5 #> 3082 2022-07-09    2022      27       49          0 #> 3083 2022-07-16    2022      28       49          0 #> 3084 2022-07-23    2022      29       49          0 #> 3085 2022-07-30    2022      30       49          1 #> 3086 2022-08-06    2022      31       49          1 #> 3087 2022-08-13    2022      32       49          2 #> 3088 2022-08-20    2022      33       49          1 #> 3089 2022-08-27    2022      34       49          0 #> 3090 2022-09-03    2022      35       49          1 #> 3091 2022-09-10    2022      36       49          1 #> 3092 2022-09-17    2022      37       49          0 #> 3093 2022-09-24    2022      38       49          1 #> 3094 2022-10-01    2022      39       49          0 #> 3095 2022-10-08    2022      40       49          2 #> 3096 2022-10-15    2022      41       49          1 #> 3097 2022-10-22    2022      42       49          8 #> 3098 2022-10-29    2022      43       49         11 #> 3099 2022-11-05    2022      44       49          5 #> 3100 2022-11-12    2022      45       49         14 #> 3101 2022-11-19    2022      46       49          8 #> 3102 2022-11-26    2022      47       49         29 #> 3103 2022-12-03    2022      48       49         36 #> 3104 2022-12-10    2022      49       49         64 #> 3105 2022-12-17    2022      50       49         41 #> 3106 2022-12-24    2022      51       49         62 #> 3107 2022-12-31    2022      52       49         90 #> 3108 2023-01-07    2023       1       49         54 #> 3109 2023-01-14    2023       2       49         27 #> 3110 2023-01-21    2023       3       49         17 #> 3111 2023-01-28    2023       4       49          5 #> 3112 2023-02-04    2023       5       49          8 #> 3113 2023-02-11    2023       6       49          6 #> 3114 2023-02-18    2023       7       49          4 #> 3115 2023-02-25    2023       8       49          5 #> 3116 2023-03-04    2023       9       49          1 #> 3117 2023-03-11    2023      10       49          7 #> 3118 2023-03-18    2023      11       49          4 #> 3119 2023-03-25    2023      12       49          2 #> 3120 2023-04-01    2023      13       49          4 #> 3121 2023-04-08    2023      14       49          5 #> 3122 2023-04-15    2023      15       49          4 #> 3123 2023-04-22    2023      16       49          5 #> 3124 2023-04-29    2023      17       49          1 #> 3125 2023-05-06    2023      18       49          5 #> 3126 2023-05-13    2023      19       49          7 #> 3127 2023-05-20    2023      20       49          1 #> 3128 2023-05-27    2023      21       49          6 #> 3129 2022-02-12    2022       6       50          0 #> 3130 2022-02-19    2022       7       50          0 #> 3131 2022-02-26    2022       8       50          1 #> 3132 2022-03-05    2022       9       50          0 #> 3133 2022-03-12    2022      10       50          0 #> 3134 2022-03-19    2022      11       50          0 #> 3135 2022-03-26    2022      12       50          8 #> 3136 2022-04-02    2022      13       50          6 #> 3137 2022-04-09    2022      14       50         12 #> 3138 2022-04-16    2022      15       50          8 #> 3139 2022-04-23    2022      16       50          8 #> 3140 2022-04-30    2022      17       50          6 #> 3141 2022-05-07    2022      18       50          7 #> 3142 2022-05-14    2022      19       50          3 #> 3143 2022-05-21    2022      20       50          0 #> 3144 2022-05-28    2022      21       50          2 #> 3145 2022-06-04    2022      22       50          0 #> 3146 2022-06-11    2022      23       50          3 #> 3147 2022-06-18    2022      24       50          2 #> 3148 2022-06-25    2022      25       50          0 #> 3149 2022-07-02    2022      26       50          3 #> 3150 2022-07-09    2022      27       50          1 #> 3151 2022-07-16    2022      28       50          1 #> 3152 2022-07-23    2022      29       50          0 #> 3153 2022-07-30    2022      30       50          0 #> 3154 2022-08-06    2022      31       50          0 #> 3155 2022-08-13    2022      32       50          0 #> 3156 2022-08-20    2022      33       50          0 #> 3157 2022-08-27    2022      34       50          0 #> 3158 2022-09-03    2022      35       50          1 #> 3159 2022-09-10    2022      36       50          0 #> 3160 2022-09-17    2022      37       50          0 #> 3161 2022-09-24    2022      38       50          0 #> 3162 2022-10-01    2022      39       50          0 #> 3163 2022-10-08    2022      40       50          1 #> 3164 2022-10-15    2022      41       50          1 #> 3165 2022-10-22    2022      42       50          0 #> 3166 2022-10-29    2022      43       50          1 #> 3167 2022-11-05    2022      44       50          1 #> 3168 2022-11-12    2022      45       50          0 #> 3169 2022-11-19    2022      46       50          2 #> 3170 2022-11-26    2022      47       50         15 #> 3171 2022-12-03    2022      48       50         34 #> 3172 2022-12-10    2022      49       50         45 #> 3173 2022-12-17    2022      50       50         66 #> 3174 2022-12-24    2022      51       50         66 #> 3175 2022-12-31    2022      52       50         76 #> 3176 2023-01-07    2023       1       50         41 #> 3177 2023-01-14    2023       2       50         10 #> 3178 2023-01-21    2023       3       50         11 #> 3179 2023-01-28    2023       4       50          6 #> 3180 2023-02-04    2023       5       50          1 #> 3181 2023-02-11    2023       6       50          0 #> 3182 2023-02-18    2023       7       50          2 #> 3183 2023-02-25    2023       8       50          2 #> 3184 2023-03-04    2023       9       50          1 #> 3185 2023-03-11    2023      10       50          5 #> 3186 2023-03-18    2023      11       50          3 #> 3187 2023-03-25    2023      12       50          3 #> 3188 2023-04-01    2023      13       50          0 #> 3189 2023-04-08    2023      14       50          0 #> 3190 2023-04-15    2023      15       50          1 #> 3191 2023-04-22    2023      16       50          0 #> 3192 2023-04-29    2023      17       50          2 #> 3193 2023-05-06    2023      18       50          0 #> 3194 2023-05-13    2023      19       50          0 #> 3195 2023-05-20    2023      20       50          2 #> 3196 2023-05-27    2023      21       50          0 #> 3197 2022-02-12    2022       6       51         39 #> 3198 2022-02-19    2022       7       51         37 #> 3199 2022-02-26    2022       8       51         41 #> 3200 2022-03-05    2022       9       51         38 #> 3201 2022-03-12    2022      10       51         33 #> 3202 2022-03-19    2022      11       51         37 #> 3203 2022-03-26    2022      12       51         44 #> 3204 2022-04-02    2022      13       51         45 #> 3205 2022-04-09    2022      14       51         46 #> 3206 2022-04-16    2022      15       51         56 #> 3207 2022-04-23    2022      16       51         51 #> 3208 2022-04-30    2022      17       51         66 #> 3209 2022-05-07    2022      18       51         47 #> 3210 2022-05-14    2022      19       51         47 #> 3211 2022-05-21    2022      20       51         42 #> 3212 2022-05-28    2022      21       51         39 #> 3213 2022-06-04    2022      22       51         48 #> 3214 2022-06-11    2022      23       51         40 #> 3215 2022-06-18    2022      24       51         42 #> 3216 2022-06-25    2022      25       51         37 #> 3217 2022-07-02    2022      26       51         47 #> 3218 2022-07-09    2022      27       51         25 #> 3219 2022-07-16    2022      28       51         28 #> 3220 2022-07-23    2022      29       51         40 #> 3221 2022-07-30    2022      30       51         29 #> 3222 2022-08-06    2022      31       51         25 #> 3223 2022-08-13    2022      32       51         33 #> 3224 2022-08-20    2022      33       51         21 #> 3225 2022-08-27    2022      34       51         24 #> 3226 2022-09-03    2022      35       51         29 #> 3227 2022-09-10    2022      36       51         20 #> 3228 2022-09-17    2022      37       51         27 #> 3229 2022-09-24    2022      38       51         18 #> 3230 2022-10-01    2022      39       51         30 #> 3231 2022-10-08    2022      40       51         50 #> 3232 2022-10-15    2022      41       51         52 #> 3233 2022-10-22    2022      42       51         89 #> 3234 2022-10-29    2022      43       51        186 #> 3235 2022-11-05    2022      44       51        315 #> 3236 2022-11-12    2022      45       51        339 #> 3237 2022-11-19    2022      46       51        273 #> 3238 2022-11-26    2022      47       51        440 #> 3239 2022-12-03    2022      48       51        469 #> 3240 2022-12-10    2022      49       51        338 #> 3241 2022-12-17    2022      50       51        285 #> 3242 2022-12-24    2022      51       51        274 #> 3243 2022-12-31    2022      52       51        280 #> 3244 2023-01-07    2023       1       51        211 #> 3245 2023-01-14    2023       2       51        112 #> 3246 2023-01-21    2023       3       51         72 #> 3247 2023-01-28    2023       4       51         57 #> 3248 2023-02-04    2023       5       51         64 #> 3249 2023-02-11    2023       6       51         63 #> 3250 2023-02-18    2023       7       51         54 #> 3251 2023-02-25    2023       8       51         62 #> 3252 2023-03-04    2023       9       51         56 #> 3253 2023-03-11    2023      10       51         45 #> 3254 2023-03-18    2023      11       51         59 #> 3255 2023-03-25    2023      12       51         51 #> 3256 2023-04-01    2023      13       51         46 #> 3257 2023-04-08    2023      14       51         55 #> 3258 2023-04-15    2023      15       51         29 #> 3259 2023-04-22    2023      16       51         47 #> 3260 2023-04-29    2023      17       51         39 #> 3261 2023-05-06    2023      18       51         47 #> 3262 2023-05-13    2023      19       51         39 #> 3263 2023-05-20    2023      20       51         43 #> 3264 2023-05-27    2023      21       51         46 #> 3265 2022-02-12    2022       6       53          8 #> 3266 2022-02-19    2022       7       53          5 #> 3267 2022-02-26    2022       8       53          7 #> 3268 2022-03-05    2022       9       53         12 #> 3269 2022-03-12    2022      10       53         14 #> 3270 2022-03-19    2022      11       53         19 #> 3271 2022-03-26    2022      12       53         25 #> 3272 2022-04-02    2022      13       53         19 #> 3273 2022-04-09    2022      14       53         26 #> 3274 2022-04-16    2022      15       53         37 #> 3275 2022-04-23    2022      16       53         35 #> 3276 2022-04-30    2022      17       53         41 #> 3277 2022-05-07    2022      18       53         58 #> 3278 2022-05-14    2022      19       53         54 #> 3279 2022-05-21    2022      20       53         65 #> 3280 2022-05-28    2022      21       53         57 #> 3281 2022-06-04    2022      22       53         64 #> 3282 2022-06-11    2022      23       53         59 #> 3283 2022-06-18    2022      24       53         46 #> 3284 2022-06-25    2022      25       53         67 #> 3285 2022-07-02    2022      26       53         50 #> 3286 2022-07-09    2022      27       53         27 #> 3287 2022-07-16    2022      28       53         30 #> 3288 2022-07-23    2022      29       53         23 #> 3289 2022-07-30    2022      30       53         15 #> 3290 2022-08-06    2022      31       53         17 #> 3291 2022-08-13    2022      32       53         13 #> 3292 2022-08-20    2022      33       53         12 #> 3293 2022-08-27    2022      34       53          7 #> 3294 2022-09-03    2022      35       53          8 #> 3295 2022-09-10    2022      36       53         10 #> 3296 2022-09-17    2022      37       53         15 #> 3297 2022-09-24    2022      38       53         10 #> 3298 2022-10-01    2022      39       53          8 #> 3299 2022-10-08    2022      40       53         17 #> 3300 2022-10-15    2022      41       53         17 #> 3301 2022-10-22    2022      42       53         20 #> 3302 2022-10-29    2022      43       53         35 #> 3303 2022-11-05    2022      44       53         42 #> 3304 2022-11-12    2022      45       53        105 #> 3305 2022-11-19    2022      46       53        270 #> 3306 2022-11-26    2022      47       53        605 #> 3307 2022-12-03    2022      48       53        716 #> 3308 2022-12-10    2022      49       53        707 #> 3309 2022-12-17    2022      50       53        709 #> 3310 2022-12-24    2022      51       53        387 #> 3311 2022-12-31    2022      52       53        380 #> 3312 2023-01-07    2023       1       53        208 #> 3313 2023-01-14    2023       2       53        133 #> 3314 2023-01-21    2023       3       53         80 #> 3315 2023-01-28    2023       4       53         56 #> 3316 2023-02-04    2023       5       53         44 #> 3317 2023-02-11    2023       6       53         42 #> 3318 2023-02-18    2023       7       53         37 #> 3319 2023-02-25    2023       8       53         34 #> 3320 2023-03-04    2023       9       53         57 #> 3321 2023-03-11    2023      10       53         42 #> 3322 2023-03-18    2023      11       53         30 #> 3323 2023-03-25    2023      12       53         28 #> 3324 2023-04-01    2023      13       53         33 #> 3325 2023-04-08    2023      14       53         23 #> 3326 2023-04-15    2023      15       53         32 #> 3327 2023-04-22    2023      16       53         16 #> 3328 2023-04-29    2023      17       53         11 #> 3329 2023-05-06    2023      18       53         14 #> 3330 2023-05-13    2023      19       53         12 #> 3331 2023-05-20    2023      20       53         12 #> 3332 2023-05-27    2023      21       53         14 #> 3333 2022-02-12    2022       6       54          5 #> 3334 2022-02-19    2022       7       54         12 #> 3335 2022-02-26    2022       8       54         17 #> 3336 2022-03-05    2022       9       54         30 #> 3337 2022-03-12    2022      10       54         27 #> 3338 2022-03-19    2022      11       54         48 #> 3339 2022-03-26    2022      12       54         21 #> 3340 2022-04-02    2022      13       54         44 #> 3341 2022-04-09    2022      14       54         42 #> 3342 2022-04-16    2022      15       54         49 #> 3343 2022-04-23    2022      16       54         41 #> 3344 2022-04-30    2022      17       54         38 #> 3345 2022-05-07    2022      18       54         23 #> 3346 2022-05-14    2022      19       54         23 #> 3347 2022-05-21    2022      20       54         14 #> 3348 2022-05-28    2022      21       54          8 #> 3349 2022-06-04    2022      22       54          6 #> 3350 2022-06-11    2022      23       54         15 #> 3351 2022-06-18    2022      24       54          7 #> 3352 2022-06-25    2022      25       54          6 #> 3353 2022-07-02    2022      26       54          4 #> 3354 2022-07-09    2022      27       54          7 #> 3355 2022-07-16    2022      28       54          8 #> 3356 2022-07-23    2022      29       54          4 #> 3357 2022-07-30    2022      30       54          1 #> 3358 2022-08-06    2022      31       54          9 #> 3359 2022-08-13    2022      32       54          1 #> 3360 2022-08-20    2022      33       54          2 #> 3361 2022-08-27    2022      34       54          4 #> 3362 2022-09-03    2022      35       54          1 #> 3363 2022-09-10    2022      36       54          0 #> 3364 2022-09-17    2022      37       54          1 #> 3365 2022-09-24    2022      38       54          1 #> 3366 2022-10-01    2022      39       54          1 #> 3367 2022-10-08    2022      40       54          5 #> 3368 2022-10-15    2022      41       54         12 #> 3369 2022-10-22    2022      42       54         23 #> 3370 2022-10-29    2022      43       54         66 #> 3371 2022-11-05    2022      44       54         84 #> 3372 2022-11-12    2022      45       54        130 #> 3373 2022-11-19    2022      46       54        135 #> 3374 2022-11-26    2022      47       54        209 #> 3375 2022-12-03    2022      48       54        320 #> 3376 2022-12-10    2022      49       54        236 #> 3377 2022-12-17    2022      50       54        199 #> 3378 2022-12-24    2022      51       54        149 #> 3379 2022-12-31    2022      52       54        188 #> 3380 2023-01-07    2023       1       54        138 #> 3381 2023-01-14    2023       2       54         37 #> 3382 2023-01-21    2023       3       54         13 #> 3383 2023-01-28    2023       4       54         20 #> 3384 2023-02-04    2023       5       54         23 #> 3385 2023-02-11    2023       6       54         16 #> 3386 2023-02-18    2023       7       54         10 #> 3387 2023-02-25    2023       8       54         13 #> 3388 2023-03-04    2023       9       54          8 #> 3389 2023-03-11    2023      10       54          4 #> 3390 2023-03-18    2023      11       54         10 #> 3391 2023-03-25    2023      12       54         15 #> 3392 2023-04-01    2023      13       54          7 #> 3393 2023-04-08    2023      14       54          9 #> 3394 2023-04-15    2023      15       54          5 #> 3395 2023-04-22    2023      16       54          4 #> 3396 2023-04-29    2023      17       54          5 #> 3397 2023-05-06    2023      18       54          4 #> 3398 2023-05-13    2023      19       54          6 #> 3399 2023-05-20    2023      20       54         11 #> 3400 2023-05-27    2023      21       54          8 #> 3401 2022-02-12    2022       6       55         28 #> 3402 2022-02-19    2022       7       55         29 #> 3403 2022-02-26    2022       8       55         27 #> 3404 2022-03-05    2022       9       55         64 #> 3405 2022-03-12    2022      10       55         46 #> 3406 2022-03-19    2022      11       55         50 #> 3407 2022-03-26    2022      12       55         58 #> 3408 2022-04-02    2022      13       55         55 #> 3409 2022-04-09    2022      14       55         50 #> 3410 2022-04-16    2022      15       55         69 #> 3411 2022-04-23    2022      16       55         51 #> 3412 2022-04-30    2022      17       55         65 #> 3413 2022-05-07    2022      18       55         46 #> 3414 2022-05-14    2022      19       55         36 #> 3415 2022-05-21    2022      20       55         28 #> 3416 2022-05-28    2022      21       55         24 #> 3417 2022-06-04    2022      22       55         14 #> 3418 2022-06-11    2022      23       55         15 #> 3419 2022-06-18    2022      24       55          8 #> 3420 2022-06-25    2022      25       55          8 #> 3421 2022-07-02    2022      26       55          7 #> 3422 2022-07-09    2022      27       55          2 #> 3423 2022-07-16    2022      28       55          1 #> 3424 2022-07-23    2022      29       55          0 #> 3425 2022-07-30    2022      30       55          3 #> 3426 2022-08-06    2022      31       55          5 #> 3427 2022-08-13    2022      32       55          1 #> 3428 2022-08-20    2022      33       55          1 #> 3429 2022-08-27    2022      34       55          3 #> 3430 2022-09-03    2022      35       55          2 #> 3431 2022-09-10    2022      36       55          0 #> 3432 2022-09-17    2022      37       55          0 #> 3433 2022-09-24    2022      38       55          4 #> 3434 2022-10-01    2022      39       55          1 #> 3435 2022-10-08    2022      40       55          1 #> 3436 2022-10-15    2022      41       55          6 #> 3437 2022-10-22    2022      42       55          8 #> 3438 2022-10-29    2022      43       55         17 #> 3439 2022-11-05    2022      44       55         34 #> 3440 2022-11-12    2022      45       55         50 #> 3441 2022-11-19    2022      46       55        109 #> 3442 2022-11-26    2022      47       55        255 #> 3443 2022-12-03    2022      48       55        474 #> 3444 2022-12-10    2022      49       55        478 #> 3445 2022-12-17    2022      50       55        498 #> 3446 2022-12-24    2022      51       55        444 #> 3447 2022-12-31    2022      52       55        476 #> 3448 2023-01-07    2023       1       55        324 #> 3449 2023-01-14    2023       2       55        165 #> 3450 2023-01-21    2023       3       55         96 #> 3451 2023-01-28    2023       4       55         44 #> 3452 2023-02-04    2023       5       55         22 #> 3453 2023-02-11    2023       6       55         24 #> 3454 2023-02-18    2023       7       55          7 #> 3455 2023-02-25    2023       8       55         10 #> 3456 2023-03-04    2023       9       55          3 #> 3457 2023-03-11    2023      10       55         10 #> 3458 2023-03-18    2023      11       55          7 #> 3459 2023-03-25    2023      12       55          8 #> 3460 2023-04-01    2023      13       55          7 #> 3461 2023-04-08    2023      14       55          7 #> 3462 2023-04-15    2023      15       55         12 #> 3463 2023-04-22    2023      16       55          3 #> 3464 2023-04-29    2023      17       55          0 #> 3465 2023-05-06    2023      18       55          8 #> 3466 2023-05-13    2023      19       55          4 #> 3467 2023-05-20    2023      20       55          6 #> 3468 2023-05-27    2023      21       55          3 #> 3469 2022-02-12    2022       6       56          2 #> 3470 2022-02-19    2022       7       56          2 #> 3471 2022-02-26    2022       8       56          5 #> 3472 2022-03-05    2022       9       56          5 #> 3473 2022-03-12    2022      10       56          4 #> 3474 2022-03-19    2022      11       56          4 #> 3475 2022-03-26    2022      12       56          6 #> 3476 2022-04-02    2022      13       56          4 #> 3477 2022-04-09    2022      14       56          8 #> 3478 2022-04-16    2022      15       56          8 #> 3479 2022-04-23    2022      16       56          1 #> 3480 2022-04-30    2022      17       56          5 #> 3481 2022-05-07    2022      18       56          6 #> 3482 2022-05-14    2022      19       56          4 #> 3483 2022-05-21    2022      20       56          4 #> 3484 2022-05-28    2022      21       56          6 #> 3485 2022-06-04    2022      22       56          9 #> 3486 2022-06-11    2022      23       56          6 #> 3487 2022-06-18    2022      24       56          3 #> 3488 2022-06-25    2022      25       56          0 #> 3489 2022-07-02    2022      26       56          2 #> 3490 2022-07-09    2022      27       56          2 #> 3491 2022-07-16    2022      28       56          2 #> 3492 2022-07-23    2022      29       56          0 #> 3493 2022-07-30    2022      30       56          2 #> 3494 2022-08-06    2022      31       56          0 #> 3495 2022-08-13    2022      32       56          0 #> 3496 2022-08-20    2022      33       56          0 #> 3497 2022-08-27    2022      34       56          0 #> 3498 2022-09-03    2022      35       56          0 #> 3499 2022-09-10    2022      36       56          0 #> 3500 2022-09-17    2022      37       56          0 #> 3501 2022-09-24    2022      38       56          0 #> 3502 2022-10-01    2022      39       56          0 #> 3503 2022-10-08    2022      40       56          1 #> 3504 2022-10-15    2022      41       56          3 #> 3505 2022-10-22    2022      42       56          1 #> 3506 2022-10-29    2022      43       56          5 #> 3507 2022-11-05    2022      44       56          8 #> 3508 2022-11-12    2022      45       56         13 #> 3509 2022-11-19    2022      46       56         47 #> 3510 2022-11-26    2022      47       56         45 #> 3511 2022-12-03    2022      48       56         73 #> 3512 2022-12-10    2022      49       56         52 #> 3513 2022-12-17    2022      50       56         35 #> 3514 2022-12-24    2022      51       56         51 #> 3515 2022-12-31    2022      52       56         50 #> 3516 2023-01-07    2023       1       56         33 #> 3517 2023-01-14    2023       2       56         16 #> 3518 2023-01-21    2023       3       56         11 #> 3519 2023-01-28    2023       4       56          5 #> 3520 2023-02-04    2023       5       56          7 #> 3521 2023-02-11    2023       6       56          2 #> 3522 2023-02-18    2023       7       56          1 #> 3523 2023-02-25    2023       8       56          1 #> 3524 2023-03-04    2023       9       56          0 #> 3525 2023-03-11    2023      10       56          3 #> 3526 2023-03-18    2023      11       56          1 #> 3527 2023-03-25    2023      12       56          0 #> 3528 2023-04-01    2023      13       56          1 #> 3529 2023-04-08    2023      14       56          3 #> 3530 2023-04-15    2023      15       56          2 #> 3531 2023-04-22    2023      16       56          0 #> 3532 2023-04-29    2023      17       56          1 #> 3533 2023-05-06    2023      18       56          2 #> 3534 2023-05-13    2023      19       56          1 #> 3535 2023-05-20    2023      20       56          1 #> 3536 2023-05-27    2023      21       56          0 #>  #> $gaps #> [1] FALSE #>  #> $outcome #> [1] \"flu.admits\" #>  #> $resolution #> [1] \"weeks\" #>  #> attr(,\"class\") #> [1] \"signal\"   \"observed\"  fp <- system.file(\"extdata/forecast/2022-10-31-SigSci-TSENS.csv\", package = \"rplanes\") ex_forecast <- read_forecast(fp) to_signal(ex_forecast, outcome = \"flu.admits\", type = \"forecast\", horizon = 4, resolution = \"weeks\") #> $data #> # A tibble: 200 × 6 #>    location date       horizon lower point upper #>    <chr>    <date>     <chr>   <dbl> <dbl> <dbl> #>  1 02       2022-11-05 1           0     6    11 #>  2 02       2022-11-12 2           0     5    12 #>  3 02       2022-11-19 3           0     5    12 #>  4 02       2022-11-26 4           0     5    12 #>  5 04       2022-11-05 1          13    58   103 #>  6 04       2022-11-12 2           9    68   127 #>  7 04       2022-11-19 3           0    72   147 #>  8 04       2022-11-26 4           0    79   167 #>  9 05       2022-11-05 1          67    85   103 #> 10 05       2022-11-12 2          66    90   115 #> # ℹ 190 more rows #>  #> $horizon #> [1] 4 #>  #> $outcome #> [1] \"flu.admits\" #>  #> $resolution #> [1] \"weeks\" #>  #> attr(,\"class\") #> [1] \"signal\"   \"forecast\""},{"path":"https://signaturescience.github.io/rplanes/reference/valid_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate dates — valid_dates","title":"Validate dates — valid_dates","text":"function validates gaps overlaps dates specified \"seed_date\" \"signal_date\". plausibility component analyses, function called validate seed evaluated signal.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/valid_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate dates — valid_dates","text":"","code":"valid_dates(seed_date, signal_date, resolution, warn_incomplete = FALSE)"},{"path":"https://signaturescience.github.io/rplanes/reference/valid_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate dates — valid_dates","text":"seed_date Last date available seed object signal_date First date available signal object resolution Character vector specifying temporal resolution (e.g., \"days\", \"weeks\", \"months\") warn_incomplete Logical whether validation warn completeness seed signal; default FALSE","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/valid_dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate dates — valid_dates","text":"validation return stop() overlap gap seed signal dates. Otherwise function invisibly return TRUE indicating date span valid.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/valid_dates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate dates — valid_dates","text":"","code":"seed_date <- as.Date(\"2023-03-08\") signal_date <- as.Date(\"2023-03-15\") valid_dates(seed_date = seed_date, signal_date = signal_date, resolution=\"weeks\") x <- try(valid_dates(seed_date = seed_date,                           signal_date = signal_date,                           resolution=\"days\"), silent=TRUE) x #> [1] \"Error in valid_dates(seed_date = seed_date, signal_date = signal_date,  : \\n  Daily: There is a gap of more than one day between the seed date and signal date.\\n\" #> attr(,\"class\") #> [1] \"try-error\" #> attr(,\"condition\") #> <simpleError in valid_dates(seed_date = seed_date, signal_date = signal_date,     resolution = \"days\"): Daily: There is a gap of more than one day between the seed date and signal date.> x <- try(valid_dates(seed_date = seed_date,                           signal_date = signal_date,                           resolution=\"months\"), silent=TRUE) x #> [1] \"Error in valid_dates(seed_date = seed_date, signal_date = signal_date,  : \\n  Monthly: The seed date overlaps with signal date.\\n\" #> attr(,\"class\") #> [1] \"try-error\" #> attr(,\"condition\") #> <simpleError in valid_dates(seed_date = seed_date, signal_date = signal_date,     resolution = \"months\"): Monthly: The seed date overlaps with signal date.>"},{"path":"https://signaturescience.github.io/rplanes/reference/valid_location.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate location — valid_location","title":"Validate location — valid_location","text":"unexported helper used inside individual plausibility component functions (e.g., plane_diff()) validate location specified appears input signal seed.","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/valid_location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate location — valid_location","text":"","code":"valid_location(location, input, seed)"},{"path":"https://signaturescience.github.io/rplanes/reference/valid_location.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate location — valid_location","text":"location Character vector location code; location must appear input seed input Input signal data scored; object must forecast seed Prepared seed","code":""},{"path":"https://signaturescience.github.io/rplanes/reference/valid_location.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate location — valid_location","text":"validation return stop() location found seed input signal. Otherwise function invisibly return TRUE indicating location valid.","code":""},{"path":[]},{"path":[]},{"path":"https://signaturescience.github.io/rplanes/news/index.html","id":"better-handling-of-locations-with-all-missing-data-0-0-3","dir":"Changelog","previous_headings":"New features","what":"Better handling of locations with all missing data","title":"rplanes 0.0.3","text":"previous version package, user input signal data included location values missing plane_seed() function proceed. However, lead background characteristics seed used downstream algorithms (e.g., infinite range). now trigger error input data to_signal() includes locations values missing.","code":""},{"path":"https://signaturescience.github.io/rplanes/news/index.html","id":"more-intuitive-plane_repeat-behavior-0-0-3","dir":"Changelog","previous_headings":"New features","what":"More intuitive plane_repeat() behavior","title":"rplanes 0.0.3","text":"PLANES scoring includes plane_repeat() implement “repeat” algorithm (.e., checking evaluated signal creates repeat sequence longer previously observed seed). observed flagging instances values time series . release adjusted algorithm longer flag constant time series implausible.","code":""},{"path":"https://signaturescience.github.io/rplanes/news/index.html","id":"weighting-scheme-constraints-0-0-3","dir":"Changelog","previous_headings":"New features","what":"Weighting scheme constraints","title":"rplanes 0.0.3","text":"release, introduced new feature constrain component weights passed plane_score() values >= 1. adding constraint, saw inconsistent behavior cases weights set < 1. updated function documentation plane_score() “weights” argument reflect change.","code":""},{"path":[]},{"path":"https://signaturescience.github.io/rplanes/news/index.html","id":"documentation-typos-0-0-3","dir":"Changelog","previous_headings":"Bug fixes","what":"Documentation typos","title":"rplanes 0.0.3","text":"release introduces minor fixes typos function documentation README.","code":""},{"path":[]},{"path":[]},{"path":"https://signaturescience.github.io/rplanes/news/index.html","id":"new-plausibility-components-0-0-2","dir":"Changelog","previous_headings":"New features","what":"New plausibility components","title":"rplanes 0.0.2","text":"rplanes package now features two new plausibility components: “shape” “zero”. components delivered function (plane_shape() plane_zero(), respectively) run plane_score() alongside specified components. previously developed components, two operate binary classifications plausibility signal evaluated given location. “shape” component uses series distance calculations characterize “similar” evaluated signal previous windows observed data seed. distance evaluated shape exceeds maximum distance observed shapes signal flagged implausible. “shape” component can used forecast signal. “zero” component assesses whether zeros observed seed given location. , component look zeros evaluated signal. finds , signal flagged implausible. Note “zero” component work either forecast observed signal.","code":""},{"path":"https://signaturescience.github.io/rplanes/news/index.html","id":"rplanes_explorer-app-0-0-2","dir":"Changelog","previous_headings":"New features","what":"rplanes_explorer() app","title":"rplanes 0.0.2","text":"release introduces new feature deliver point--click interface PLANES scoring directly rplanes package. interface written Shiny app, maintained part package can launched using rplanes_explorer() function. user installs rplanes, app (stored inst/ directory) visible host machine. rplanes_explorer() wraps shiny::runApp() points “appDir” argument directory holds rplanes explorer app. Users can take advantage arguments inherited shiny::runApp() (e.g., launch.browser=TRUE open app directly browser window).","code":""},{"path":"https://signaturescience.github.io/rplanes/news/index.html","id":"improved-documentation-0-0-2","dir":"Changelog","previous_headings":"New features","what":"Improved documentation","title":"rplanes 0.0.2","text":"added improvements overall documentation package. particular, release introduces two new vignettes: one describe individual components operate another briefly introduce explore app. addition new vignettes, also implemented handful grammatical wording changes make existing documentation clear concise.","code":""},{"path":"https://signaturescience.github.io/rplanes/news/index.html","id":"hubverse-forecast-format-0-0-2","dir":"Changelog","previous_headings":"New features","what":"“Hubverse” forecast format","title":"rplanes 0.0.2","text":"updates quantile format used forecast hubs, introduced option read_forecast() helper optionally read different formats. function now supports “Hubverse” format used 2023-24 FluSight initiative (https://hubdocs.readthedocs.io/en/latest/user-guide/model-output.html).","code":""},{"path":"https://signaturescience.github.io/rplanes/news/index.html","id":"optional-weighting-scheme-0-0-2","dir":"Changelog","previous_headings":"New features","what":"Optional weighting scheme","title":"rplanes 0.0.2","text":"release introduce new feature users optionally weight importance individual components overall plausibility score. weights must specified named vector passed plane_score() function. argument optional default function use equal weights component.","code":""},{"path":[]},{"path":"https://signaturescience.github.io/rplanes/news/index.html","id":"default-components-with-plane_score-0-0-2","dir":"Changelog","previous_headings":"Bug fixes","what":"Default components with plane_score()","title":"rplanes 0.0.2","text":"Prior release, observed signal evaluated plane_score() strictly require user manually specify compatible components (v0.0.1 “diff” “repeat”). version, plane_score() can now detect type signal “” components selected function identify compatible. example, addition new components (see ), specifying plane_score(..., components = \"\") observed signal automatically use “diff”, “repeat”, “zero” components.","code":""},{"path":"https://signaturescience.github.io/rplanes/news/index.html","id":"hyphens-in-location-names-0-0-2","dir":"Changelog","previous_headings":"Bug fixes","what":"Hyphens in location names","title":"rplanes 0.0.2","text":"plane_score() wrapper uses - (hyphen) combine location component returned list object. release, locations hyphen names (e.g., “United-States”) one internal data manipulation steps function expected. updated internals plane_score() now allow location names may contain hyphens.","code":""},{"path":"https://signaturescience.github.io/rplanes/news/index.html","id":"data-ordering-in-seed-0-0-2","dir":"Changelog","previous_headings":"Bug fixes","what":"Data ordering in seed","title":"rplanes 0.0.2","text":"Previously, plane_seed() function used dates arranged incoming observed signal data. , seeding unexpected behavior. example, dates ordered descending “last value” actually first value chronologically. release, plane_seed() function internally now arranges data case input data ordered ascending date.","code":""},{"path":"https://signaturescience.github.io/rplanes/news/index.html","id":"rplanes-001","dir":"Changelog","previous_headings":"","what":"rplanes 0.0.1","title":"rplanes 0.0.1","text":"Alpha release rplanes package! Several key package features include: read_forecast(): Data prep function read forecasts quantile format used forecasting hubs to_signal(): Constructor “signal” S3 class used package plane_seed(): Function create baseline characteristics observed data given range dates plane_score(): Wrapper run plausibility components independently across locations release, five plausibility components included rplanes. continue develop package add components, update functionality, address issues needed. information features use-cases, refer “Basic Usage” vignette package website R console: vignette(\"basic-usage\", package=\"rplanes\")","code":""}]
